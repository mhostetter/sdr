Search.setIndex({"alltitles":{"16-PSK":[[427,"id2"]],"8-PSK":[[427,"id1"]],"Alpha releases":[[432,"alpha-releases"]],"Amplitude control loops":[[412,"amplitude-control-loops"]],"Analyze PLL closed-loop performance":[[426,"analyze-pll-closed-loop-performance"]],"Antennas":[[5,"antennas"]],"Approximated performance":[[2,"approximated-performance"]],"Arbitrary resampling":[[3,"arbitrary-resampling"]],"BPSK":[[427,"bpsk"]],"Beta releases":[[432,"beta-releases"]],"Bit error rate curves":[[427,"bit-error-rate-curves"]],"Build the docs":[[413,"build-the-docs"]],"Changes":[[431,"changes"],[431,"id1"],[431,"id3"],[431,"id5"],[431,"id7"],[431,"id9"],[431,"id11"],[431,"id13"],[431,"id15"],[431,"id17"],[431,"id19"],[431,"id21"],[431,"id23"],[431,"id25"],[431,"id27"],[431,"id29"],[431,"id31"],[431,"id33"],[431,"id35"],[431,"id37"],[431,"id39"],[431,"id41"],[431,"id43"],[431,"id45"],[431,"id47"],[431,"id49"],[431,"id51"],[431,"id53"]],"Channel capacity":[[5,"channel-capacity"]],"Channel models":[[411,"channel-models"]],"Citation":[[430,"citation"]],"Coding":[[0,null]],"Coherent integration":[[2,"coherent-integration"],[417,null]],"Compare lock time across B_n T":[[426,"compare-lock-time-across-b-n-t"]],"Compare step and frequency response across B_n T":[[426,"compare-step-and-frequency-response-across-b-n-t"]],"Compare step and frequency response across \\zeta":[[426,"compare-step-and-frequency-response-across-zeta"]],"Configuration":[[414,"configuration"],[416,"configuration"]],"Constellations":[[427,"constellations"]],"Construct an input signal, x[n] = x(n T_s)":[[420,"construct-an-input-signal-x-n-x-n-t-s"]],"Constructors":[[10,null],[19,null],[24,null],[32,null],[40,null],[42,"constructors"],[56,null],[62,null],[67,"constructors"],[84,null],[88,null],[90,null],[101,"constructors"],[108,null],[125,"constructors"],[139,null],[149,null],[151,"constructors"],[164,null],[181,null],[183,null],[190,null],[193,null],[195,"constructors"],[211,null],[220,null],[228,"constructors"],[230,null],[232,null],[240,"constructors"],[242,null],[248,"constructors"],[254,"constructors"],[256,null],[278,null]],"Continuous-phase modulations":[[8,"continuous-phase-modulations"]],"Contributors":[[431,"contributors"],[431,"id2"],[431,"id4"],[431,"id6"],[431,"id8"],[431,"id10"],[431,"id12"],[431,"id14"],[431,"id16"],[431,"id18"],[431,"id20"],[431,"id22"],[431,"id24"],[431,"id26"],[431,"id28"],[431,"id30"],[431,"id32"],[431,"id34"],[431,"id36"],[431,"id38"],[431,"id40"],[431,"id42"],[431,"id44"],[431,"id46"],[431,"id48"],[431,"id50"],[431,"id52"],[431,"id54"]],"Conversions":[[1,null]],"Correlation":[[3,"correlation"]],"Correlation sequences":[[410,"correlation-sequences"]],"Create an FIR filter":[[421,"create-an-fir-filter"]],"Create an IIR filter":[[422,"create-an-iir-filter"]],"Data manipulation":[[7,"data-manipulation"]],"Decibels":[[1,"decibels"]],"Design a proportional-plus-integrator (PPI) loop filter":[[426,"design-a-proportional-plus-integrator-ppi-loop-filter"]],"Detect x_1[n]":[[417,"detect-x-1-n"],[424,"detect-x-1-n"]],"Detect x_2[n]":[[417,"detect-x-2-n"],[424,"detect-x-2-n"]],"Detection":[[2,null],[9,"detection"],[418,null]],"Detectors":[[2,"detectors"]],"Digital signal processing":[[3,null],[419,null]],"Distance":[[6,"distance"]],"Documentation":[[413,null]],"Downsample by an irrational rate":[[420,"downsample-by-an-irrational-rate"]],"Downsample the signal by an integer rate":[[420,"downsample-the-signal-by-an-integer-rate"]],"Editable install from local folder":[[415,"editable-install-from-local-folder"]],"Energy":[[6,"energy"]],"Error rate curves":[[427,"error-rate-curves"]],"Estimation":[[4,null]],"Examine frequency domain":[[425,"examine-frequency-domain"]],"Examine the frequency response, H(\\omega)":[[421,"examine-the-frequency-response-h-omega"],[422,"examine-the-frequency-response-h-omega"]],"Examine the group delay, \\tau_g(\\omega)":[[421,"examine-the-group-delay-tau-g-omega"],[422,"examine-the-group-delay-tau-g-omega"]],"Examine the impulse response, h[n]":[[421,"examine-the-impulse-response-h-n"],[422,"examine-the-impulse-response-h-n"]],"Examine the step response, s[n]":[[421,"examine-the-step-response-s-n"],[422,"examine-the-step-response-s-n"]],"Examine the zeros and poles":[[422,"examine-the-zeros-and-poles"]],"Examine time domain":[[425,"examine-time-domain"]],"FIR filtering":[[3,"fir-filtering"]],"FIR filters":[[421,null]],"Farrow arbitrary resampler":[[420,null]],"Features":[[430,"features"]],"Filter analysis":[[9,"filter-analysis"]],"Filter applications":[[3,"filter-applications"]],"Formatting":[[414,null]],"Frequency domain":[[4,"frequency-domain"]],"Frequency-domain":[[9,"frequency-domain"]],"Fully analyze a FIR filter":[[421,"fully-analyze-a-fir-filter"]],"Fully analyze an IIR filter":[[422,"fully-analyze-an-iir-filter"]],"Gaussian":[[428,"gaussian"]],"IID random variables":[[7,"iid-random-variables"]],"IIR filtering":[[3,"iir-filtering"]],"IIR filters":[[422,null]],"Implement a PLL in the phase domain":[[426,"implement-a-pll-in-the-phase-domain"]],"Implement a PLL in the time domain":[[426,"implement-a-pll-in-the-time-domain"]],"Independent random variables":[[7,"independent-random-variables"]],"Install":[[413,"install"],[414,"install"],[416,"install"]],"Install from GitHub":[[415,"install-from-github"]],"Install from PyPI":[[415,"install-from-pypi"]],"Install the dev dependencies":[[415,"install-the-dev-dependencies"]],"Installation":[[415,null],[430,"installation"]],"Interleavers":[[0,"interleavers"]],"Linear modulations":[[8,"linear-modulations"]],"Linear recurrent sequences":[[410,"linear-recurrent-sequences"]],"Link budgets":[[5,null]],"Maximum-length sequences":[[410,"maximum-length-sequences"]],"Measurement":[[6,null]],"Methods":[[19,"methods"],[24,"methods"],[32,"methods"],[40,"methods"],[42,"methods"],[56,"methods"],[62,"methods"],[67,"methods"],[84,"methods"],[88,"methods"],[90,"methods"],[96,null],[101,"methods"],[108,"methods"],[125,"methods"],[149,"methods"],[151,"methods"],[164,"methods"],[181,"methods"],[183,"methods"],[190,"methods"],[193,"methods"],[195,"methods"],[211,"methods"],[220,"methods"],[228,"methods"],[230,"methods"],[232,"methods"],[240,"methods"],[242,"methods"],[248,"methods"],[254,"methods"],[256,"methods"],[273,null],[278,"methods"]],"Miscellaneous":[[7,null]],"Modulation":[[6,"modulation"],[8,null],[9,"modulation"],[423,null]],"Non-coherent integration":[[2,"non-coherent-integration"],[424,null]],"Note":[[20,null],[67,null],[128,null],[153,null],[294,null],[301,null],[315,null],[316,null],[318,null],[367,null],[375,null],[387,null],[388,null],[399,null],[404,null]],"Orthogonal modulations":[[8,"orthogonal-modulations"]],"Path losses":[[5,"path-losses"]],"Peak-to-average power":[[425,null]],"Phase error detectors":[[412,"phase-error-detectors"]],"Phase-locked loops":[[412,"phase-locked-loops"],[426,null]],"Phase-shift keying":[[427,null]],"Plot across excess bandwidth":[[425,"plot-across-excess-bandwidth"]],"Plotting":[[9,null]],"Poles and digital filter stability":[[422,"poles-and-digital-filter-stability"]],"Polynomials":[[125,"polynomials"],[151,"polynomials"]],"Polyphase FIR filtering":[[3,"polyphase-fir-filtering"]],"Power":[[6,"power"]],"Pre-commit":[[414,"pre-commit"]],"Probability":[[7,"probability"]],"Properties":[[10,"properties"],[19,"properties"],[24,"properties"],[32,"properties"],[40,"properties"],[42,"properties"],[56,"properties"],[62,"properties"],[67,"properties"],[84,"properties"],[88,"properties"],[90,"properties"],[108,"properties"],[125,"properties"],[139,"properties"],[149,"properties"],[151,"properties"],[164,"properties"],[181,"properties"],[183,"properties"],[190,"properties"],[193,"properties"],[195,"properties"],[211,"properties"],[220,"properties"],[228,"properties"],[230,"properties"],[232,"properties"],[240,"properties"],[242,"properties"],[248,"properties"],[254,"properties"],[256,"properties"],[278,"properties"]],"Pulse shapes":[[428,null]],"Pulse shaping":[[8,"pulse-shaping"]],"QPSK":[[427,"qpsk"]],"QPSK signal with various pulse shapes":[[425,"qpsk-signal-with-various-pulse-shapes"]],"Raised cosine":[[428,"raised-cosine"]],"Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})":[[420,"resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]],"Run from VS Code":[[414,"run-from-vs-code"],[416,"run-from-vs-code"]],"Run from the command line":[[416,"run-from-the-command-line"]],"Run the formatter":[[414,"run-the-formatter"]],"Run the linter":[[414,"run-the-linter"]],"Scramblers":[[0,"scramblers"]],"See also":[[20,null],[43,null],[44,null],[53,null],[101,null],[103,null],[114,null],[115,null],[116,null],[119,null],[122,null],[125,null],[128,null],[151,null],[153,null],[170,null],[172,null],[178,null],[196,null],[197,null],[207,null],[229,null],[241,null],[249,null],[250,null],[252,null],[255,null],[271,null],[272,null],[284,null],[302,null],[315,null],[316,null],[321,null],[323,null],[324,null],[331,null],[342,null],[346,null],[350,null],[354,null],[358,null],[359,null],[360,null],[384,null],[387,null],[388,null],[392,null],[393,null],[394,null],[399,null],[404,null],[406,null]],"Sequences":[[410,null]],"Serve the docs":[[413,"serve-the-docs"]],"Signal impairments":[[411,"signal-impairments"]],"Signal manipulation":[[3,"signal-manipulation"]],"Signal-to-noise ratio":[[4,"signal-to-noise-ratio"]],"Signal-to-noise ratios":[[1,"signal-to-noise-ratios"]],"Simulation":[[411,null]],"Special methods":[[10,"special-methods"],[24,"special-methods"],[32,"special-methods"],[40,"special-methods"],[56,"special-methods"],[62,"special-methods"],[84,"special-methods"],[88,"special-methods"],[90,"special-methods"],[108,"special-methods"],[125,"special-methods"],[139,"special-methods"],[149,"special-methods"],[164,"special-methods"],[181,"special-methods"],[183,"special-methods"],[190,"special-methods"],[193,"special-methods"],[211,"special-methods"],[220,"special-methods"],[230,"special-methods"],[232,"special-methods"],[242,"special-methods"],[256,"special-methods"],[278,"special-methods"]],"Spectral estimation":[[9,"spectral-estimation"]],"Square-root raised cosine":[[428,"square-root-raised-cosine"]],"State":[[125,"state"],[151,"state"]],"Streaming mode only":[[10,"streaming-mode-only"],[62,"streaming-mode-only"],[84,"streaming-mode-only"],[88,"streaming-mode-only"],[108,"streaming-mode-only"],[139,"streaming-mode-only"],[149,"streaming-mode-only"],[164,"streaming-mode-only"],[181,"streaming-mode-only"],[190,"streaming-mode-only"],[193,"streaming-mode-only"],[230,"streaming-mode-only"],[256,"streaming-mode-only"],[278,"streaming-mode-only"]],"Symbol encoding":[[8,"symbol-encoding"]],"Symbol error rate curves":[[427,"symbol-error-rate-curves"]],"Symbol mapping":[[427,"symbol-mapping"]],"Symbol-mapping sequences":[[410,"symbol-mapping-sequences"]],"Synchronization":[[412,null],[429,null]],"Theoretical performance":[[2,"theoretical-performance"]],"Time domain":[[4,"time-domain"]],"Time-domain":[[9,"time-domain"]],"Unit Tests":[[416,null]],"Upsample by an irrational rate":[[420,"upsample-by-an-irrational-rate"]],"Upsample the signal by an integer rate":[[420,"upsample-the-signal-by-an-integer-rate"]],"Utility":[[9,"utility"]],"Variable nomenclature":[[42,null],[195,null],[228,null],[240,null],[248,null],[254,null]],"Versioning":[[432,null]],"Voltage":[[6,"voltage"]],"Warning":[[298,null],[307,null],[315,null],[316,null],[399,null],[404,null],[406,null]],"sdr":[[430,null]],"v0.0":[[431,null]],"v0.0.1":[[431,"v0-0-1"]],"v0.0.10":[[431,"v0-0-10"]],"v0.0.11":[[431,"v0-0-11"]],"v0.0.12":[[431,"v0-0-12"]],"v0.0.13":[[431,"v0-0-13"]],"v0.0.14":[[431,"v0-0-14"]],"v0.0.15":[[431,"v0-0-15"]],"v0.0.16":[[431,"v0-0-16"]],"v0.0.17":[[431,"v0-0-17"]],"v0.0.18":[[431,"v0-0-18"]],"v0.0.19":[[431,"v0-0-19"]],"v0.0.2":[[431,"v0-0-2"]],"v0.0.20":[[431,"v0-0-20"]],"v0.0.21":[[431,"v0-0-21"]],"v0.0.22":[[431,"v0-0-22"]],"v0.0.23":[[431,"v0-0-23"]],"v0.0.24":[[431,"v0-0-24"]],"v0.0.25":[[431,"v0-0-25"]],"v0.0.26":[[431,"v0-0-26"]],"v0.0.27":[[431,"v0-0-27"]],"v0.0.28":[[431,"v0-0-28"]],"v0.0.3":[[431,"v0-0-3"]],"v0.0.4":[[431,"v0-0-4"]],"v0.0.5":[[431,"v0-0-5"]],"v0.0.6":[[431,"v0-0-6"]],"v0.0.7":[[431,"v0-0-7"]],"v0.0.8":[[431,"v0-0-8"]],"v0.0.9":[[431,"v0-0-9"]]},"docurls":["api/coding/","api/conversions/","api/detection/","api/dsp/","api/estimation/","api/link-budgets/","api/measurement/","api/misc/","api/modulation/","api/plotting/","api/sdr.AGC/","api/sdr.AGC.__call__/","api/sdr.AGC.__init__/","api/sdr.AGC.attack/","api/sdr.AGC.decay/","api/sdr.AGC.gain/","api/sdr.AGC.reference/","api/sdr.AGC.reset/","api/sdr.AGC.streaming/","api/sdr.AdditiveScrambler/","api/sdr.AdditiveScrambler.__init__/","api/sdr.AdditiveScrambler.descramble/","api/sdr.AdditiveScrambler.lfsr/","api/sdr.AdditiveScrambler.scramble/","api/sdr.BinaryErasureChannel/","api/sdr.BinaryErasureChannel.X/","api/sdr.BinaryErasureChannel.Y/","api/sdr.BinaryErasureChannel.__call__/","api/sdr.BinaryErasureChannel.__init__/","api/sdr.BinaryErasureChannel.capacities/","api/sdr.BinaryErasureChannel.capacity/","api/sdr.BinaryErasureChannel.p/","api/sdr.BinarySymmetricChannel/","api/sdr.BinarySymmetricChannel.X/","api/sdr.BinarySymmetricChannel.Y/","api/sdr.BinarySymmetricChannel.__call__/","api/sdr.BinarySymmetricChannel.__init__/","api/sdr.BinarySymmetricChannel.capacities/","api/sdr.BinarySymmetricChannel.capacity/","api/sdr.BinarySymmetricChannel.p/","api/sdr.BlockInterleaver/","api/sdr.BlockInterleaver.__init__/","api/sdr.CPM/","api/sdr.CPM.__init__/","api/sdr.CPM.ber/","api/sdr.CPM.bps/","api/sdr.CPM.demodulate/","api/sdr.CPM.index/","api/sdr.CPM.modulate/","api/sdr.CPM.order/","api/sdr.CPM.phase_offset/","api/sdr.CPM.pulse_shape/","api/sdr.CPM.rx_filter/","api/sdr.CPM.ser/","api/sdr.CPM.sps/","api/sdr.CPM.tx_filter/","api/sdr.Channel/","api/sdr.Channel.__call__/","api/sdr.Channel.__init__/","api/sdr.Channel.capacities/","api/sdr.Channel.capacity/","api/sdr.Channel.reset/","api/sdr.Channelizer/","api/sdr.Channelizer.__call__/","api/sdr.Channelizer.__init__/","api/sdr.Channelizer.channels/","api/sdr.Channelizer.method/","api/sdr.ClosedLoopPLL/","api/sdr.ClosedLoopPLL.Bn/","api/sdr.ClosedLoopPLL.BnT/","api/sdr.ClosedLoopPLL.K0/","api/sdr.ClosedLoopPLL.K1/","api/sdr.ClosedLoopPLL.K2/","api/sdr.ClosedLoopPLL.Kp/","api/sdr.ClosedLoopPLL.__init__/","api/sdr.ClosedLoopPLL.frequency_lock_time/","api/sdr.ClosedLoopPLL.iir/","api/sdr.ClosedLoopPLL.lock_time/","api/sdr.ClosedLoopPLL.omega_3dB/","api/sdr.ClosedLoopPLL.omega_n/","api/sdr.ClosedLoopPLL.phase_error_variance/","api/sdr.ClosedLoopPLL.phase_lock_time/","api/sdr.ClosedLoopPLL.sample_rate/","api/sdr.ClosedLoopPLL.zeta/","api/sdr.Decimator/","api/sdr.Decimator.__init__/","api/sdr.Decimator.method/","api/sdr.Decimator.reset/","api/sdr.Differentiator/","api/sdr.Differentiator.__init__/","api/sdr.DiscreteMemorylessChannel/","api/sdr.DiscreteMemorylessChannel.P/","api/sdr.DiscreteMemorylessChannel.X/","api/sdr.DiscreteMemorylessChannel.Y/","api/sdr.DiscreteMemorylessChannel.__call__/","api/sdr.DiscreteMemorylessChannel.__init__/","api/sdr.EnergyDetector/","api/sdr.EnergyDetector.p_d/","api/sdr.EnergyDetector.p_fa/","api/sdr.EnergyDetector.roc/","api/sdr.EnergyDetector.threshold/","api/sdr.ErrorRate/","api/sdr.ErrorRate.__init__/","api/sdr.ErrorRate.add/","api/sdr.ErrorRate.counts/","api/sdr.ErrorRate.error_rate/","api/sdr.ErrorRate.error_rates/","api/sdr.ErrorRate.errors/","api/sdr.FIR/","api/sdr.FIR.__call__/","api/sdr.FIR.__init__/","api/sdr.FIR.__len__/","api/sdr.FIR.delay/","api/sdr.FIR.flush/","api/sdr.FIR.frequency_response/","api/sdr.FIR.group_delay/","api/sdr.FIR.impulse_response/","api/sdr.FIR.noise_bandwidth/","api/sdr.FIR.order/","api/sdr.FIR.phase_delay/","api/sdr.FIR.reset/","api/sdr.FIR.state/","api/sdr.FIR.step_response/","api/sdr.FIR.streaming/","api/sdr.FIR.taps/","api/sdr.FLFSR/","api/sdr.FLFSR.Taps/","api/sdr.FLFSR.__call__/","api/sdr.FLFSR.__init__/","api/sdr.FLFSR.characteristic_poly/","api/sdr.FLFSR.feedback_poly/","api/sdr.FLFSR.field/","api/sdr.FLFSR.initial_state/","api/sdr.FLFSR.order/","api/sdr.FLFSR.reset/","api/sdr.FLFSR.state/","api/sdr.FLFSR.step/","api/sdr.FLFSR.taps/","api/sdr.FLFSR.to_galois_lfsr/","api/sdr.FarrowResampler/","api/sdr.FarrowResampler.__call__/","api/sdr.FarrowResampler.__init__/","api/sdr.FarrowResampler.delay/","api/sdr.FarrowResampler.flush/","api/sdr.FarrowResampler.order/","api/sdr.FarrowResampler.reset/","api/sdr.FarrowResampler.state/","api/sdr.FarrowResampler.streaming/","api/sdr.FarrowResampler.taps/","api/sdr.FractionalDelay/","api/sdr.FractionalDelay.__init__/","api/sdr.GLFSR/","api/sdr.GLFSR.Taps/","api/sdr.GLFSR.__init__/","api/sdr.GLFSR.characteristic_poly/","api/sdr.GLFSR.feedback_poly/","api/sdr.GLFSR.field/","api/sdr.GLFSR.initial_state/","api/sdr.GLFSR.order/","api/sdr.GLFSR.reset/","api/sdr.GLFSR.state/","api/sdr.GLFSR.step/","api/sdr.GLFSR.taps/","api/sdr.GLFSR.to_fibonacci_lfsr/","api/sdr.IIR/","api/sdr.IIR.ZerosPoles/","api/sdr.IIR.__call__/","api/sdr.IIR.__init__/","api/sdr.IIR.a_taps/","api/sdr.IIR.b_taps/","api/sdr.IIR.frequency_response/","api/sdr.IIR.gain/","api/sdr.IIR.impulse_response/","api/sdr.IIR.noise_bandwidth/","api/sdr.IIR.order/","api/sdr.IIR.poles/","api/sdr.IIR.reset/","api/sdr.IIR.state/","api/sdr.IIR.step_response/","api/sdr.IIR.streaming/","api/sdr.IIR.zeros/","api/sdr.Integrator/","api/sdr.Integrator.__init__/","api/sdr.Interleaver/","api/sdr.Interleaver.__init__/","api/sdr.Interleaver.__len__/","api/sdr.Interleaver.deinterleave/","api/sdr.Interleaver.interleave/","api/sdr.Interleaver.inverse_map/","api/sdr.Interleaver.map/","api/sdr.Interpolator/","api/sdr.Interpolator.__init__/","api/sdr.Interpolator.method/","api/sdr.LeakyIntegrator/","api/sdr.LeakyIntegrator.__init__/","api/sdr.LinearModulation/","api/sdr.LinearModulation.__init__/","api/sdr.LinearModulation.ber/","api/sdr.LinearModulation.bps/","api/sdr.LinearModulation.decide_symbols/","api/sdr.LinearModulation.demodulate/","api/sdr.LinearModulation.map_symbols/","api/sdr.LinearModulation.modulate/","api/sdr.LinearModulation.order/","api/sdr.LinearModulation.phase_offset/","api/sdr.LinearModulation.pulse_shape/","api/sdr.LinearModulation.rx_filter/","api/sdr.LinearModulation.ser/","api/sdr.LinearModulation.sps/","api/sdr.LinearModulation.symbol_map/","api/sdr.LinearModulation.tx_filter/","api/sdr.LoopFilter/","api/sdr.LoopFilter.__call__/","api/sdr.LoopFilter.__init__/","api/sdr.LoopFilter.damping_factor/","api/sdr.LoopFilter.iir/","api/sdr.LoopFilter.integral_gain/","api/sdr.LoopFilter.noise_bandwidth/","api/sdr.LoopFilter.proportional_gain/","api/sdr.LoopFilter.reset/","api/sdr.MLPED/","api/sdr.MLPED.A_received/","api/sdr.MLPED.A_reference/","api/sdr.MLPED.__call__/","api/sdr.MLPED.__init__/","api/sdr.MLPED.data_aided_error/","api/sdr.MLPED.decision_directed_error/","api/sdr.MLPED.gain/","api/sdr.MSK/","api/sdr.MSK.__init__/","api/sdr.MovingAverager/","api/sdr.MovingAverager.__init__/","api/sdr.NCO/","api/sdr.NCO.__call__/","api/sdr.NCO.__init__/","api/sdr.NCO.gain/","api/sdr.NCO.increment/","api/sdr.NCO.offset/","api/sdr.NCO.reset/","api/sdr.NCO.step/","api/sdr.OQPSK/","api/sdr.OQPSK.__init__/","api/sdr.PED/","api/sdr.PED.__call__/","api/sdr.PED.__init__/","api/sdr.PED.data_aided_error/","api/sdr.PED.decision_directed_error/","api/sdr.PED.gain/","api/sdr.PSK/","api/sdr.PSK.__init__/","api/sdr.PSK.ber/","api/sdr.PSK.phase_offset/","api/sdr.PSK.ser/","api/sdr.PSK.symbol_map/","api/sdr.PiMPSK/","api/sdr.PiMPSK.__init__/","api/sdr.PolyphaseFIR/","api/sdr.PolyphaseFIR.__call__/","api/sdr.PolyphaseFIR.__init__/","api/sdr.PolyphaseFIR.branches/","api/sdr.PolyphaseFIR.decimation/","api/sdr.PolyphaseFIR.delay/","api/sdr.PolyphaseFIR.input/","api/sdr.PolyphaseFIR.interpolation/","api/sdr.PolyphaseFIR.order/","api/sdr.PolyphaseFIR.output/","api/sdr.PolyphaseFIR.polyphase_order/","api/sdr.PolyphaseFIR.polyphase_taps/","api/sdr.PolyphaseFIR.rate/","api/sdr.PolyphaseFIR.reset/","api/sdr.PolyphaseFIR.taps/","api/sdr.Q/","api/sdr.Qinv/","api/sdr.ReplicaCorrelator/","api/sdr.ReplicaCorrelator.p_d/","api/sdr.ReplicaCorrelator.p_fa/","api/sdr.ReplicaCorrelator.roc/","api/sdr.ReplicaCorrelator.threshold/","api/sdr.Resampler/","api/sdr.Resampler.__call__/","api/sdr.Resampler.__init__/","api/sdr.Resampler.method/","api/sdr.add_iid_rvs/","api/sdr.add_rvs/","api/sdr.albersheim/","api/sdr.average_power/","api/sdr.awgn/","api/sdr.awgn_capacity/","api/sdr.bandpass_fir/","api/sdr.bandstop_fir/","api/sdr.barker_code/","api/sdr.bec/","api/sdr.bec_capacity/","api/sdr.berlekamp_massey/","api/sdr.biawgn_capacity/","api/sdr.binary_code/","api/sdr.bsc/","api/sdr.bsc_capacity/","api/sdr.clock_error/","api/sdr.coherent_gain/","api/sdr.coherent_gain_loss/","api/sdr.composite_snr/","api/sdr.crest_factor/","api/sdr.db/","api/sdr.diff_decode/","api/sdr.diff_encode/","api/sdr.dmc/","api/sdr.downsample/","api/sdr.ebn0_to_esn0/","api/sdr.ebn0_to_snr/","api/sdr.energy/","api/sdr.esn0_to_ebn0/","api/sdr.esn0_to_snr/","api/sdr.euclidean/","api/sdr.evm/","api/sdr.fdoa_crlb/","api/sdr.foa_crlb/","api/sdr.fractional_delay_fir/","api/sdr.free_space_path_loss/","api/sdr.frequency_offset/","api/sdr.gaussian/","api/sdr.gold_code/","api/sdr.gray_code/","api/sdr.h0/","api/sdr.h1/","api/sdr.hadamard_code/","api/sdr.half_sine/","api/sdr.hamming/","api/sdr.hexdump/","api/sdr.highpass_fir/","api/sdr.iq_imbalance/","api/sdr.is_preferred_pair/","api/sdr.kasami_code/","api/sdr.linear/","api/sdr.lowpass_fir/","api/sdr.m_sequence/","api/sdr.max_frequency_offset/","api/sdr.max_iid_rvs/","api/sdr.max_integration_time/","api/sdr.max_rvs/","api/sdr.min_iid_rvs/","api/sdr.min_rvs/","api/sdr.min_snr/","api/sdr.mix/","api/sdr.multiply_rvs/","api/sdr.multirate_fir/","api/sdr.non_coherent_gain/","api/sdr.p_d/","api/sdr.p_fa/","api/sdr.pack/","api/sdr.papr/","api/sdr.parabolic_antenna/","api/sdr.peak_power/","api/sdr.peak_voltage/","api/sdr.peebles/","api/sdr.plot.ber/","api/sdr.plot.constellation/","api/sdr.plot.correlation/","api/sdr.plot.detector_pdfs/","api/sdr.plot.dft/","api/sdr.plot.dtft/","api/sdr.plot.eye/","api/sdr.plot.filter/","api/sdr.plot.group_delay/","api/sdr.plot.impulse_response/","api/sdr.plot.magnitude_response/","api/sdr.plot.p_d/","api/sdr.plot.periodogram/","api/sdr.plot.phase_delay/","api/sdr.plot.phase_response/","api/sdr.plot.phase_tree/","api/sdr.plot.raster/","api/sdr.plot.roc/","api/sdr.plot.ser/","api/sdr.plot.shannon_limit_ebn0/","api/sdr.plot.spectrogram/","api/sdr.plot.stem/","api/sdr.plot.step_response/","api/sdr.plot.symbol_map/","api/sdr.plot.time_domain/","api/sdr.plot.use_style/","api/sdr.plot.zeros_poles/","api/sdr.polyphase_decompose/","api/sdr.power/","api/sdr.preferred_pairs/","api/sdr.raised_cosine/","api/sdr.rectangular/","api/sdr.rms_bandwidth/","api/sdr.rms_integration_time/","api/sdr.rms_voltage/","api/sdr.root_raised_cosine/","api/sdr.sample_rate_offset/","api/sdr.shannon_limit_ebn0/","api/sdr.shannon_limit_snr/","api/sdr.shnidman/","api/sdr.sinusoid/","api/sdr.snr_to_ebn0/","api/sdr.snr_to_esn0/","api/sdr.subtract_rvs/","api/sdr.tdoa_crlb/","api/sdr.threshold/","api/sdr.threshold_factor/","api/sdr.to_complex_baseband/","api/sdr.to_real_passband/","api/sdr.toa_crlb/","api/sdr.unpack/","api/sdr.upsample/","api/sdr.walsh_code/","api/sdr.wavelength/","api/sdr.zadoff_chu_sequence/","api/sequences/","api/simulation/","api/synchronization/","development/documentation/","development/formatting/","development/installation/","development/unit-tests/","examples/coherent-integration/","examples/detection/","examples/dsp/","examples/farrow-resampler/","examples/fir-filters/","examples/iir-filters/","examples/modulation/","examples/non-coherent-integration/","examples/peak-to-average-power/","examples/phase-locked-loop/","examples/psk/","examples/pulse-shapes/","examples/synchronization/","","release-notes/v0.0/","release-notes/versioning/"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.intersphinx":1,"sphinx_last_updated_by_git":1},"indexentries":{"module":[[3,"module-sdr",false]],"sdr":[[3,"module-sdr",false]]},"objects":{"":[[3,0,0,1,"sdr",""]],"sdr":[[10,1,1,"","AGC","Implements an automatic gain controller (AGC)."],[19,1,1,"","AdditiveScrambler","Implements an additive scrambler."],[24,1,1,"","BinaryErasureChannel","Implements a binary erasure channel (BEC)."],[32,1,1,"","BinarySymmetricChannel","Implements a binary symmetric channel (BSC)."],[40,1,1,"","BlockInterleaver","Implements a block interleaver."],[42,1,1,"","CPM","Implements continuous-phase modulation (CPM)."],[56,1,1,"","Channel","A base class for wireless channels."],[62,1,1,"","Channelizer","Implements a polyphase channelizer FIR filter."],[67,1,1,"","ClosedLoopPLL","A class that defines the performance of a closed-loop PLL."],[84,1,1,"","Decimator","Implements a polyphase decimating FIR filter."],[88,1,1,"","Differentiator","Implements a differentiator FIR filter."],[90,1,1,"","DiscreteMemorylessChannel","Implements a discrete memoryless channel (DMC)."],[96,1,1,"","EnergyDetector","Implements an energy detector."],[101,1,1,"","ErrorRate","A class for measuring bit error rates (BER) or symbol error rates (SER)."],[108,1,1,"","FIR","Implements a finite impulse response (FIR) filter."],[125,1,1,"","FLFSR","Implements a Fibonacci linear-feedback shift register (LFSR)."],[139,1,1,"","FarrowResampler","Implements a piecewise polynomial Farrow arbitrary resampler."],[149,1,1,"","FractionalDelay","Implements a fractional delay FIR filter."],[151,1,1,"","GLFSR","Implements a Galois linear-feedback shift register (LFSR)."],[164,1,1,"","IIR","Implements an infinite impulse response (IIR) filter."],[181,1,1,"","Integrator","Implements an integrator IIR filter."],[183,1,1,"","Interleaver","Implements an arbitrary interleaver."],[190,1,1,"","Interpolator","Implements a polyphase interpolating FIR filter."],[193,1,1,"","LeakyIntegrator","Implements a leaky integrator IIR filter."],[195,1,1,"","LinearModulation","Implements linear phase/amplitude modulation with arbitrary symbol mapping."],[211,1,1,"","LoopFilter","Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."],[220,1,1,"","MLPED","Implements a maximum-likelihood phase error detector (ML-PED)."],[228,1,1,"","MSK","Implements minimum-shift keying (MSK) modulation and demodulation."],[230,1,1,"","MovingAverager","Implements a moving average FIR filter."],[232,1,1,"","NCO","Implements a numerically controlled oscillator (NCO)."],[240,1,1,"","OQPSK","Implements offset quadrature phase-shift keying (OQPSK) modulation and demodulation."],[242,1,1,"","PED","Implements a heuristic phase error detector (PED)."],[248,1,1,"","PSK","Implements phase-shift keying (PSK) modulation and demodulation."],[254,1,1,"","PiMPSK","Implements $pi/M$ phase-shift keying ($pi/M$ PSK) modulation and demodulation."],[256,1,1,"","PolyphaseFIR","Implements a generic polyphase FIR filter."],[271,6,1,"","Q","Computes the CCDF of the standard normal distribution $mathcal{N}(0, 1)$.."],[272,6,1,"","Qinv","Computes the inverse CCDF of the standard normal distribution $mathcal{N}(0, 1)$."],[273,1,1,"","ReplicaCorrelator","Implements an clairvoyant replica-correlator detector."],[278,1,1,"","Resampler","Implements a polyphase rational resampling FIR filter."],[282,6,1,"","add_iid_rvs","Numerically calculates the distribution of the sum of $n$ i.i.d. random variables $X_i$."],[283,6,1,"","add_rvs","Numerically calculates the distribution of the sum of two independent random variables $X$ and $Y$."],[284,6,1,"","albersheim","Estimates the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$."],[285,6,1,"","average_power","Measures the average power of a time-domain signal $x[n]$."],[286,6,1,"","awgn","Adds additive white Gaussian noise (AWGN) to the time-domain signal $x[n]$."],[287,6,1,"","awgn_capacity","Calculates the capacity of an additive white Gaussian noise (AWGN) channel."],[288,6,1,"","bandpass_fir","Designs a bandpass FIR filter impulse response $h[n]$ using the window method."],[289,6,1,"","bandstop_fir","Designs a bandstop FIR filter impulse response $h[n]$ using the window method."],[290,6,1,"","barker_code","Generates the Barker code/sequence of length $n$."],[291,6,1,"","bec","Passes the binary input sequence $x$ through a binary erasure channel (BEC)."],[292,6,1,"","bec_capacity","Calculates the capacity of a binary erasure channel (BEC)."],[293,6,1,"","berlekamp_massey","Finds the minimal polynomial $c(x)$ that produces the linear recurrent sequence $y$."],[294,6,1,"","biawgn_capacity","Calculates the capacity of a binary-input additive white Gaussian noise (BI-AWGN) channel."],[295,6,1,"","binary_code","Generates a binary code of length $n = 2^m$."],[296,6,1,"","bsc","Passes the binary input sequence $x$ through a binary symmetric channel (BSC)."],[297,6,1,"","bsc_capacity","Calculates the capacity of a binary symmetric channel (BSC)."],[298,6,1,"","clock_error","Applies a clock error to the time-domain signal $x[n]$."],[299,6,1,"","coherent_gain","Computes the SNR improvement by coherent integration."],[300,6,1,"","coherent_gain_loss","Computes the coherent gain loss (CGL) given a time or frequency offset."],[301,6,1,"","composite_snr","Calculates the signal-to-noise ratio (SNR) of the product of two signals."],[302,6,1,"","crest_factor","Measures the crest factor of a time-domain signal $x[n]$."],[303,6,1,"","db","Converts from linear units to decibels."],[304,6,1,"","diff_decode","Differentially decodes the input data $y[k]$."],[305,6,1,"","diff_encode","Differentially encodes the input data $x[k]$."],[306,6,1,"","dmc","Passes the input sequence $x$ through a discrete memoryless channel (DMC)."],[307,6,1,"","downsample","Downsamples the time-domain signal $x[n]$ by the factor $r$, by discarding $r-1$ samples every $r$ samples."],[308,6,1,"","ebn0_to_esn0","Converts from $E_b/N_0$ to $E_s/N_0$."],[309,6,1,"","ebn0_to_snr","Converts from $E_b/N_0$ to $S/N$."],[310,6,1,"","energy","Measures the energy of a time-domain signal $x[n]$."],[311,6,1,"","esn0_to_ebn0","Converts from $E_s/N_0$ to $E_b/N_0$."],[312,6,1,"","esn0_to_snr","Converts from $E_s/N_0$ to $S/N$."],[313,6,1,"","euclidean","Measures the Euclidean distance between two signals $x[n]$ and $y[n]$."],[314,6,1,"","evm","Measures the error-vector magnitude (EVM) of the complex symbols $hat{x}[k]$."],[315,6,1,"","fdoa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on frequency difference of arrival (FDOA) estimation."],[316,6,1,"","foa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on frequency of arrival (FOA) estimation."],[317,6,1,"","fractional_delay_fir","Designs a fractional delay FIR filter impulse response $h[n]$ using the Kaiser window method."],[318,6,1,"","free_space_path_loss","Calculates the free-space path loss (FSPL) in dB."],[319,6,1,"","frequency_offset","Applies a frequency and phase offset to the time-domain signal $x[n]$."],[320,6,1,"","gaussian","Returns a Gaussian pulse shape."],[321,6,1,"","gold_code","Generates the Gold code/sequence of length $n = 2^m - 1$."],[322,6,1,"","gray_code","Generates a Gray code of length $n = 2^m$."],[323,6,1,"","h0","Computes the statistical distribution under the null hypothesis $mathcal{H}_0$."],[324,6,1,"","h1","Computes the statistical distribution under the alternative hypothesis $mathcal{H}_1$."],[325,6,1,"","hadamard_code","Generates the Hadamard code/sequence of length $n = 2^m$."],[326,6,1,"","half_sine","Returns a half-sine pulse shape."],[327,6,1,"","hamming","Measures the Hamming distance between two signals $x[n]$ and $y[n]$."],[328,6,1,"","hexdump","Returns a hexdump of the specified data."],[329,6,1,"","highpass_fir","Designs a highpass FIR filter impulse response $h[n]$ using the window method."],[330,6,1,"","iq_imbalance","Applies IQ imbalance to the complex time-domain signal $x[n]$."],[331,6,1,"","is_preferred_pair","Determines if two primitive polynomials generate preferred pair $m$-sequences."],[332,6,1,"","kasami_code","Generates the Kasami code/sequence of length $n = 2^m - 1$."],[333,6,1,"","linear","Converts from decibels to linear units."],[334,6,1,"","lowpass_fir","Designs a lowpass FIR filter impulse response $h[n]$ using the window method."],[335,6,1,"","m_sequence","Generates a maximum-length sequence ($m$-sequence) from a Fibonacci linear feedback shift register (LFSR)."],[336,6,1,"","max_frequency_offset","Computes the maximum frequency offset that produces at most the provided coherent gain loss (CGL)."],[337,6,1,"","max_iid_rvs","Numerically calculates the distribution of the maximum of $n$ i.i.d. random variables $X_i$."],[338,6,1,"","max_integration_time","Computes the maximum integration time that produces at most the provided coherent gain loss (CGL)."],[339,6,1,"","max_rvs","Numerically calculates the distribution of the maximum of two independent random variables $X$ and $Y$."],[340,6,1,"","min_iid_rvs","Numerically calculates the distribution of the minimum of $n$ i.i.d. random variables $X_i$."],[341,6,1,"","min_rvs","Numerically calculates the distribution of the minimum of two independent random variables $X$ and $Y$."],[342,6,1,"","min_snr","Computes the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$."],[343,6,1,"","mix","Mixes a time-domain signal with a complex exponential or real sinusoid."],[344,6,1,"","multiply_rvs","Numerically calculates the distribution of the product of two independent random variables $X$ and $Y$."],[345,6,1,"","multirate_fir","Designs a multirate FIR filter impulse response $h[n]$ using the Kaiser window method."],[346,6,1,"","non_coherent_gain","Computes the SNR improvement by non-coherently integrating $N_{nc}$ samples."],[347,6,1,"","p_d","Computes the theoretical probability of detection $P_d$."],[348,6,1,"","p_fa","Computes the theoretical probability of false alarm $P_{fa}$."],[349,6,1,"","pack","Packs a binary array into an array with multiple bits per element."],[350,6,1,"","papr","Measures the peak-to-average power ratio (PAPR) of a time-domain signal $x[n]$."],[351,6,1,"","parabolic_antenna","Calculates the gain $G$ and beamwidth $theta$ of a parabolic reflector."],[352,6,1,"","peak_power","Measures the peak power of a time-domain signal $x[n]$."],[353,6,1,"","peak_voltage","Measures the peak voltage of a time-domain signal $x[n]$."],[354,6,1,"","peebles","Estimates the non-coherent integration gain for a given probability of detection $P_d$ and false alarm $P_{fa}$."],[382,6,1,"","polyphase_decompose","Decomposes the prototype filter taps $h[n]$ into the polyphase matrix $h_i[n]$ with $B$ phases."],[383,6,1,"","power","Measures the instantaneous power of a time-domain signal $x[n]$."],[384,6,1,"","preferred_pairs","Generates primitive polynomials of degree $m$ that produce preferred pair $m$-sequences."],[385,6,1,"","raised_cosine","Returns a raised cosine (RC) pulse shape."],[386,6,1,"","rectangular","Returns a rectangular pulse shape."],[387,6,1,"","rms_bandwidth","Measures the RMS bandwidth $B_{text{rms}}$ of the signal $x[n]$."],[388,6,1,"","rms_integration_time","Measures the RMS integration time $T_{text{rms}}$ of the signal $x[n]$."],[389,6,1,"","rms_voltage","Measures the root-mean-square (RMS) voltage of a time-domain signal $x[n]$."],[390,6,1,"","root_raised_cosine","Returns a square root raised cosine (SRRC) pulse shape."],[391,6,1,"","sample_rate_offset","Applies a sample rate offset to the time-domain signal $x[n]$."],[392,6,1,"","shannon_limit_ebn0","Calculates the Shannon limit on the bit energy-to-noise power spectral density ratio $E_b/N_0$ in the AWGN channel."],[393,6,1,"","shannon_limit_snr","Calculates the Shannon limit on the signal-to-noise ratio $S/N$ in the AWGN channel."],[394,6,1,"","shnidman","Estimates the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$ for the Swerling target model."],[395,6,1,"","sinusoid","Generates a complex exponential or real sinusoid."],[396,6,1,"","snr_to_ebn0","Converts from $S/N$ to $E_b/N_0$."],[397,6,1,"","snr_to_esn0","Converts from $S/N$ to $E_s/N_0$."],[398,6,1,"","subtract_rvs","Numerically calculates the distribution of the difference of two independent random variables $X$ and $Y$."],[399,6,1,"","tdoa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on time difference of arrival (TDOA) estimation."],[400,6,1,"","threshold","Computes the theoretical detection threshold $gamma$."],[401,6,1,"","threshold_factor","Computes the theoretical detection threshold factor $alpha$."],[402,6,1,"","to_complex_baseband","Converts a real passband signal to a complex baseband signal."],[403,6,1,"","to_real_passband","Converts a complex baseband signal to a real passband signal."],[404,6,1,"","toa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on time of arrival (TOA) estimation."],[405,6,1,"","unpack","Unpacks an array with multiple bits per element into a binary array."],[406,6,1,"","upsample","Upsamples the time-domain signal $x[n]$ by the factor $r$, by inserting $r-1$ zeros between each sample."],[407,6,1,"","walsh_code","Generates the Walsh code/sequence of length $n = 2^m$."],[408,6,1,"","wavelength","Calculates the wavelength $lambda$ of an electromagnetic wave with frequency $f$."],[409,6,1,"","zadoff_chu_sequence","Generates the root-$u$ Zadoff-Chu sequence of length $N$."]],"sdr.AGC":[[11,2,1,"","__call__","Performs automatic gain control on the input signal."],[12,2,1,"","__init__","Creates an automatic gain controller (AGC)."],[13,4,1,"","attack","(Settable) The attack rate $alpha$."],[14,4,1,"","decay","(Settable) The decay rate $beta$."],[15,4,1,"","gain","The current linear gain."],[16,4,1,"","reference","(Settable) The desired output magnitude."],[17,2,1,"","reset","Resets the AGC gain. Only useful when using streaming mode."],[18,4,1,"","streaming","Indicates whether the AGC is in streaming mode."]],"sdr.AGC.__call__":[[11,3,2,"p-x","x","The input signal $x[n]$."]],"sdr.AGC.__init__":[[12,3,2,"p-attack","attack","The attack rate $alpha$."],[12,3,2,"p-decay","decay","The decay rate $beta$."],[12,3,2,"p-reference","reference","The desired output magnitude."],[12,3,2,"p-streaming","streaming","Indicates whether the AGC operates in streaming mode."]],"sdr.AGC.reset":[[17,3,2,"p-gain","gain","The initial linear gain of the AGC."]],"sdr.AdditiveScrambler":[[20,2,1,"","__init__","Creates an additive scrambler."],[21,2,1,"","descramble","Descrambles the binary input sequence $y[n]$."],[22,4,1,"","lfsr","The Fibonacci LFSR used for scrambling."],[23,2,1,"","scramble","Scrambles the binary input sequence $x[n]$."]],"sdr.AdditiveScrambler.__init__":[[20,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[20,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[20,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.AdditiveScrambler.descramble":[[21,3,2,"p-y","y","The binary input sequence $y[n]$."]],"sdr.AdditiveScrambler.scramble":[[23,3,2,"p-x","x","The binary input sequence $x[n]$."]],"sdr.BinaryErasureChannel":[[25,4,1,"","X","The input alphabet $mathcal{X} = {0, 1}$ of the BEC channel."],[26,4,1,"","Y","The output alphabet $mathcal{Y} = {0, 1, e}$ of the BEC channel. Erasures $e$ are represented by -1."],[27,2,1,"","__call__","Passes the binary input sequence $x$ through the channel."],[28,2,1,"","__init__","Creates a new binary erasure channel (BEC)."],[29,2,1,"","capacities","Calculates the capacity of BEC channels."],[30,4,1,"","capacity","The capacity $C$ of the instantiated channel in bits/channel use."],[31,4,1,"","p","The erasure probability $p$ of the BEC channel."]],"sdr.BinaryErasureChannel.__call__":[[27,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X} = {0, 1}$."]],"sdr.BinaryErasureChannel.__init__":[[28,3,2,"p-p","p","The erasure probability $p$ of the BEC channel."],[28,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.BinaryErasureChannel.capacities":[[29,3,2,"","p","Calculates the capacity of BEC channels."]],"sdr.BinarySymmetricChannel":[[33,4,1,"","X","The input alphabet $mathcal{X} = {0, 1}$ of the BSC channel."],[34,4,1,"","Y","The output alphabet $mathcal{Y} = {0, 1}$ of the BSC channel."],[35,2,1,"","__call__","Passes the binary input sequence $x$ through the channel."],[36,2,1,"","__init__","Creates a new binary symmetric channel (BSC)."],[37,2,1,"","capacities","Calculates the capacity of BSC channels."],[38,4,1,"","capacity","The capacity $C$ of the instantiated channel in bits/channel use."],[39,4,1,"","p","The transition probability $p$ of the BSC channel."]],"sdr.BinarySymmetricChannel.__call__":[[35,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X} = {0, 1}$."]],"sdr.BinarySymmetricChannel.__init__":[[36,3,2,"p-p","p","The transition probability $p$ of the BSC channel."],[36,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.BinarySymmetricChannel.capacities":[[37,3,2,"","p","Calculates the capacity of BSC channels."]],"sdr.BlockInterleaver":[[41,2,1,"","__init__","Creates a $R times C$ block interleaver."]],"sdr.BlockInterleaver.__init__":[[41,3,2,"p-cols","cols","The number of columns $C$ in the interleaver."],[41,3,2,"p-rows","rows","The number of rows $R$ in the interleaver."]],"sdr.CPM":[[43,2,1,"","__init__","Creates a new continuous-phase modulation object."],[44,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[45,4,1,"","bps","The number of coded bits per symbol $k = log_2 M$."],[46,2,1,"","demodulate","Demodulates the pulse-shaped complex samples into decimal symbol decisions."],[47,4,1,"","index","The modulation index $h$."],[48,2,1,"","modulate","Modulates the decimal symbols $s[k]$ into pulse-shaped complex samples $x[n]$."],[49,4,1,"","order","The modulation order $M = 2^k$."],[50,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[51,4,1,"","pulse_shape","The pulse shape $h[n]$ of the instantaneous frequency of the signal."],[52,4,1,"","rx_filter","The receive decimating matched filter. The filter coefficients are matched to the pulse shape $h[-n]^*$."],[53,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[54,4,1,"","sps","The number of samples per symbol $f_s / f_{sym}$."],[55,4,1,"","tx_filter","The transmit interpolating pulse shaping filter. The filter coefficients are the pulse shape $h[n]$."]],"sdr.CPM.__init__":[[43,3,2,"p-index","index","The modulation index $h$."],[43,3,2,"p-order","order","The modulation order $M = 2^k$."],[43,3,2,"p-phase_offset","phase_offset","A phase offset $phi$ in degrees."],[43,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the instantaneous frequency of the signal."],[43,3,2,"p-span","span","The span of the pulse shape in symbols."],[43,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[43,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.CPM.ber":[[44,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.CPM.demodulate":[[46,3,2,"p-x_tilde","x_tilde","The received pulse-shaped complex samples $tilde{x}[n]$ to demodulate, with sps samples per symbol and length sps * s_hat.size + pulse_shape.size - 1."]],"sdr.CPM.modulate":[[48,3,2,"p-s","s","The decimal symbols $s[k]$ to modulate, $0$ to $M-1$."]],"sdr.CPM.ser":[[53,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.Channel":[[57,2,1,"","__call__","Passes the input sequence $x$ through the channel."],[58,2,1,"","__init__","Creates a new channel."],[59,2,1,"","capacities","Computes the channel capacity given the channel configuration."],[60,4,1,"","capacity","The channel capacity $C$ in bits/2D of the instantiated channel."],[61,2,1,"","reset","Resets the channel with a new seed."]],"sdr.Channel.__call__":[[57,3,2,"p-x","x","The input sequence $x$."]],"sdr.Channel.__init__":[[58,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.Channel.reset":[[61,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.Channelizer":[[63,2,1,"","__call__","Channelizes the input signal $x[n]$ with the polyphase FIR filter."],[64,2,1,"","__init__","Creates a polyphase FIR channelizing filter."],[65,4,1,"","channels","The number of channels $C$."],[66,4,1,"","method","The method used to design the polyphase channelizing filter."]],"sdr.Channelizer.__call__":[[63,3,2,"p-mode","mode","The non-streaming convolution mode."],[63,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.Channelizer.__init__":[[64,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[64,3,2,"p-channels","channels","The number of channels $C$."],[64,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[64,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[64,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.ClosedLoopPLL":[[68,4,1,"","Bn","The noise bandwidth $B_n$ of the PLL in Hz."],[69,4,1,"","BnT","The normalized noise bandwidth $B_n T$ of the PLL."],[70,4,1,"","K0","The NCO gain $K_0$."],[71,4,1,"","K1","The proportional gain $K_1$ of the loop filter."],[72,4,1,"","K2","The integral gain $K_2$ of the loop filter."],[73,4,1,"","Kp","The phase error detector (PED) gain $K_p$."],[74,2,1,"","__init__","Creates a closed-loop PLL analysis object."],[75,2,1,"","frequency_lock_time","Returns the frequency lock time of the PLL."],[76,4,1,"","iir","The IIR filter that represents the closed-loop transfer function of the PLL."],[77,2,1,"","lock_time","Returns the lock time of the PLL."],[78,4,1,"","omega_3dB","The 3-dB bandwidth $omega_{3textrm{dB}}$ of the PLL in radians/s."],[79,4,1,"","omega_n","The natural frequency $omega_n$ of the PLL in radians/s."],[80,2,1,"","phase_error_variance","Returns the variance of the phase error of the PLL in steady state."],[81,2,1,"","phase_lock_time","Returns the phase lock time of the PLL."],[82,4,1,"","sample_rate","The sample rate $f_s$ of the PLL in samples/s."],[83,4,1,"","zeta","The damping factor $zeta$ of the PLL."]],"sdr.ClosedLoopPLL.__init__":[[74,3,2,"p-K0","K0","The NCO gain $K_0$."],[74,3,2,"p-Kp","Kp","The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."],[74,3,2,"p-damping_factor","damping_factor","The damping factor $zeta$ of the loop filter."],[74,3,2,"p-noise_bandwidth","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."],[74,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the PLL in Hz."]],"sdr.ClosedLoopPLL.frequency_lock_time":[[75,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ of the input signal in Hz."]],"sdr.ClosedLoopPLL.lock_time":[[77,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ of the input signal in Hz."]],"sdr.ClosedLoopPLL.phase_error_variance":[[80,3,2,"p-cn0","cn0","The carrier-to-noise density ratio $C/N_0$ of the input signal in dB-Hz."]],"sdr.Decimator":[[85,2,1,"","__init__","Creates a polyphase FIR decimating filter."],[86,4,1,"","method","The method used to design the polyphase decimating filter."],[87,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."]],"sdr.Decimator.__init__":[[85,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[85,3,2,"p-decimation","decimation","The decimation rate $Q$."],[85,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[85,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[85,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.Differentiator":[[89,2,1,"","__init__","Creates a differentiator FIR filter."]],"sdr.Differentiator.__init__":[[89,3,2,"p-order","order","The order of the FIR differentiator $N$."],[89,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[89,3,2,"p-window","window","The SciPy window definition."]],"sdr.DiscreteMemorylessChannel":[[91,4,1,"","P","The transition probability matrix $P$ of the DMC channel."],[92,4,1,"","X","The input alphabet $mathcal{X}$ of the DMC channel."],[93,4,1,"","Y","The output alphabet $mathcal{Y}$ of the DMC channel."],[94,2,1,"","__call__","Passes the input sequence $x$ through the channel."],[95,2,1,"","__init__","Creates a new discrete memoryless channel (DMC)."]],"sdr.DiscreteMemorylessChannel.__call__":[[94,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X}$."]],"sdr.DiscreteMemorylessChannel.__init__":[[95,3,2,"p-P","P","The $m times n$ transition probability matrix $P$, where $P = Pr(Y = y_j | X = x_i)$."],[95,3,2,"p-X","X","The input alphabet $mathcal{X}$ of size $m$."],[95,3,2,"p-Y","Y","The output alphabet $mathcal{Y}$ of size $n$."],[95,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.EnergyDetector":[[97,2,1,"","p_d","Computes the probability of detection $P_d$."],[98,2,1,"","p_fa","Computes the probability of false alarm $P_{fa}$."],[99,2,1,"","roc","Computes the receiver operating characteristic (ROC) curve."],[100,2,1,"","threshold","Computes the threshold $gamma'$."]],"sdr.EnergyDetector.p_d":[[97,3,2,"p-complex","complex","Indicates whether the signal is real or complex."],[97,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[97,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[97,3,2,"p-snr","snr","The received signal-to-noise ratio $sigma_s^2 / sigma^2$ in dB."]],"sdr.EnergyDetector.p_fa":[[98,3,2,"p-complex","complex","Indicates whether the signal is complex."],[98,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[98,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."],[98,3,2,"p-threshold","threshold","The threshold $gamma'$."]],"sdr.EnergyDetector.roc":[[99,3,2,"p-complex","complex","Indicates whether the signal is complex."],[99,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[99,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[99,3,2,"p-snr","snr","The received signal-to-noise ratio $sigma_s^2 / sigma^2$ in dB."]],"sdr.EnergyDetector.threshold":[[100,3,2,"p-complex","complex","Indicates whether the signal is complex."],[100,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[100,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[100,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."]],"sdr.ErrorRate":[[102,2,1,"","__init__","Creates a new error rate tabulation object."],[103,2,1,"","add","Measures the number of bit or symbol errors at the given signal-to-noise ratio (SNR)."],[104,2,1,"","counts","Returns the number of counts at the specified signal-to-noise ratio (SNR)."],[105,2,1,"","error_rate","Returns the error rate at the specified signal-to-noise ratio (SNR)."],[106,2,1,"","error_rates","Returns all signal-to-noise ratios (SNRs) in ascending order and their corresponding error rates."],[107,2,1,"","errors","Returns the number of errors at the specified signal-to-noise ratio (SNR)."]],"sdr.ErrorRate.add":[[103,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."],[103,3,2,"p-x","x","The transmitted bits or symbols $x[k]$."],[103,3,2,"p-x_hat","x_hat","The received bits or symbols $hat{x}[k]$."]],"sdr.ErrorRate.counts":[[104,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.ErrorRate.error_rate":[[105,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.ErrorRate.errors":[[107,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.FIR":[[109,2,1,"","__call__","Filters the input signal $x[n]$ with the FIR filter."],[110,2,1,"","__init__","Creates an FIR filter."],[111,2,1,"","__len__","Returns the filter length $N + 1$."],[112,4,1,"","delay","The delay of the FIR filter $d = lfloor frac{N + 1}{2} rfloor$ in samples."],[113,2,1,"","flush","Flushes the filter state by passing zeros through the filter. Only useful when using streaming mode."],[114,2,1,"","frequency_response","Returns the frequency response $H(omega)$ of the FIR filter."],[115,2,1,"","group_delay","Returns the group delay $tau_g(omega)$ of the FIR filter."],[116,2,1,"","impulse_response","Returns the impulse response $h[n]$ of the FIR filter."],[117,2,1,"","noise_bandwidth","Returns the noise bandwidth $B_n$ of the FIR filter."],[118,4,1,"","order","The order of the FIR filter $N$."],[119,2,1,"","phase_delay","Returns the phase delay $tau_{phi}(omega)$ of the FIR filter."],[120,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[121,4,1,"","state","The filter state consisting of the previous $N$ inputs."],[122,2,1,"","step_response","Returns the step response $s[n]$ of the FIR filter."],[123,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[124,4,1,"","taps","The feedforward taps $h[n]$ with length $N + 1$."]],"sdr.FIR.__call__":[[109,3,2,"p-mode","mode","The non-streaming convolution mode."],[109,3,2,"p-x","x","The input signal $x[n]$ with length $L$."]],"sdr.FIR.__init__":[[110,3,2,"p-h","h","The feedforward coefficients $h[n]$."],[110,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.FIR.frequency_response":[[114,3,2,"p-decades","decades","Only used if freqs is an integer."],[114,3,2,"p-freqs","freqs","The frequency specification."],[114,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."],[114,3,2,"p-whole","whole","Only used if freqs is an integer."]],"sdr.FIR.group_delay":[[115,3,2,"p-n","n","The number of samples in the group delay."],[115,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.impulse_response":[[116,3,2,"p-n","n","The number of samples to return."]],"sdr.FIR.noise_bandwidth":[[117,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.phase_delay":[[119,3,2,"p-n","n","The number of samples in the phase delay."],[119,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.step_response":[[122,3,2,"p-n","n","The number of samples to return."]],"sdr.FLFSR":[[126,2,1,"","Taps","Creates a Fibonacci LFSR from its taps."],[127,2,1,"","__call__","Processes the input symbols $x[n]$ through the Fibonacci LFSR."],[128,2,1,"","__init__","Creates a new Fibonacci LFSR."],[129,4,1,"","characteristic_poly","The characteristic polynomial $c(x)$ that defines the linear recurrent sequence."],[130,4,1,"","feedback_poly","The feedback polynomial $f(x)$ that defines the feedback arithmetic."],[131,4,1,"","field","The FieldArray subclass for the finite field that defines the linear arithmetic."],[132,4,1,"","initial_state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[133,4,1,"","order","The order of the linear recurrence/linear recurrent sequence."],[134,2,1,"","reset","Resets the Fibonacci LFSR state to the specified state."],[135,4,1,"","state","The current state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[136,2,1,"","step","Produces the next steps output symbols."],[137,4,1,"","taps","The shift register taps $T = [c_{n-1}, c_{n-2}, dots, c_1, c_0]$."],[138,2,1,"","to_galois_lfsr","Converts the Fibonacci LFSR to a Galois LFSR that produces the same output."]],"sdr.FLFSR.Taps":[[126,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[126,3,2,"p-taps","taps","The shift register taps $T = [c_{n-1}, c_{n-2}, dots, c_1, c_0]$."]],"sdr.FLFSR.__call__":[[127,3,2,"p-x","x","The input symbols $x[n]$."]],"sdr.FLFSR.__init__":[[128,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[128,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[128,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.FLFSR.reset":[[134,3,2,"p-state","state","The state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.FLFSR.step":[[136,3,2,"p-steps","steps","The direction and number of output symbols to produce."]],"sdr.FarrowResampler":[[140,2,1,"","__call__","Resamples the input signal $x[n]$ by the given arbitrary rate $r$."],[141,2,1,"","__init__","Creates a new Farrow arbitrary resampler."],[142,4,1,"","delay","The delay $d$ of the Farrow FIR filters in samples."],[143,2,1,"","flush","Flushes the filter state by passing zeros through the filter. Only useful when using streaming mode."],[144,4,1,"","order","The order of the piecewise polynomial."],[145,2,1,"","reset","Resets the filter state and fractional sample index."],[146,4,1,"","state","The filter state consisting of the previous $N$ inputs."],[147,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[148,4,1,"","taps","The Farrow filter taps."]],"sdr.FarrowResampler.__call__":[[140,3,2,"p-rate","rate","The resampling rate $r$."],[140,3,2,"p-x","x","The input signal $x[n] = x(n T_s)$."]],"sdr.FarrowResampler.__init__":[[141,3,2,"p-order","order","The order of the piecewise polynomial, which must be between 1 and 4."],[141,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.FarrowResampler.flush":[[143,3,2,"p-rate","rate","The resampling rate $r$."]],"sdr.FarrowResampler.reset":[[145,3,2,"p-state","state","The filter state to reset to."]],"sdr.FractionalDelay":[[150,2,1,"","__init__","Creates a fractional delay FIR filter."]],"sdr.FractionalDelay.__init__":[[150,3,2,"p-delay","delay","The fractional delay $0 le Delta n le 1$."],[150,3,2,"p-length","length","The filter length $L$."]],"sdr.GLFSR":[[152,2,1,"","Taps","Creates a Galois LFSR from its taps."],[153,2,1,"","__init__","Creates a new Galois LFSR."],[154,4,1,"","characteristic_poly","The characteristic polynomial $c(x)$ that defines the linear recurrent sequence."],[155,4,1,"","feedback_poly","The feedback polynomial $f(x)$ that defines the feedback arithmetic."],[156,4,1,"","field","The FieldArray subclass for the finite field that defines the linear arithmetic."],[157,4,1,"","initial_state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[158,4,1,"","order","The order of the linear recurrence/linear recurrent sequence."],[159,2,1,"","reset","Resets the Galois LFSR state to the specified state."],[160,4,1,"","state","The current state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[161,2,1,"","step","Produces the next steps output symbols."],[162,4,1,"","taps","The shift register taps $T = [c_0, c_1, dots, c_{n-2}, c_{n-1}]$."],[163,2,1,"","to_fibonacci_lfsr","Converts the Galois LFSR to a Fibonacci LFSR that produces the same output."]],"sdr.GLFSR.Taps":[[152,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[152,3,2,"p-taps","taps","The shift register taps $T = [c_0, c_1, dots, c_{n-2}, c_{n-1}]$."]],"sdr.GLFSR.__init__":[[153,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[153,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[153,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.GLFSR.reset":[[159,3,2,"p-state","state","The state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.GLFSR.step":[[161,3,2,"p-steps","steps","The direction and number of output symbols to produce."]],"sdr.IIR":[[165,2,1,"","ZerosPoles","Creates an IIR filter from its zeros, poles, and gain."],[166,2,1,"","__call__","Filters the input signal $x[n]$ with the IIR filter."],[167,2,1,"","__init__","Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."],[168,4,1,"","a_taps","The feedback taps $a_j$ for $j = 0,...,N$."],[169,4,1,"","b_taps","The feedforward taps $b_i$ for $i = 0,...,M$."],[170,2,1,"","frequency_response","Returns the frequency response $H(omega)$ of the IIR filter."],[171,4,1,"","gain","The gain of the IIR filter."],[172,2,1,"","impulse_response","Returns the impulse response $h[n]$ of the IIR filter."],[173,2,1,"","noise_bandwidth","Returns the noise bandwidth $B_n$ of the IIR filter."],[174,4,1,"","order","The order of the IIR filter $N$."],[175,4,1,"","poles","The poles of the IIR filter."],[176,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[177,4,1,"","state","The filter state."],[178,2,1,"","step_response","Returns the step response $s[n]$ of the IIR filter."],[179,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[180,4,1,"","zeros","The zeros of the IIR filter."]],"sdr.IIR.ZerosPoles":[[165,3,2,"p-gain","gain","The gain of the transfer function."],[165,3,2,"p-poles","poles","The poles of the transfer function."],[165,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[165,3,2,"p-zeros","zeros","The zeros of the transfer function."]],"sdr.IIR.__call__":[[166,3,2,"p-x","x","The input signal $x[n]$ with length $L$."]],"sdr.IIR.__init__":[[167,3,2,"p-a","a","The feedback coefficients $a_j$ for $j = 0,...,N$."],[167,3,2,"p-b","b","The feedforward coefficients $b_i$ for $i = 0,...,M$."],[167,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.IIR.frequency_response":[[170,3,2,"p-decades","decades","Only used if freqs is an integer."],[170,3,2,"p-freqs","freqs","The frequency specification."],[170,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."],[170,3,2,"p-whole","whole","Only used if freqs is an integer."]],"sdr.IIR.impulse_response":[[172,3,2,"p-n","n","The number of samples to return."]],"sdr.IIR.noise_bandwidth":[[173,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.IIR.step_response":[[178,3,2,"p-n","n","The number of samples to return."]],"sdr.Integrator":[[182,2,1,"","__init__","Creates an integrating IIR filter."]],"sdr.Integrator.__init__":[[182,3,2,"p-method","method","The integration method."],[182,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.Interleaver":[[184,2,1,"","__init__","Creates an arbitrary interleaver."],[185,2,1,"","__len__","The size of the interleaver."],[186,2,1,"","deinterleave","Deinterleaves the input sequence $y[n]$."],[187,2,1,"","interleave","Interleaves the input sequence $x[n]$."],[188,4,1,"","inverse_map","The deinterleaver permutation map $pi^{-1}$."],[189,4,1,"","map","The interleaver permutation map $pi$."]],"sdr.Interleaver.__init__":[[184,3,2,"p-map","map","The interleaver permutation map $pi : i mapsto j$, containing the values $[0, N)$. The $i$-th input element will be placed at the $pi(i)$-th output position."]],"sdr.Interleaver.deinterleave":[[186,3,2,"p-y","y","The input sequence $y[n]$."]],"sdr.Interleaver.interleave":[[187,3,2,"p-x","x","The input sequence $x[n]$."]],"sdr.Interpolator":[[191,2,1,"","__init__","Creates a polyphase FIR interpolating filter."],[192,4,1,"","method","The method used to design the polyphase interpolating filter."]],"sdr.Interpolator.__init__":[[191,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[191,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[191,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[191,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[191,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.LeakyIntegrator":[[194,2,1,"","__init__","Creates a leaky integrator IIR filter."]],"sdr.LeakyIntegrator.__init__":[[194,3,2,"p-alpha","alpha","The leaky factor $alpha$."],[194,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.LinearModulation":[[196,2,1,"","__init__","Creates a new linear phase/amplitude modulation object."],[197,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[198,4,1,"","bps","The number of coded bits per symbol $k = log_2 M$."],[199,2,1,"","decide_symbols","Converts the received complex symbols into MLE symbol decisions."],[200,2,1,"","demodulate","Demodulates the pulse-shaped complex samples."],[201,2,1,"","map_symbols","Converts the decimal symbols into complex symbols."],[202,2,1,"","modulate","Modulates the decimal symbols into pulse-shaped complex samples."],[203,4,1,"","order","The modulation order $M = 2^k$."],[204,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[205,4,1,"","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[206,4,1,"","rx_filter","The receive decimating matched filter."],[207,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[208,4,1,"","sps","The number of samples per symbol $f_s / f_{sym}$."],[209,4,1,"","symbol_map","The symbol map ${0, dots, M-1} mapsto mathbb{C}$."],[210,4,1,"","tx_filter","The transmit interpolating pulse shaping filter."]],"sdr.LinearModulation.__init__":[[196,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[196,3,2,"p-phase_offset","phase_offset","A phase offset $phi$ in degrees to apply to symbol_map."],[196,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[196,3,2,"p-span","span","The span of the pulse shape in symbols."],[196,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[196,3,2,"p-symbol_map","symbol_map","The symbol mapping ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.LinearModulation.ber":[[197,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.LinearModulation.decide_symbols":[[199,3,2,"p-a_tilde","a_tilde","The received complex symbols $tilde{a}[k]$."]],"sdr.LinearModulation.demodulate":[[200,3,2,"p-x_tilde","x_tilde","The received pulse-shaped complex samples $tilde{x}[n]$ to demodulate, with sps samples per symbol and length sps * s_hat.size + pulse_shape.size - 1."]],"sdr.LinearModulation.map_symbols":[[201,3,2,"p-s","s","The decimal symbols $s[k]$ to map, $0$ to $M-1$."]],"sdr.LinearModulation.modulate":[[202,3,2,"p-s","s","The decimal symbols $s[k]$ to modulate, $0$ to $M-1$."]],"sdr.LinearModulation.ser":[[207,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.LoopFilter":[[212,2,1,"","__call__","Filters the input signal $x[n]$."],[213,2,1,"","__init__","Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."],[214,4,1,"","damping_factor","The damping factor $zeta$ of the loop filter."],[215,4,1,"","iir","The underlying IIR filter used to implement the loop filter."],[216,4,1,"","integral_gain","The integral gain $K_2$ of the loop filter."],[217,4,1,"","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter."],[218,4,1,"","proportional_gain","The proportional gain $K_1$ of the loop filter."],[219,2,1,"","reset","Resets the loop filter."]],"sdr.LoopFilter.__call__":[[212,3,2,"p-x","x","The input signal $x[n]$."]],"sdr.LoopFilter.__init__":[[213,3,2,"p-K0","K0","The NCO gain $K_0$."],[213,3,2,"p-Kp","Kp","The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."],[213,3,2,"p-damping_factor","damping_factor","The damping factor $zeta$ of the loop filter."],[213,3,2,"p-noise_bandwidth","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]],"sdr.MLPED":[[221,4,1,"","A_received","(Settable) The received signal RMS amplitude $A_{rx,rms}$."],[222,4,1,"","A_reference","(Settable) The reference signal RMS amplitude $A_{ref,rms}$."],[223,2,1,"","__call__","Detects the phase error."],[224,2,1,"","__init__","Initializes the ML-PED."],[225,2,1,"","data_aided_error","Simulates the average phase error of the data-aided PED using the specified modulation scheme."],[226,2,1,"","decision_directed_error","Simulates the average phase error of the decision-directed PED using the specified modulation scheme."],[227,4,1,"","gain","The gain of the phase error detector $K_p$."]],"sdr.MLPED.__call__":[[223,3,2,"p-received","received","The received complex symbols $tilde{a}[k]$."],[223,3,2,"p-reference","reference","The reference complex symbols, either the known transmitted complex symbols $a[k]$ or the complex symbols decisions $hat{a}[k]$."]],"sdr.MLPED.__init__":[[224,3,2,"p-A_received","A_received","The received signal RMS amplitude $A_{rx,rms}$."],[224,3,2,"p-A_reference","A_reference","The reference signal RMS amplitude $A_{ref,rms}$."]],"sdr.MLPED.data_aided_error":[[225,3,2,"p-modem","modem","The linear modulation scheme."],[225,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.MLPED.decision_directed_error":[[226,3,2,"p-modem","modem","The linear modulation scheme."],[226,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.MSK":[[229,2,1,"","__init__","Creates a new MSK object."]],"sdr.MSK.__init__":[[229,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[229,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[229,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.MovingAverager":[[231,2,1,"","__init__","Creates a moving average FIR filter."]],"sdr.MovingAverager.__init__":[[231,3,2,"p-length","length","The length of the moving average filter $L$."],[231,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.NCO":[[233,2,1,"","__call__","Steps the NCO with variable frequency and/or phase signals."],[234,2,1,"","__init__","Creates a numerically controlled oscillator (NCO)."],[235,4,1,"","gain","(Settable) The NCO gain $K_0$."],[236,4,1,"","increment","(Settable) The constant phase accumulation $omega$ of the NCO in radians/sample."],[237,4,1,"","offset","(Settable) The absolute phase offset $theta$ of the NCO in radians."],[238,2,1,"","reset","Resets the NCO."],[239,2,1,"","step","Steps the NCO forward by $N$ samples."]],"sdr.NCO.__call__":[[233,5,2,"","_ScalarType_co","Steps the NCO with variable frequency and/or phase signals."],[233,3,2,"p-freq","freq","The variable frequency signal $f[n]$ in radians/sample."],[233,3,2,"p-output","output","The format of the output signal $y[n]$."],[233,3,2,"p-phase","phase","The variable phase signal $p[n]$ in radians."]],"sdr.NCO.__init__":[[234,3,2,"p-gain","gain","The NCO gain $K_0$."],[234,3,2,"p-increment","increment","The constant accumulation $omega$ of the NCO in radians/sample."],[234,3,2,"p-offset","offset","The absolute offset $theta$ of the NCO in radians."]],"sdr.NCO.step":[[239,3,2,"p-N","N","The number of samples $N$ to step the NCO forward."]],"sdr.OQPSK":[[241,2,1,"","__init__","Creates a new OQPSK object."]],"sdr.OQPSK.__init__":[[241,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[241,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[241,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[241,3,2,"p-span","span","The span of the pulse shape in symbols."],[241,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[241,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PED":[[243,2,1,"","__call__","Detects the phase error."],[244,2,1,"","__init__","Initializes the PED."],[245,2,1,"","data_aided_error","Simulates the average phase error of the data-aided PED using the specified modulation scheme."],[246,2,1,"","decision_directed_error","Simulates the average phase error of the decision-directed PED using the specified modulation scheme."],[247,4,1,"","gain","The gain of the phase error detector $K_p$."]],"sdr.PED.__call__":[[243,3,2,"p-received","received","The received complex symbols $tilde{a}[k]$."],[243,3,2,"p-reference","reference","The reference complex symbols, either the known transmitted complex symbols $a[k]$ or the complex symbols decisions $hat{a}[k]$."]],"sdr.PED.data_aided_error":[[245,3,2,"p-modem","modem","The linear modulation scheme."],[245,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.PED.decision_directed_error":[[246,3,2,"p-modem","modem","The linear modulation scheme."],[246,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.PSK":[[249,2,1,"","__init__","Creates a new PSK object."],[250,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[251,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[252,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[253,4,1,"","symbol_map","The symbol map ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.PSK.__init__":[[249,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[249,3,2,"p-order","order","The modulation order $M = 2^k$, where $k ge 1$ is the coded bits per symbol."],[249,3,2,"p-phase_offset","phase_offset","The phase offset $phi$ in degrees."],[249,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[249,3,2,"p-span","span","The span of the pulse shape in symbols."],[249,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[249,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PSK.ber":[[250,3,2,"p-diff_encoded","diff_encoded","Indicates whether the input symbols were differentially encoded."],[250,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.PSK.ser":[[252,3,2,"p-diff_encoded","diff_encoded","Indicates whether the input symbols were differentially encoded."],[252,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.PiMPSK":[[255,2,1,"","__init__","Creates a new $pi/M$ PSK object."]],"sdr.PiMPSK.__init__":[[255,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[255,3,2,"p-order","order","The modulation order $M = 2^k$, where $k ge 1$ is the coded bits per symbol."],[255,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[255,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[255,3,2,"p-span","span","The span of the pulse shape in symbols."],[255,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[255,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PolyphaseFIR":[[257,2,1,"","__call__","Filters the input signal $x[n]$ with the polyphase FIR filter."],[258,2,1,"","__init__","Creates a polyphase FIR filter."],[259,4,1,"","branches","The number of polyphase branches $B$."],[260,4,1,"","decimation","The integer decimation rate $Q$."],[261,4,1,"","delay","The delay of polyphase FIR filter in samples."],[262,4,1,"","input","The input connection method."],[263,4,1,"","interpolation","The integer interpolation rate $P$."],[264,4,1,"","order","The order $N = (M + 1)B - 1$ of the FIR prototype filter $h[n]$."],[265,4,1,"","output","The output connection method."],[266,4,1,"","polyphase_order","The order $M = (N + 1)/B - 1$ of each FIR polyphase filter $h_i[n]$."],[267,4,1,"","polyphase_taps","The polyphase feedforward taps $h_i[n]$."],[268,4,1,"","rate","The fractional resampling rate $r = P/Q$. The output sample rate is $f_{s,out} = f_{s,in} cdot r$."],[269,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[270,4,1,"","taps","The prototype feedforward taps $h[n]$."]],"sdr.PolyphaseFIR.__call__":[[257,3,2,"p-mode","mode","The non-streaming convolution mode."],[257,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.PolyphaseFIR.__init__":[[258,3,2,"p-branches","branches","The number of polyphase branches $B$."],[258,3,2,"p-input","input","The input connection method."],[258,3,2,"p-output","output","The output connection method."],[258,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[258,3,2,"p-taps","taps","The prototype filter feedforward coefficients $h[n]$."]],"sdr.Q":[[271,3,2,"p-x","x","The real-valued input $x$."]],"sdr.Qinv":[[272,3,2,"p-p","p","The probability $p$ of exceeding the returned value $x$."]],"sdr.ReplicaCorrelator":[[274,2,1,"","p_d","Computes the probability of detection $P_d$."],[275,2,1,"","p_fa","Computes the probability of false alarm $P_{fa}$."],[276,2,1,"","roc","Computes the receiver operating characteristic (ROC) curve."],[277,2,1,"","threshold","Computes the threshold $gamma'$."]],"sdr.ReplicaCorrelator.p_d":[[274,3,2,"p-complex","complex","Indicates whether the signal is complex."],[274,3,2,"p-enr","enr","The received energy-to-noise ratio $mathcal{E}/sigma^2$ in dB."],[274,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."]],"sdr.ReplicaCorrelator.p_fa":[[275,3,2,"p-complex","complex","Indicates whether the signal is complex."],[275,3,2,"p-energy","energy","The received energy $mathcal{E} = sum_{i=0}^{N-1} left| s[n] right|^2$."],[275,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."],[275,3,2,"p-threshold","threshold","The threshold $gamma'$."]],"sdr.ReplicaCorrelator.roc":[[276,3,2,"p-complex","complex","Indicates whether the signal is complex."],[276,3,2,"p-enr","enr","The received energy-to-noise ratio $mathcal{E}/sigma^2$ in dB."],[276,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."]],"sdr.ReplicaCorrelator.threshold":[[277,3,2,"p-complex","complex","Indicates whether the signal is complex."],[277,3,2,"p-energy","energy","The received energy $mathcal{E} = sum_{i=0}^{N-1} left| s[n] right|^2$."],[277,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[277,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."]],"sdr.Resampler":[[279,2,1,"","__call__","Filters the input signal $x[n]$ with the polyphase FIR filter."],[280,2,1,"","__init__","Creates a polyphase FIR rational resampling filter."],[281,4,1,"","method","The method used to design the polyphase resampling filter."]],"sdr.Resampler.__call__":[[279,3,2,"p-mode","mode","The non-streaming convolution mode."],[279,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.Resampler.__init__":[[280,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[280,3,2,"p-decimation","decimation","The decimation rate $Q$."],[280,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[280,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[280,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[280,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.add_iid_rvs":[[282,3,2,"p-X","X","The distribution of the i.i.d."],[282,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[282,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.add_rvs":[[283,3,2,"p-X","X","The distribution of the random variable $X$."],[283,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[283,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.albersheim":[[284,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[284,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[284,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.average_power":[[285,3,2,"p-axis","axis","Axis or axes along which to compute the average power."],[285,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[285,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.awgn":[[286,3,2,"p-noise","noise","The noise power (variance) in linear units."],[286,3,2,"p-seed","seed","The seed for the random number generator."],[286,3,2,"p-snr","snr","The desired signal-to-noise ratio (SNR) in dB."],[286,3,2,"p-x","x","The time-domain signal $x[n]$ to which AWGN is added."]],"sdr.awgn_capacity":[[287,3,2,"p-bandwidth","bandwidth","The bandwidth $B$ of the channel in Hz."],[287,3,2,"p-snr","snr","The signal-to-noise ratio $S / N$ in dB of the channel."]],"sdr.bandpass_fir":[[288,3,2,"p-bandwidth","bandwidth","The two-sided bandwidth about $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[288,3,2,"p-center_freq","center_freq","The center frequency $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[288,3,2,"p-order","order","The filter order $N$."],[288,3,2,"p-window","window","The SciPy window definition."]],"sdr.bandstop_fir":[[289,3,2,"p-bandwidth","bandwidth","The two-sided bandwidth about $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[289,3,2,"p-center_freq","center_freq","The center frequency $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[289,3,2,"p-order","order","The filter order $N$."],[289,3,2,"p-window","window","The SciPy window definition."]],"sdr.barker_code":[[290,3,2,"p-length","length","The length $n$ of the Barker code/sequence."],[290,3,2,"p-output","output","The output format of the Barker code/sequence."]],"sdr.bec":[[291,3,2,"p-p","p","The probability $p$ of a bit erasure."],[291,3,2,"p-seed","seed","The seed for the random number generator."],[291,3,2,"p-x","x","The input sequence $x$ with $x_i in {0, 1}$."]],"sdr.bec_capacity":[[292,3,2,"p-p","p","The erasure probability $p$ of the BEC channel."]],"sdr.berlekamp_massey":[[293,3,2,"p-output","output","The output object type."],[293,3,2,"p-sequence","sequence","A linear recurrent sequence $y$ in $mathrm{GF}(p^m)$."]],"sdr.biawgn_capacity":[[294,3,2,"p-snr","snr","The signal-to-noise ratio $S / N = A^2 / sigma^2$ at the output of the channel in dB."]],"sdr.binary_code":[[295,3,2,"p-length","length","The length $n = 2^m$ of the binary code."]],"sdr.bsc":[[296,3,2,"p-p","p","The probability $p$ of a bit flip."],[296,3,2,"p-seed","seed","The seed for the random number generator."],[296,3,2,"p-x","x","The input sequence $x$ with $x_i in {0, 1}$."]],"sdr.bsc_capacity":[[297,3,2,"p-p","p","The transition probability $p$ of the BSC channel."]],"sdr.clock_error":[[298,3,2,"p-center_freq","center_freq","The center frequency $f_c$ of the complex baseband signal in Hz."],[298,3,2,"p-error","error","The fractional clock error $epsilon$, which is unitless, with 0 representing no clock error."],[298,3,2,"p-error_rate","error_rate","The clock error $Delta epsilon / Delta t$ in 1/s."],[298,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[298,3,2,"p-x","x","The time-domain signal $x[n]$ to which the clock error is applied."]],"sdr.coherent_gain":[[299,3,2,"p-time_bandwidth","time_bandwidth","The time-bandwidth product $T_c B_n$ in seconds-Hz (unitless)."]],"sdr.coherent_gain_loss":[[300,3,2,"p-freq","freq","The frequency offset $Delta f$ or signal bandwidth $B_c$ in Hz."],[300,3,2,"p-time","time","The coherent integration time $T_c$ or time offset in $Delta t$ in seconds."]],"sdr.composite_snr":[[301,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1$ in dB."],[301,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2$ in dB."]],"sdr.crest_factor":[[302,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.db":[[303,3,2,"p-type","type","The type of input value or signal."],[303,3,2,"p-x","x","The input value or signal."]],"sdr.diff_decode":[[304,3,2,"p-y","y","The input encoded data $y[k]$."],[304,3,2,"p-y_prev","y_prev","The previous value of the encoded data $y[k-1]$."]],"sdr.diff_encode":[[305,3,2,"p-x","x","The input uncoded data $x[k]$."],[305,3,2,"p-y_prev","y_prev","The previous value of the output encoded data $y[k-1]$."]],"sdr.dmc":[[306,3,2,"p-P","P","The $m times n$ transition probability matrix $P$, where $P_{i,j} = Pr(Y = y_j | X = x_i)$."],[306,3,2,"p-X","X","The input alphabet $mathcal{X}$ of size $m$."],[306,3,2,"p-Y","Y","The output alphabet $mathcal{Y}$ of size $n$."],[306,3,2,"p-seed","seed","The seed for the random number generator."],[306,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X}$."]],"sdr.downsample":[[307,3,2,"p-rate","rate","The downsampling factor $r$."],[307,3,2,"p-x","x","The time-domain signal $x[n]$ with sample rate $f_s$."]],"sdr.ebn0_to_esn0":[[308,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[308,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."],[308,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."]],"sdr.ebn0_to_snr":[[309,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[309,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."],[309,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."],[309,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.energy":[[310,3,2,"p-axis","axis","Axis or axes along which to compute the energy."],[310,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[310,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.esn0_to_ebn0":[[311,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[311,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."],[311,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."]],"sdr.esn0_to_snr":[[312,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."],[312,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.euclidean":[[313,3,2,"p-axis","axis","Axis or axes along which to compute the distance."],[313,3,2,"p-x","x","The time-domain signal $x[n]$."],[313,3,2,"p-y","y","The time-domain signal $y[n]$."]],"sdr.evm":[[314,3,2,"p-norm","norm","The normalization source used in the EVM calculation."],[314,3,2,"p-output","output","The output type of the EVM calculation."],[314,3,2,"p-ref","ref","The complex reference symbols $x[k]$."],[314,3,2,"p-x_hat","x_hat","The complex symbols $hat{x}[k]$ to be measured."]],"sdr.fdoa_crlb":[[315,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[315,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[315,3,2,"p-rms_integration_time","rms_integration_time","The root-mean-square (RMS) integration time $T_{text{rms}}$ in Hz."],[315,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1 = S_1 / (N_0 B_n)$ in dB."],[315,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2 = S_2 / (N_0 B_n)$ in dB."],[315,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.foa_crlb":[[316,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[316,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[316,3,2,"p-rms_integration_time","rms_integration_time","The root-mean-square (RMS) integration time $T_{text{rms}}$ in Hz."],[316,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) of the signal $gamma = S / (N_0 B_n)$ in dB."],[316,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.fractional_delay_fir":[[317,3,2,"p-delay","delay","The fractional delay $0 le Delta n le 1$."],[317,3,2,"p-length","length","The filter length $L$."]],"sdr.free_space_path_loss":[[318,3,2,"p-distance","distance","The distance $d$ in meters between the transmitter and receiver."],[318,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.frequency_offset":[[319,3,2,"p-offset","offset","The frequency offset $Delta f = f_{text{new}} - f$ in Hz."],[319,3,2,"p-offset_rate","offset_rate","The frequency offset rate $Delta^2 f / Delta t$ in Hz/s."],[319,3,2,"p-phase","phase","The phase offset $phi$ in degrees."],[319,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[319,3,2,"p-x","x","The time-domain signal $x[n]$ to which the frequency offset is applied."]],"sdr.gaussian":[[320,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[320,3,2,"p-span","span","The length of the filter in symbols."],[320,3,2,"p-sps","sps","The number of samples per symbol."],[320,3,2,"p-time_bandwidth","time_bandwidth","The time-bandwidth product $B T_{sym}$ of the filter, where $B$ is the one-sided 3-dB bandwidth in Hz and $T_{sym}$ is the symbol time in seconds."]],"sdr.gold_code":[[321,3,2,"p-index","index","The index $i$ in $[-2, n)$ of the Gold code."],[321,3,2,"p-length","length","The length $n = 2^m - 1$ of the Gold code/sequence."],[321,3,2,"p-output","output","The output format of the Gold code/sequence."],[321,3,2,"p-poly1","poly1","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$ for the first $m$-sequence."],[321,3,2,"p-poly2","poly2","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$ for the second $m$-sequence."],[321,3,2,"p-verify","verify","Indicates whether to verify that the provided polynomials are a preferred pair using sdr.is_preferred_pair()."]],"sdr.gray_code":[[322,3,2,"p-length","length","The length $n = 2^m$ of the Gray code."]],"sdr.h0":[[323,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[323,3,2,"p-detector","detector","The detector type."],[323,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[323,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[323,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."]],"sdr.h1":[[324,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[324,3,2,"p-detector","detector","The detector type."],[324,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[324,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[324,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."],[324,3,2,"p-snr","snr","The signal-to-noise ratio $S / sigma^2$ in dB."]],"sdr.hadamard_code":[[325,3,2,"p-index","index","The index $i$ in $[0, n)$ of the Hadamard code."],[325,3,2,"p-length","length","The length $n = 2^m$ of the Hadamard code/sequence."],[325,3,2,"p-output","output","The output format of the Hadamard code/sequence."]],"sdr.half_sine":[[326,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[326,3,2,"p-span","span","The length of the filter in symbols."],[326,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.hamming":[[327,3,2,"p-axis","axis","Axis or axes along which to compute the distance."],[327,3,2,"p-x","x","The time-domain signal $x[n]$."],[327,3,2,"p-y","y","The time-domain signal $y[n]$."]],"sdr.hexdump":[[328,3,2,"p-data","data","The data to display."],[328,3,2,"p-width","width","The number of bytes per line."]],"sdr.highpass_fir":[[329,3,2,"p-cutoff_freq","cutoff_freq","The cutoff frequency $f_c$, normalized to the Nyquist frequency $f_s / 2$."],[329,3,2,"p-order","order","The filter order $N$."],[329,3,2,"p-window","window","The SciPy window definition."]],"sdr.iq_imbalance":[[330,3,2,"p-amplitude","amplitude","The amplitude imbalance $A$ in dB."],[330,3,2,"p-phase","phase","The phase imbalance $phi$ in degrees."],[330,3,2,"p-x","x","The complex time-domain signal $x[n]$ to which IQ imbalance is applied."]],"sdr.is_preferred_pair":[[331,3,2,"p-poly1","poly1","The first primitive polynomial $f(x)$."],[331,3,2,"p-poly2","poly2","The second primitive polynomial $g(x)$."]],"sdr.kasami_code":[[332,3,2,"p-index","index","The index of the Kasami code."],[332,3,2,"p-length","length","The length $n = 2^m - 1$ of the Kasami code/sequence."],[332,3,2,"p-output","output","The output format of the Kasami code/sequence."],[332,3,2,"p-poly","poly","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$."]],"sdr.linear":[[333,3,2,"p-type","type","The type of output value or signal."],[333,3,2,"p-x","x","The input value or signal in dB."]],"sdr.lowpass_fir":[[334,3,2,"p-cutoff_freq","cutoff_freq","The cutoff frequency $f_c$, normalized to the Nyquist frequency $f_s / 2$."],[334,3,2,"p-order","order","The filter order $N$."],[334,3,2,"p-window","window","The SciPy window definition."]],"sdr.m_sequence":[[335,3,2,"p-degree","degree","The degree $m$ of the LFSR."],[335,3,2,"p-index","index","The index $i$ in $[1, q^m)$ of the $m$-sequence."],[335,3,2,"p-output","output","The output format of the $m$-sequence."],[335,3,2,"p-poly","poly","The characteristic polynomial of the LFSR over $mathrm{GF}(q)$."]],"sdr.max_frequency_offset":[[336,3,2,"p-cgl","cgl","The coherent gain loss (CGL) in dB."],[336,3,2,"p-integration_time","integration_time","The coherent integration time $T_c$ in seconds."]],"sdr.max_iid_rvs":[[337,3,2,"p-X","X","The distribution of the i.i.d."],[337,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[337,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.max_integration_time":[[338,3,2,"p-cgl","cgl","The coherent gain loss (CGL) in dB."],[338,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ in Hz."]],"sdr.max_rvs":[[339,3,2,"p-X","X","The distribution of the random variable $X$."],[339,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[339,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_iid_rvs":[[340,3,2,"p-X","X","The distribution of the i.i.d."],[340,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[340,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_rvs":[[341,3,2,"p-X","X","The distribution of the random variable $X$."],[341,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[341,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_snr":[[342,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[342,3,2,"p-detector","detector","The detector type."],[342,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[342,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[342,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[342,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.mix":[[343,3,2,"p-complex","complex","Indicates whether to mix by a complex exponential or real sinusoid."],[343,3,2,"p-freq","freq","The frequency $f$ of the sinusoid in Hz (or 1/samples if sample_rate=1). The frequency must satisfy $-f_s/2 le f le f_s/2$."],[343,3,2,"p-phase","phase","The phase $phi$ of the sinusoid in degrees."],[343,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal."],[343,3,2,"p-x","x","The time-domain signal $x[n]$."]],"sdr.multiply_rvs":[[344,3,2,"p-X","X","The distribution of the random variable $X$."],[344,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[344,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."],[344,3,2,"p-z","z","The $z$ values at which to evaluate the PDF of $Z$."]],"sdr.multirate_fir":[[345,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[345,3,2,"p-decimation","decimation","The decimation rate $Q$."],[345,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[345,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."]],"sdr.non_coherent_gain":[[346,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[346,3,2,"p-detector","detector","The detector type."],[346,3,2,"p-extrapolate","extrapolate","Indicates whether to extrapolate $G_{nc}$ using smaller values of $N_{nc}$."],[346,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[346,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$."],[346,3,2,"p-snr","snr","The reference SNR in dB."],[346,3,2,"p-snr_ref","snr_ref","The SNR reference."]],"sdr.p_d":[[347,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[347,3,2,"p-detector","detector","The detector type."],[347,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[347,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[347,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$ in $(0, 1)$."],[347,3,2,"p-snr","snr","The signal-to-noise ratio $S / sigma^2$ in dB."]],"sdr.p_fa":[[348,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[348,3,2,"p-detector","detector","The detector type."],[348,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[348,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[348,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."],[348,3,2,"p-threshold","threshold","The detection threshold $gamma$ in linear units."]],"sdr.pack":[[349,3,2,"p-bpe","bpe","The number of bits per element in the output array."],[349,3,2,"p-dtype","dtype","The data type of the output array."],[349,3,2,"p-x","x","The input binary array with 1 bit per element."]],"sdr.papr":[[350,3,2,"p-axis","axis","Axis or axes along which to compute the PAPR."],[350,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.parabolic_antenna":[[351,3,2,"p-diameter","diameter","The diameter $d$ in meters of the parabolic reflector."],[351,3,2,"p-efficiency","efficiency","The efficiency $0 le eta le 1$ of the parabolic reflector."],[351,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.peak_power":[[352,3,2,"p-axis","axis","Axis or axes along which to compute the peak power."],[352,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[352,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.peak_voltage":[[353,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[353,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.peebles":[[354,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[354,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[354,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.plot":[[355,6,1,"","ber","Plots the bit error rate (BER) as a function of $E_b/N_0$."],[356,6,1,"","constellation","Plots the constellation of the complex symbols $hat{x}[k]$."],[357,6,1,"","correlation","Plots the correlation between two time-domain signals $x[n]$ and $y[n]$."],[358,6,1,"","detector_pdfs","Plots the probability density functions (PDFs) of the detector under $mathcal{H}_0$ and $mathcal{H}_1$."],[359,6,1,"","dft","Plots the discrete Fourier transform (DFT) of the time-domain signal $x[n]$."],[360,6,1,"","dtft","Plots the discrete-time Fourier transform (DTFT) of the time-domain signal $x[n]$."],[361,6,1,"","eye","Plots the eye diagram of the baseband modulated signal $x[n]$."],[362,6,1,"","filter","Plots the magnitude response $|H(omega)|^2$, impulse response $h[n]$, and zeros and poles of the filter."],[363,6,1,"","group_delay","Plots the group delay $tau_g(omega)$ of the IIR filter."],[364,6,1,"","impulse_response","Plots the impulse response $h[n]$ of a filter."],[365,6,1,"","magnitude_response","Plots the magnitude response $|H(omega)|^2$ of the filter."],[366,6,1,"","p_d","Plots the probability of detection $P_d$ as a function of received SNR or ENR."],[367,6,1,"","periodogram","Plots the estimated power spectral density $P_{xx}$ of a time-domain signal $x[n]$ using Welch's method."],[368,6,1,"","phase_delay","Plots the phase delay $tau_{phi}(omega)$ of the filter."],[369,6,1,"","phase_response","Plots the phase response $angle H(omega)$ of the filter."],[370,6,1,"","phase_tree","Plots the phase tree of a continuous-phase modulated (CPM) signal signal $x[n]$."],[371,6,1,"","raster","Plots a raster of the time-domain signal $x[n]$."],[372,6,1,"","roc","Plots the receiver operating characteristic (ROC) curve as a function of $P_{fa}$."],[373,6,1,"","ser","Plots the symbol error rate (SER) as a function of $E_s/N_0$."],[374,6,1,"","shannon_limit_ebn0","Plots the Shannon limit for the bit energy-to-noise PSD ratio $E_b/N_0$."],[375,6,1,"","spectrogram","Plots the spectrogram of a time-domain signal $x[n]$ using Welch's method."],[376,6,1,"","stem","Wraps matplotlib.pyplot.stem() to style the plot more like MATLAB."],[377,6,1,"","step_response","Plots the step response $s[n]$ of a filter."],[378,6,1,"","symbol_map","Plots the symbol map of the complex symbols $hat{x}[k]$."],[379,6,1,"","time_domain","Plots a time-domain signal $x[n]$."],[380,6,1,"","use_style","Applies sdr's default matplotlib rcParams."],[381,6,1,"","zeros_poles","Plots the zeros and poles of the filter."]],"sdr.plot.ber":[[355,3,2,"p-ax","ax","The axis to plot on."],[355,3,2,"p-ber","ber","The bit error rate $P_{be}$."],[355,3,2,"p-ebn0","ebn0","The bit energy $E_b$ to noise PSD $N_0$ ratio (dB)."],[355,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.semilogy()."]],"sdr.plot.constellation":[[356,3,2,"p-ax","ax","The axis to plot on."],[356,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[356,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to Matplotlib functions."],[356,3,2,"p-limits","limits","The axis limits, which apply to both the x- and y-axis."],[356,3,2,"p-persistence","persistence","Indicates whether to plot the points as a persistence plot."],[356,3,2,"p-x_hat","x_hat","The complex symbols $hat{x}[k]$."]],"sdr.plot.correlation":[[357,3,2,"p-ax","ax","The axis to plot on."],[357,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[357,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[357,3,2,"p-mode","mode","The numpy.correlate() correlation mode."],[357,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[357,3,2,"p-x","x","The first time-domain signal $x[n]$."],[357,3,2,"p-y","y","The second time-domain signal $y[n]$."],[357,3,2,"p-y_axis","y_axis","Indicates how to plot the y-axis."]],"sdr.plot.detector_pdfs":[[358,3,2,"p-annotate","annotate","Indicates whether to annotate the plot with the probabilities of false alarm and detection."],[358,3,2,"p-ax","ax","The axis to plot on."],[358,3,2,"p-h0","h0","The statistical distribution under $mathcal{H}_0$."],[358,3,2,"p-h1","h1","The statistical distribution under $mathcal{H}_1$."],[358,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[358,3,2,"p-p_h0","p_h0","The probability of the $mathcal{H}_0$ tails to plot."],[358,3,2,"p-p_h1","p_h1","The probability of the $mathcal{H}_1$ tails to plot."],[358,3,2,"p-points","points","The number of points to use for the x-axis."],[358,3,2,"p-shade","shade","Indicates whether to shade the tails of the PDFs."],[358,3,2,"p-threshold","threshold","The detection threshold $gamma$."],[358,3,2,"p-x","x","The x-axis values to use for the plot."]],"sdr.plot.dft":[[359,3,2,"p-ax","ax","The axis to plot on."],[359,3,2,"p-centered","centered","Indicates whether to center the DFT about 0."],[359,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[359,3,2,"p-fast","fast","Indicates whether to use the fast Fourier transform (FFT) algorithm."],[359,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[359,3,2,"p-oversample","oversample","The factor to oversample the DFT."],[359,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[359,3,2,"p-size","size","The number of points to use for the DFT."],[359,3,2,"p-type","type","The type of plot to use."],[359,3,2,"p-window","window","The SciPy window definition."],[359,3,2,"p-x","x","The time-domain signal $x[n]$."],[359,3,2,"p-x_axis","x_axis","The x-axis scaling."],[359,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.dtft":[[360,3,2,"p-ax","ax","The axis to plot on."],[360,3,2,"p-centered","centered","Indicates whether to center the DTFT about 0."],[360,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[360,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[360,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[360,3,2,"p-size","size","The number of points to use for the DTFT."],[360,3,2,"p-window","window","The SciPy window definition."],[360,3,2,"p-x","x","The time-domain signal $x[n]$."],[360,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.eye":[[361,3,2,"p-ax","ax","The axis to plot on."],[361,3,2,"p-color","color","Indicates how to color the rasters."],[361,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[361,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to sdr.plot.raster()."],[361,3,2,"p-persistence","persistence","Indicates whether to plot the raster as a persistence plot."],[361,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[361,3,2,"p-span","span","The number of symbols per raster."],[361,3,2,"p-sps","sps","The number of samples per symbol."],[361,3,2,"p-x","x","The baseband modulated signal $x[n]$."]],"sdr.plot.filter":[[362,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[362,3,2,"p-filter","filter","The filter definition."],[362,3,2,"p-n_freq","n_freq","The number of samples $N_f$ in the frequency response."],[362,3,2,"p-n_time","n_time","The number of samples $N_t$ in the time domain."],[362,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[362,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.group_delay":[[363,3,2,"p-ax","ax","The axis to plot on."],[363,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[363,3,2,"p-filter","filter","The filter definition."],[363,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[363,3,2,"p-n","n","The number of samples $N$ in the frequency response."],[363,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[363,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.impulse_response":[[364,3,2,"p-ax","ax","The axis to plot on."],[364,3,2,"p-filter","filter","The filter definition."],[364,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[364,3,2,"p-n","n","The number of samples $N$ to plot."],[364,3,2,"p-offset","offset","The x-axis offset to apply to the first sample."],[364,3,2,"p-type","type","The type of plot to use."]],"sdr.plot.magnitude_response":[[365,3,2,"p-ax","ax","The axis to plot on."],[365,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[365,3,2,"p-filter","filter","The filter definition."],[365,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[365,3,2,"p-n","n","The number of samples $N$ in the frequency response."],[365,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[365,3,2,"p-x_axis","x_axis","The x-axis scaling."],[365,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.p_d":[[366,3,2,"p-ax","ax","The axis to plot on."],[366,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[366,3,2,"p-p_d","p_d","The probability of detection $P_d$."],[366,3,2,"p-x","x","The SNR or ENR in dB."],[366,3,2,"p-x_label","x_label","The x-axis label to use."]],"sdr.plot.periodogram":[[367,3,2,"p-average","average","The type of averaging to use."],[367,3,2,"p-ax","ax","The axis to plot on."],[367,3,2,"p-detrend","detrend","The type of detrending to apply."],[367,3,2,"p-fft","fft","The number of points to use in the FFT."],[367,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[367,3,2,"p-length","length","The length of each segment in samples."],[367,3,2,"p-overlap","overlap","The number of samples to overlap between segments."],[367,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[367,3,2,"p-window","window","The SciPy window definition."],[367,3,2,"p-x","x","The time-domain signal $x[n]$."],[367,3,2,"p-x_axis","x_axis","The x-axis scaling."],[367,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.phase_delay":[[368,3,2,"p-ax","ax","The axis to plot on."],[368,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[368,3,2,"p-filter","filter","The filter definition."],[368,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[368,3,2,"p-n","n","The number of samples $N$ in the phase delay."],[368,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[368,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.phase_response":[[369,3,2,"p-ax","ax","The axis to plot on."],[369,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[369,3,2,"p-filter","filter","The filter definition."],[369,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[369,3,2,"p-n","n","The number of samples $N$ in the phase response."],[369,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[369,3,2,"p-unwrap","unwrap","Indicates whether to unwrap the phase response."],[369,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.phase_tree":[[370,3,2,"p-ax","ax","The axis to plot on."],[370,3,2,"p-color","color","Indicates how to color the rasters."],[370,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to sdr.plot.raster()."],[370,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[370,3,2,"p-span","span","The number of symbols per raster."],[370,3,2,"p-sps","sps","The number of samples per symbol."],[370,3,2,"p-x","x","The baseband CPM signal $x[n]$."]],"sdr.plot.raster":[[371,3,2,"p-ax","ax","The axis to plot on."],[371,3,2,"p-color","color","Indicates how to color the rasters."],[371,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[371,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to Matplotlib functions."],[371,3,2,"p-length","length","The length of each raster in samples."],[371,3,2,"p-persistence","persistence","Indicates whether to plot the raster as a persistence plot."],[371,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[371,3,2,"p-stride","stride","The stride between each raster in samples."],[371,3,2,"p-x","x","The real time-domain signal $x[n]$."]],"sdr.plot.roc":[[372,3,2,"p-ax","ax","The axis to plot on."],[372,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function defined by type."],[372,3,2,"p-p_d","p_d","The probability of detection $P_d$."],[372,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[372,3,2,"p-type","type","The type of plot to generate."]],"sdr.plot.ser":[[373,3,2,"p-ax","ax","The axis to plot on."],[373,3,2,"p-esn0","esn0","The symbol energy $E_s$ to noise PSD $N_0$ ratio (dB)."],[373,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.semilogy()."],[373,3,2,"p-ser","ser","The symbol error rate $P_{se}$."]],"sdr.plot.shannon_limit_ebn0":[[374,3,2,"p-ax","ax","The axis to plot on."],[374,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.plot.spectrogram":[[375,3,2,"p-ax","ax","The axis to plot on."],[375,3,2,"p-detrend","detrend","The type of detrending to apply."],[375,3,2,"p-fft","fft","The number of points to use in the FFT."],[375,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.pcolormesh(). The following keyword arguments are set by default."],[375,3,2,"p-length","length","The length of each segment in samples."],[375,3,2,"p-overlap","overlap","The number of samples to overlap between segments."],[375,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[375,3,2,"p-window","window","The SciPy window definition."],[375,3,2,"p-x","x","The time-domain signal $x[n]$."],[375,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.stem":[[376,5,2,"","_ScalarType_co","Wraps matplotlib.pyplot.stem() to style the plot more like MATLAB."],[376,3,2,"p-ax","ax","The axis to plot on."],[376,3,2,"p-color","color","The color of the stem line and marker."],[376,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.stem()."],[376,3,2,"p-x","x","The x-coordinates of the stem plot."],[376,3,2,"p-y","y","The y-coordinates of the stem plot."]],"sdr.plot.step_response":[[377,3,2,"p-ax","ax","The axis to plot on."],[377,3,2,"p-filter","filter","The filter definition."],[377,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[377,3,2,"p-n","n","The number of samples $N$ to plot."],[377,3,2,"p-type","type","The type of plot to use."]],"sdr.plot.symbol_map":[[378,3,2,"p-annotate","annotate","If True, the symbols are annotated with their index. If \"bin\", the symbols are annotated with their binary representation."],[378,3,2,"p-ax","ax","The axis to plot on."],[378,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot(). The following keyword arguments are set by default."],[378,3,2,"p-limits","limits","The axis limits, which apply to both the x- and y-axis. If None, the axis limits are set to 50% larger than the maximum value."],[378,3,2,"p-modulation","modulation","The linear modulation or symbol map ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.plot.time_domain":[[379,5,2,"","_ScalarType_co","Plots a time-domain signal $x[n]$."],[379,3,2,"p-ax","ax","The axis to plot on."],[379,3,2,"p-centered","centered","Indicates whether to center the x-axis about 0."],[379,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[379,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[379,3,2,"p-offset","offset","The x-axis offset to apply to the first sample."],[379,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[379,3,2,"p-t","t","The time signal $t[n]$."],[379,3,2,"p-x","x","The time-domain signal $x[n]$."]],"sdr.plot.zeros_poles":[[381,3,2,"p-ax","ax","The axis to plot on."],[381,3,2,"p-filter","filter","The filter definition."],[381,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."]],"sdr.polyphase_decompose":[[382,3,2,"p-branches","branches","The number of polyphase branches $B$."],[382,3,2,"p-taps","taps","The prototype filter feedforward coefficients $h[n]$."]],"sdr.power":[[383,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[383,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.preferred_pairs":[[384,3,2,"p-degree","degree","The degree $m$ of the $m$-sequences."],[384,3,2,"p-poly","poly","The first polynomial $f(x)$ in the preferred pair."]],"sdr.raised_cosine":[[385,3,2,"p-alpha","alpha","The excess bandwidth $0 le alpha le 1$ of the filter."],[385,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[385,3,2,"p-span","span","The length of the filter in symbols."],[385,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.rectangular":[[386,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[386,3,2,"p-span","span","The length of the filter in symbols."],[386,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.rms_bandwidth":[[387,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[387,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.rms_integration_time":[[388,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[388,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.rms_voltage":[[389,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[389,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.root_raised_cosine":[[390,3,2,"p-alpha","alpha","The excess bandwidth $0 le alpha le 1$ of the filter."],[390,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[390,3,2,"p-span","span","The length of the filter in symbols."],[390,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.sample_rate_offset":[[391,3,2,"p-offset","offset","The sample rate offset $Delta f_s = f_{s,text{new}} - f_{s}$ in samples/s."],[391,3,2,"p-offset_rate","offset_rate","The sample rate offset rate $Delta^2 f_s / Delta t$ in samples/s^2."],[391,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[391,3,2,"p-x","x","The time-domain signal $x[n]$ to which the sample rate offset is applied."]],"sdr.shannon_limit_ebn0":[[392,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.shannon_limit_snr":[[393,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.shnidman":[[394,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[394,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[394,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."],[394,3,2,"p-swerling","swerling","The Swerling target model."]],"sdr.sinusoid":[[395,3,2,"p-complex","complex","Indicates whether to generate a complex exponential or real sinusoid."],[395,3,2,"p-duration","duration","The duration of the signal in seconds (or samples if sample_rate=1)."],[395,3,2,"p-freq","freq","The frequency $f$ of the sinusoid in Hz (or 1/samples if sample_rate=1). The frequency must satisfy $-f_s/2 le f le f_s/2$."],[395,3,2,"p-freq_rate","freq_rate","The frequency rate $frac{df}{dt}$ of the sinusoid in Hz/s (or 1/samples$^2$ if sample_rate=1)."],[395,3,2,"p-phase","phase","The phase $phi$ of the sinusoid in degrees."],[395,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal."]],"sdr.snr_to_ebn0":[[396,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[396,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."],[396,3,2,"p-snr","snr","Signal-to-noise ratio $S/N$ in dB."],[396,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.snr_to_esn0":[[397,3,2,"p-snr","snr","Signal-to-noise ratio $S/N$ in dB."],[397,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.subtract_rvs":[[398,3,2,"p-X","X","The distribution of the random variable $X$."],[398,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[398,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.tdoa_crlb":[[399,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[399,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[399,3,2,"p-rms_bandwidth","rms_bandwidth","The root-mean-square (RMS) bandwidth $B_{s,text{rms}}$ in Hz."],[399,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1 = S_1 / (N_0 B_n)$ in dB."],[399,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2 = S_2 / (N_0 B_n)$ in dB."],[399,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.threshold":[[400,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[400,3,2,"p-detector","detector","The detector type."],[400,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[400,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[400,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."],[400,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."]],"sdr.threshold_factor":[[401,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[401,3,2,"p-db","db","Indicates whether to return the detection threshold $alpha$ in dB."],[401,3,2,"p-detector","detector","The detector type."],[401,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[401,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[401,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.to_complex_baseband":[[402,3,2,"p-x_r","x_r","The real passband signal $x_r[n]$ centered at $f_{s,r}/4$ with sample rate $f_{s,r}$. If the length is odd, one zero is appended to the end."]],"sdr.to_real_passband":[[403,3,2,"p-x_c","x_c","The complex baseband signal $x_c[n]$ centered at $0$ with sample rate $f_{s,c}$."]],"sdr.toa_crlb":[[404,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[404,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[404,3,2,"p-rms_bandwidth","rms_bandwidth","The root-mean-square (RMS) bandwidth $B_{s,text{rms}}$ in Hz."],[404,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) of the signal $gamma = S / (N_0 B_n)$ in dB."],[404,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.unpack":[[405,3,2,"p-bpe","bpe","The number of bits per element in the input array."],[405,3,2,"p-dtype","dtype","The data type of the output array."],[405,3,2,"p-x","x","The input array with bpe bits per element."]],"sdr.upsample":[[406,3,2,"p-rate","rate","The upsampling factor $r$."],[406,3,2,"p-x","x","The time-domain signal $x[n]$ with sample rate $f_s$."]],"sdr.walsh_code":[[407,3,2,"p-index","index","The index $i$ in $[0, n)$ of the Walsh code."],[407,3,2,"p-length","length","The length $n = 2^m$ of the Walsh code/sequence."],[407,3,2,"p-output","output","The output format of the Walsh code/sequence."]],"sdr.wavelength":[[408,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.zadoff_chu_sequence":[[409,3,2,"p-length","length","The length $N$ of the Zadoff-Chu sequence."],[409,3,2,"p-root","root","The root $0 < u < N$ of the Zadoff-Chu sequence."],[409,3,2,"p-shift","shift","The shift $q in mathbb{Z}$ of the Zadoff-Chu sequence."]]},"objnames":{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","parameter","Python parameter"],"4":["py","property","Python property"],"5":["py","typeParameter","Python type parameter"],"6":["py","function","Python function"]},"objtypes":{"0":"py:module","1":"py:class","2":"py:method","3":"py:parameter","4":"py:property","5":"py:typeParameter","6":"py:function"},"terms":{"":[1,5,9,19,20,42,46,48,62,67,75,77,78,79,81,82,84,88,96,103,104,105,106,107,108,114,115,117,119,122,125,126,128,132,134,135,149,151,152,153,157,159,160,164,170,173,178,181,190,193,195,196,199,200,201,202,220,228,230,240,248,254,256,268,273,275,277,278,284,286,287,294,298,300,301,309,312,314,315,316,319,324,330,347,354,356,357,359,360,361,362,363,365,367,368,369,370,371,375,376,377,379,380,387,388,391,392,393,394,395,396,397,399,402,403,404,416,417,420,424,425,427,430,431],"0":[2,3,6,7,8,10,12,17,19,20,24,25,26,27,32,33,34,35,40,42,43,46,48,62,63,74,84,88,90,95,96,99,101,108,109,114,115,117,119,125,126,128,129,130,132,135,136,137,138,139,149,150,151,152,153,154,155,157,159,160,161,162,163,164,165,167,168,169,170,173,181,183,184,190,191,193,195,196,199,200,201,202,209,213,220,224,228,229,230,232,234,240,241,248,249,251,253,254,255,256,257,264,266,267,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,317,318,319,320,321,322,323,324,325,327,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,354,356,358,359,360,361,362,363,364,365,368,369,370,374,376,377,378,379,380,381,382,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,413,414,415,417,420,421,422,424,425,426,427,428,432],"00":[114,170,253,254,417,422,424],"000":[99,298,361],"00000000":328,"0000000000000002":114,"00000000e":[114,170,253,254,422],"00000004":328,"00000008":328,"00000010":328,"00000020":328,"0000010494310452":[271,272],"0004368":421,"0005":426,"00088449":338,"00095883":421,"001":[10,358,426],"00110561":338,"00147414":338,"0017044":421,"00175012":421,"0018818867640235891":338,"00221122":338,"00254816":421,"00391660e":114,"0041658j":170,"00423921":421,"00442243":338,"00474595":421,"005":426,"0058825":421,"006151":421,"00721645":421,"00830241j":170,"00845058":421,"00851486":421,"00e":[417,424],"00j":[253,254],"01":[10,114,170,253,254,328,417,422,424,426],"010299956639812":299,"010299956639813":299,"01073669":421,"0112324":421,"01140214e":422,"01238051j":170,"0125":426,"01273202":421,"01342358":421,"015":426,"016796159999999997":422,"0175":426,"0183":354,"01j":[253,254],"02":[328,422,425,426],"020599913279624":303,"020599913279625":[308,397],"02372977":421,"02769991":421,"03":[114,170,328,417,422,424],"03355896":421,"03650247":421,"03715849e":114,"03953322e":422,"04":[114,170,328,422,424],"04436799":422,"04650654":421,"04734644":421,"05":[328,420,422,426],"05098525":421,"05e":[417,424],"06":[328,346,358],"07":328,"07106781e":[253,254],"07367348":421,"07864960352514258":348,"08":328,"09":328,"09090909090909091":298,"092337035029908":422,"0a":328,"0e":[346,347],"0j":[114,170,229,241,249,255,298],"0x7fe11c44f890":426,"1":[2,3,6,7,8,10,12,13,14,17,19,20,24,25,26,27,32,33,34,35,40,43,46,48,62,64,67,74,77,81,83,84,85,88,89,90,95,96,97,99,100,101,108,111,112,114,115,117,119,124,125,126,128,129,130,131,132,134,135,136,137,138,139,141,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,170,173,181,182,183,188,190,191,193,194,195,196,199,200,201,202,209,211,213,214,220,224,228,229,230,232,234,240,241,242,248,249,250,251,252,253,254,255,256,264,266,267,270,271,272,273,274,275,276,277,278,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,354,355,356,357,358,359,360,361,362,363,364,365,368,369,370,371,373,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,413,417,420,421,422,424,425,426,427,428,432],"10":[10,40,62,88,90,97,99,101,125,132,134,135,136,138,139,149,151,157,159,160,161,163,181,183,190,196,228,240,241,248,249,250,252,254,255,264,266,267,270,274,276,278,282,283,284,285,286,288,289,293,295,298,299,300,301,303,306,308,309,310,311,312,315,316,318,320,322,323,324,326,328,329,330,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,350,351,352,353,354,355,356,359,360,362,363,364,365,368,369,373,374,376,377,379,381,382,383,385,386,387,388,389,390,391,394,395,396,397,398,399,400,404,407,417,421,424,425,426,427,428],"100":[10,88,99,114,164,170,172,178,181,193,230,232,250,252,284,286,288,289,292,297,298,300,303,307,314,315,316,319,329,333,334,337,338,340,343,354,355,356,362,364,370,373,377,388,391,394,395,399,402,403,404,406,420,426],"1000":[10,114,170,225,226,228,240,245,246,248,254,314,318,414,427],"10000":62,"1000e":298,"1001":[62,299,300,323,324,336,338,358],"100_000":[282,283,323,324,337,339,340,341,344,356,398,417,424,427],"100e":391,"100e3":298,"100th":375,"101":[24,32,97,99,274,276,282,283,287,288,289,301,315,316,323,324,329,334,337,339,340,341,344,346,347,392,393,398,399,401,404,417,424,425],"1024":[62,114,115,119,170,362,363,365,368,369,428],"10422993e":422,"1048576":360,"10813095e":422,"10862468e":422,"10_000":[62,387,425],"10e":[336,391,417],"10e3":379,"10th":375,"10x":[125,151],"11":[19,40,62,90,125,134,136,139,151,159,161,183,190,228,240,248,254,282,283,290,293,295,300,318,322,323,324,325,335,337,339,340,341,345,346,347,348,382,387,388,398,400,407,417,425],"11e":417,"12":[40,62,125,134,136,139,151,159,161,183,190,228,240,248,254,275,277,282,283,284,295,315,316,321,322,323,324,331,335,337,339,340,341,342,346,347,382,384,387,388,394,398,399,404,421,425,427],"120":414,"120e3":298,"1213137600":426,"12169481":336,"12240078e":422,"12323400e":[253,254],"1263714068241546":422,"12670446":421,"128":149,"12ab":284,"13":[125,136,139,151,161,183,190,228,240,248,254,273,274,275,277,290,295,299,322,323,324,342,347,379,382,388,413],"130":307,"13335164":422,"139":409,"14":[125,136,139,151,161,183,228,240,248,254,274,295,322,323,324,346,347,354,382,388,407],"140":[84,307],"140e3":298,"14335017":300,"1455082":422,"1466992016":426,"14686183e":114,"147":336,"14721649e":422,"15":[125,136,139,151,161,183,220,228,240,248,254,276,295,322,323,324,332,339,341,344,347,382,388,406,417],"150":[402,403,427],"15647504e":422,"158655":[271,272],"15865525393145707":[271,272],"16":[7,125,139,149,151,183,228,240,248,250,252,253,254,282,283,284,295,308,309,311,317,322,323,324,325,328,337,339,340,341,342,347,355,373,382,385,388,390,396,397,398,401,407,425],"1622776601683795":[323,324],"16666666666666669":298,"16j":[253,254],"17":[125,139,151,228,253,254,314,323,324,347,351,382,388],"1706839j":170,"179":139,"17j":114,"18":[125,139,151,282,323,324,325,347,382,388,407,413,427],"180":330,"18301321":421,"183490056794499":342,"18872187554086717":32,"189":32,"19":[125,139,151,323,324,347,382,388],"1909320767063554":422,"198":420,"1_000":[99,193,230,286,318,330,356,361,391,402,403,425],"1_001":[282,283,318,337,339,340,341,344,398],"1d":[294,371],"1e":[97,274,282,283,284,287,298,300,315,316,323,324,336,337,339,340,341,342,344,346,347,354,358,374,393,398,399,400,404,417,424,427],"1e0":[315,316,374,399,404,427],"1e3":[300,318,336,338,343,395,402],"1e5":[315,316,399,404],"1e6":[298,300,315,316,318,399,404,427],"1e7":[399,404],"1e8":[315,316,399,404],"1e9":[318,351,408],"1f":149,"1j":[10,62,170,323,324,362,363,364,365,368,369,377,381,417,420,422,424,426],"2":[9,10,19,20,24,32,40,42,43,49,62,63,67,75,77,80,84,88,90,96,97,98,99,100,101,108,112,114,115,119,125,126,128,129,130,131,132,134,135,136,137,138,139,149,151,152,153,154,155,156,157,159,160,161,162,163,170,181,183,190,193,194,195,196,203,220,228,230,232,240,241,242,248,249,250,251,252,253,254,255,256,264,266,267,270,271,272,273,274,275,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,413,414,415,416,417,420,421,422,424,425,426,427,428],"20":[19,24,32,88,89,90,97,99,125,139,151,190,232,274,278,283,287,291,294,296,298,299,303,306,314,323,324,328,330,333,339,341,346,347,353,382,388,389,393,406,427],"200":[114,170,300,307,338,371,425,427],"2000":10,"201":374,"2019":[125,151,293],"2023":[430,431],"2024":431,"2025":431,"2048":[307,402,403,406],"20e":424,"20e3":298,"21":[125,151,284,323,324,342,346,347,351,379,394],"210":84,"21002545":392,"21565653e":422,"21719":149,"22":[125,151,323,324,347],"22025983167773":314,"221":336,"22464680e":[253,254],"22961005941814036j":422,"23":[64,85,125,151,191,280,323,324,345,347,351],"235":[300,338],"23810898":421,"23851924e":422,"24":[125,151,323,324],"2433896262681":336,"24338963":336,"249387366082999":[308,309],"25":[24,32,62,90,97,125,151,291,296,300,306,317,323,324,420,425,426,428],"250":[402,403,426],"253":354,"256":[367,375],"25e":300,"26":[151,298,323,324],"267486807285799":342,"27":[323,324,325],"27280811e":114,"28":[323,324,426],"280":84,"2815515655446004":[323,324],"28283804209787544j":422,"28727058":421,"28864626708135344":388,"28865329576550935":388,"2886751345948129":[387,388],"29":[323,324,413,421],"29088345066048465":387,"299792458":408,"2d":[56,59,60,90,287,356,361,371,374,392,393],"2e":[300,336,417,424],"2e3":[300,318],"2e6":298,"2e9":318,"2f":[417,424,425],"2f_":403,"2m":254,"2n":[96,97,98,293],"2nd":[67,211,213,412,426,431],"2p":[191,280],"2q":409,"3":[10,19,24,32,40,62,67,75,77,78,81,84,88,90,96,97,101,114,125,126,129,130,131,132,134,135,136,137,138,139,141,149,151,152,154,155,156,157,159,160,161,162,163,170,181,183,190,193,220,228,230,232,240,242,248,250,251,252,253,254,256,264,266,267,270,273,274,278,282,283,284,286,288,289,290,291,293,294,295,296,298,299,300,301,303,306,307,308,309,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,354,356,357,358,359,360,361,362,363,364,365,368,369,374,376,377,379,381,382,384,385,386,387,388,390,391,392,394,395,396,398,399,400,402,403,404,405,406,407,408,409,413,414,417,422,424,426,428,430],"30":[139,190,193,228,230,240,248,254,278,287,294,307,323,324,325,335,346,362,364,377,393,394,402,403,422,431],"300":[114,170,300,338,402,403],"3000":10,"30202676j":114,"302585092994046":[323,324,347,400],"30533298":392,"3061467458920719j":422,"30614675j":422,"31":[284,323,324,354,421],"312":420,"32":[149,284,317,323,324,325,342,407,420,424,426],"32607991":421,"32626966":300,"3267725122":426,"33":[79,323,324],"3333421398098428j":422,"34":[78,323,324,379],"35":[193,230,323,324,426],"35093841":421,"35935288":422,"35949665":421,"36":[323,324],"36139242":422,"36272725":333,"36787944117144245":348,"3678794411714425":348,"36961426":170,"37":[323,324],"3763214":422,"37868538208862":422,"38":77,"3806359704987265j":422,"3885743j":170,"39":75,"39261642":422,"396":420,"3e":336,"3j":298,"3rd":422,"3x":[84,125,126,129,130,131,132,134,135,136,137,138,151,152,154,155,156,157,159,160,161,162,163,190,293],"4":[10,19,24,32,40,62,75,77,84,88,90,97,101,114,125,126,129,130,131,132,134,135,136,137,138,139,141,149,151,152,154,155,156,157,159,160,161,162,163,170,181,183,190,193,220,228,229,230,232,240,241,242,248,250,251,252,253,254,256,264,266,267,270,273,274,275,277,278,282,283,284,286,288,289,290,293,294,295,298,299,300,301,306,307,308,309,311,312,314,315,316,317,318,319,321,322,323,324,325,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,354,355,356,358,359,360,361,362,363,364,365,368,369,373,376,377,378,379,380,381,382,384,385,387,388,390,391,392,394,395,396,397,398,400,402,403,405,406,407,409,413,415,420,422,425,426,427],"40":[81,88,139,190,278,301,307,346],"400":[114,170,300,307,338],"4000":10,"40270968":422,"40e9":318,"410342926869486":346,"41446321":336,"42007077":300,"42176895e":422,"4219690131724645":388,"42721858e":422,"43":80,"43085717":422,"437435887991374":351,"44":[284,287,393],"442":336,"44778322188337":318,"45":[228,229,240,241,248,251,286,314,330,343,356,361,378,379,391,395,425,426,427],"45557651":422,"46":354,"46154771":422,"46380627201816593":422,"468383135163":318,"46911955":422,"46917696":422,"47005584":422,"47193366e":422,"47199608":422,"472298696877605":170,"4722987":170,"47271105":170,"47338728e":422,"47394825":170,"47410241":422,"47510421":422,"47601067":170,"47820725":422,"478207252018059":422,"47925143":422,"4839738":422,"48566716":422,"48840102":422,"49090568":422,"49124786":422,"4988817673791569":422,"499445060713011":346,"4x":[359,360],"5":[10,19,24,32,40,42,43,62,84,88,90,96,97,98,99,100,101,114,125,126,129,130,131,132,134,135,136,137,138,139,149,151,152,154,155,156,157,159,160,161,162,163,181,183,190,193,220,228,230,232,240,248,254,256,264,266,267,270,274,276,278,282,283,284,286,288,289,290,291,293,294,295,296,297,298,299,300,301,306,307,308,309,311,312,314,315,316,317,318,319,320,321,322,323,324,325,328,329,330,331,332,334,335,336,337,338,339,340,341,342,344,346,347,348,351,354,358,359,360,361,362,363,364,365,368,369,376,377,379,381,382,384,385,387,388,390,391,392,394,396,397,398,400,402,403,406,407,409,413,421,422,425,426,428],"50":[228,240,248,254,303,333,338,378,379,388,402,403,420,425],"500":[300,338,402,403,426],"5000":10,"50118723":333,"50e6":303,"51":[294,346],"51520024":170,"5174271293851465":[323,324,347,400],"52496713":170,"5291527586123693":422,"529544741425365":351,"52e":424,"53081763e":114,"53637958":422,"54":[284,328],"541421484556116":347,"5414214845561176":347,"54974021":392,"55":[300,351,379,431],"5533811909871471":[323,324],"5533811909871473":[323,324],"5543277195052645":422,"56859734":392,"56e":424,"57":232,"5719707":422,"57286400e":422,"57338213":170,"5759632j":114,"57922366":300,"58172329e":422,"59":392,"591745389548616":392,"5_000":99,"5e":[300,336],"5x":[125,126,130,138,151,152,155,163,293],"6":[10,19,24,32,40,62,84,88,90,101,125,126,132,134,135,136,137,138,139,149,151,152,157,159,160,161,162,163,170,181,183,190,193,220,228,230,232,240,248,253,254,256,264,266,267,270,274,275,277,278,282,283,284,293,294,295,298,299,300,301,303,306,307,308,309,314,315,316,317,318,319,321,322,323,324,325,328,332,333,335,336,337,338,339,340,341,342,346,347,348,351,354,356,357,359,361,362,363,364,365,368,369,374,376,377,378,379,381,382,385,387,388,390,391,392,398,399,400,402,403,404,407,409,413,416,421,422,426,427],"60":[232,287,288,289,298,301,329,334,393,428,431],"6058636":114,"61":[328,431],"62":[284,328],"62720131e":114,"63":[321,328,332,335,357],"63882791e":422,"64":[84,149,317,328,422],"6400000000000001":422,"6448536269514744":[323,324],"65":328,"6560":335,"66":328,"666092814306324":346,"67":328,"67772160e":422,"68":328,"684365018955985":422,"69":328,"6903095079298097":[323,324],"69685122e":422,"6a":328,"6b":328,"6c":328,"6d":328,"6e":328,"6f":328,"6j":298,"7":[19,24,32,40,62,84,88,90,101,125,126,129,130,131,132,134,135,136,137,138,139,149,151,152,154,155,156,157,159,160,161,162,163,181,183,190,220,228,240,242,248,253,254,256,264,266,267,270,274,278,282,283,284,287,290,293,294,295,298,300,306,314,315,316,317,318,319,321,322,323,324,325,328,329,332,335,337,339,340,341,345,346,347,348,382,387,388,392,393,398,399,400,404,407,409,413,422,424,426,430],"70":[84,328],"70554345409542":[323,324],"70710678":[228,240,248],"70710678j":[228,240,248],"71":328,"71104892744724":422,"71930943":422,"72":328,"72236648e":422,"7229165664874556":[323,324],"7229165664874564":[323,324],"73":328,"732513192714245":342,"7391036260090295":422,"73910363":422,"74":328,"74077567e":422,"7446372175904691":387,"75":[24,90,289,328,426],"7506126339170005":[311,396],"76":[303,328,417],"7630284641923553":347,"76562500e":[114,170],"77":[303,328,333],"77694738j":170,"78":328,"78207252e":422,"78877688e":422,"79":[328,354],"79630028j":114,"7a":328,"7b":284,"8":[40,43,62,84,88,90,101,114,125,134,136,139,149,151,159,161,170,181,183,190,196,228,229,240,241,248,249,250,252,253,254,255,256,264,266,267,270,278,282,283,284,287,293,294,295,298,300,306,314,315,316,317,318,322,323,324,325,328,335,337,339,340,341,342,346,347,348,351,354,355,361,362,363,364,365,368,369,373,376,377,379,380,381,382,384,385,387,388,390,392,393,394,398,399,400,404,407,413,417,421,422,424,425,426,428],"80":[62,64,85,88,191,280,345,409],"800":371,"802":19,"8038919141626675":300,"8080":413,"8096":284,"80e3":298,"810210290266568":351,"81474977e":422,"8174569":392,"8178049":114,"82":298,"83":351,"830810203546193":351,"83622458e":114,"83697020e":253,"84684395e":422,"85259041e":422,"85986396":392,"86109590e":422,"875404242265082":314,"87820725":422,"88127210e":114,"88708159":422,"8912709229530473":[323,324],"89312837e":422,"9":[10,40,62,84,90,114,125,134,136,139,149,151,159,161,170,183,190,228,240,248,254,256,264,266,267,270,274,278,282,283,284,293,294,295,298,300,306,314,318,322,323,324,325,328,335,337,339,340,341,342,346,347,348,382,385,387,388,390,394,398,400,407,414,415,422,424,425,427,428],"9061938024368232":[323,324,347,400],"9120975839632417":300,"92":318,"92239754":300,"9223975406030527":300,"929817642184354":314,"93chu_sequ":409,"94024315e":422,"946e":298,"94724205":422,"95":[284,314,354],"95312500e":[114,170],"95337172":114,"95th":314,"9678537j":170,"97070312e":[114,170],"979400086720376":[311,312],"98":318,"98046875e":[114,170],"987545085138018":314,"98970004336019":303,"99":394,"99023438e":[114,170],"9952623149688795":333,"999":354,"9993519409971622":422,"A":[6,10,40,43,56,63,67,75,77,78,79,80,81,83,88,101,108,109,114,125,126,139,151,152,170,181,193,196,211,220,230,241,242,249,255,257,279,284,293,294,295,298,322,323,324,328,330,331,342,346,347,348,351,356,361,371,384,385,390,394,400,401,411,412,414,417,424,426,430],"But":318,"For":[97,98,100,274,275,277,282,286,293,298,301,307,318,319,387,388,398,401,406,413,421],"IF":298,"If":[43,89,95,99,136,145,161,196,233,241,249,255,276,278,282,285,286,287,288,289,298,299,300,301,306,310,315,316,321,329,334,344,346,349,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,383,384,389,399,402,404,405,417,424,430],"In":[10,12,18,19,24,32,40,62,63,64,84,85,88,89,90,97,99,101,109,110,114,123,125,126,129,130,131,132,134,135,136,137,138,139,141,147,149,151,152,154,155,156,157,159,160,161,162,163,165,167,170,179,181,182,183,190,191,193,194,220,228,230,231,232,240,242,248,250,251,252,253,254,257,258,264,266,267,270,271,272,274,276,278,279,280,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,354,355,356,357,358,359,360,361,362,363,364,365,368,369,370,373,374,376,377,378,379,380,381,382,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,417,420,424,427],"It":[43,108,164,190,196,211,220,241,249,255,286,298,318,346,376,417,424],"No":298,"One":[228,240,254,428],"Or":[415,416],"The":[10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,413,414,415,416,417,421,422,424,426,427,428,430,432],"Then":232,"There":[321,331,332,384,432],"These":[164,240,248,254,300,359,380,415,426],"To":415,"_":[228,240,248,254,284,299,314,346,417,424],"_0":[2,9,96,273,323,348,358,401,417,424],"_1":[2,9,96,273,324,347,358,417,424],"____":278,"__call__":[10,11,12,18,24,27,32,35,56,57,62,63,64,84,85,88,89,90,94,108,109,110,123,125,127,139,140,141,147,149,164,165,166,167,179,181,182,190,191,193,194,211,212,220,223,230,231,232,233,242,243,256,257,258,278,279,280,431],"__init__":414,"__len__":[40,62,84,88,108,111,149,183,185,190,230,256,278],"_rc_param":380,"_scalartype_co":[9,232,233,376,379],"_version":414,"a1":[417,424],"a2":[323,324,417,424],"a_":[64,85,191,220,221,222,224,280,345],"a_0":164,"a_1":[417,424],"a_2":417,"a_hat":[426,427],"a_j":[164,167,168,181,193,362,363,364,365,368,369,377,381,422],"a_receiv":[220,221,224],"a_ref":220,"a_refer":[220,222,224],"a_rx":220,"a_tap":[164,168,181,193,422],"a_tild":[195,199,228,240,248,254,426,427],"ab":[88,136,161,181,323,324,417,424,428],"abil":431,"about":[149,288,289,359,360,379,387,388,416],"abov":[307,406,431],"absent":348,"absolut":[229,232,234,237,241,255,319,374,392,417,424],"abstractmethod":[42,44,53,195,197,207],"acceler":430,"accept":431,"access":413,"accomplish":[420,427],"accord":[10,315,316,399,404],"accordingli":181,"accumul":[101,181,232,233,234,236,426,431],"accur":[282,283,337,339,340,341,344,398],"acf":431,"achiev":[2,284,294,342,346,347,348,388,392,394,400,417,424,427,428,431],"across":[40,62,88,258,284,313,318,327,342,346,394,401],"activ":415,"actual":360,"ad":[286,298,356,361,371,414,430,431],"add":[101,103,106,228,240,248,254,286,319,326,356,361,371,386,391,411,427,432],"add_iid_rv":[7,282,431],"add_rv":[7,283,431],"adder":[10,19,84,125,151,211,232,304,305,426],"addit":[0,5,19,20,286,287,294,321,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,381,406,411,417,424,430,431],"addition":[125,430],"additivescrambl":[0,19,20,21,22,23,431],"addopt":416,"adjac":[43,229,241,249,253,255,427,428],"adjust":344,"advanc":[191,280,394],"advis":298,"affect":[323,324,342,346,347,348,385,390,400,401],"after":[12,13,14,267,270,294,346,414],"against":[284,354,359],"agc":[10,11,12,13,14,15,16,17,18,220,412,430,431],"aid":[220,225,242,245],"aim":430,"alarm":[2,96,97,98,99,100,273,274,275,276,277,284,323,324,342,346,347,348,354,358,372,394,400,401,417,424,430,431],"albersheim":[2,284,342,431],"algorithm":[293,301,359,431],"alias":[307,406,431],"align":[63,109,191,240,257,279,280,294,325,359,407,417,420,424],"all":[20,62,84,101,106,126,128,152,153,190,233,256,258,265,278,314,337,340,359,361,370,371,384,414,416,430,431],"allow":[323,324,342,347,348,387,388,400,401,415,416,430,431],"along":[285,293,310,313,327,350,352,431],"alouini":[250,252],"alpha":[2,8,10,12,13,62,193,194,196,241,249,255,320,380,385,390,401,425,428],"alphabet":[24,25,26,32,33,34,90,92,93,95,306],"also":[10,62,136,161,220,228,242,298,317,318,320,376,430],"altern":[2,96,273,284,324,417,422,424],"although":228,"alwai":298,"amalia":394,"ambigu":301,"amplifi":[10,12,14],"amplitud":[8,62,195,196,220,221,222,224,294,330,417,424,426],"an":[0,2,3,5,7,10,12,19,20,32,43,62,84,88,96,108,110,114,116,134,136,138,150,159,161,163,164,165,167,170,172,181,182,183,184,190,193,194,196,229,230,232,241,249,250,252,255,273,278,282,287,300,317,336,338,349,355,359,360,364,373,379,384,405,408,412,415,426,430,431],"analysi":[67,74,282,283,337,339,340,341,344,398,414,426,430,431],"analyz":430,"analyze_psk":427,"angl":[9,242,319,369,426],"angular":139,"ani":[303,307,333,346,406,416],"annot":[253,287,358,378,393,414,431],"answer":318,"antenna":[318,351,430],"anti":[307,406,431],"apa":430,"apart":240,"api":[430,431,432],"apm":394,"appear":[10,420],"append":[150,317,402,425],"appendix":[67,211,320,385,390],"appli":[9,46,62,84,89,190,196,228,240,248,254,278,288,289,298,319,329,330,334,356,359,360,361,364,367,375,378,379,380,388,391,411,430],"applic":[125,151,293,431],"approach":[10,24,32,67,75,77,78,79,80,81,88,139,211,220,242,292,297,344,385,390,392,426],"appropri":32,"approx":[12,13,14,149],"approxim":[193,194,282,284,301,354,430,431],"april":431,"ar":[24,26,27,32,42,43,52,55,62,63,64,84,85,89,90,96,101,103,104,105,107,109,110,125,136,138,141,150,151,163,165,167,182,190,191,194,196,206,210,228,229,231,233,240,241,248,249,254,255,256,257,258,265,267,270,273,278,279,280,282,287,291,292,293,296,297,300,301,315,316,317,318,321,325,326,331,332,335,337,339,340,341,344,345,349,356,357,359,361,362,363,365,367,368,369,370,371,375,376,378,379,380,382,384,386,394,399,402,403,404,407,413,415,417,420,422,424,426,428,430,432],"arang":[10,40,62,84,139,149,183,190,264,266,267,270,278,286,301,346,382,420,426],"arbitrari":[0,8,139,140,141,142,143,144,145,146,147,148,183,184,195,419,430,431],"arcsin":351,"aren":413,"arg":414,"argument":[63,64,85,109,191,257,279,280,299,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,381,414,421,422,431],"arithmet":[125,130,131,151,155,156],"around":[149,229,241,249,255,376],"arrai":[7,19,24,32,40,43,63,90,101,114,136,161,170,183,191,196,228,229,232,240,241,248,249,253,254,255,264,266,267,270,280,285,290,291,295,296,300,304,305,306,310,313,321,322,325,327,332,335,336,338,349,350,352,379,382,392,394,405,407,422,426],"arrang":382,"array_equ":[19,228,240,248,254,293,325,407],"arraylik":[1,2,3,4,5,6,7,8,9,10,11,19,20,21,23,24,27,29,32,35,37,40,42,43,44,46,48,53,56,57,62,63,64,84,85,88,90,94,95,96,97,98,99,100,101,103,108,109,110,125,126,128,134,139,140,145,149,151,152,153,159,164,165,166,167,181,183,184,186,187,190,191,193,195,196,197,199,200,201,202,207,211,212,220,223,228,229,230,240,241,242,243,248,249,250,252,254,255,256,257,258,271,272,273,274,275,276,277,278,279,280,284,285,286,287,291,292,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,328,330,333,336,338,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,377,378,381,382,383,387,388,389,391,392,393,394,396,397,399,400,401,402,403,404,405,406,408,411],"arriv":[4,315,316,399,404],"ascend":[101,106],"assum":[95,96,273,286,306,315,316,318,349,379,392,399,404,405],"astral":414,"astyp":[284,346,354],"asymmetr":403,"attack":[10,12,13],"atten":[64,85,191,280,345,431],"attenu":[12,13,64,85,191,280,318,345,385,390],"august":431,"author":430,"auto":[290,321,325,332,335,357,363,365,367,368,369,375,407,409,431],"automat":[10,11,12,220,358,412,430,431],"avail":[426,427,430],"averag":[3,6,101,193,194,220,225,226,228,230,231,240,242,245,246,254,285,286,287,314,350,367,387,423,430,431],"average_pow":[6,285,350,431],"avg":[285,286,350],"awgn":[5,228,240,248,250,252,254,286,287,294,314,355,356,373,374,392,393,402,403,411,427,430,431],"awgn_capac":[5,287,392,393,431],"ax":[9,284,285,310,313,327,350,352,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,394,431],"axi":[282,283,285,310,313,327,337,339,340,341,344,350,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,398,417,420,424,431],"axvlin":[287,298,393,417,424],"b":[3,62,84,164,167,190,256,258,259,264,266,267,270,278,284,287,315,316,320,328,362,364,377,382,413,414,428],"b_":[6,315,316,387,399,404],"b_c":300,"b_i":[164,167,169,181,193,362,363,364,365,368,369,377,381,422],"b_n":[62,67,68,69,74,75,77,80,81,84,88,108,117,149,164,173,181,190,193,211,213,217,230,256,278,299,315,316,399,404],"b_nt":426,"b_tap":[164,169,181,193,422],"backward":[136,161,181,182,431,432],"band":149,"bandpass":[3,288],"bandpass_fir":[3,288,431],"bandstop":[3,289],"bandstop_fir":[3,289,431],"bandwidth":[6,62,67,68,69,74,78,84,88,89,108,117,149,164,173,181,190,193,211,213,217,230,256,278,287,288,289,299,300,315,316,320,385,387,390,393,399,404,426,428,430,431],"barker":[290,410,430,431],"barker_cod":[290,410,431],"barrio":394,"base":[56,344,357,359,360,361,370,371,376,379,411,431],"baseband":[3,9,67,228,240,248,254,298,343,361,370,402,403,425,426,431],"bb":[67,425,426],"bb_papr":425,"bch":293,"beamwidth":[5,351],"bec":[5,24,25,26,28,29,31,90,291,292,306,411,430,431],"bec_capac":[5,292,431],"becaus":[220,325,342,401,407,431],"becom":298,"befor":[267,270,342,346,359,426,432],"begin":[240,254,273,294,321,331,361,384,385,390,417,424],"being":428,"below":[293,392,413,421,422],"benchmark":415,"benefici":415,"benefit":359,"ber":[6,9,42,44,101,195,197,228,240,248,250,254,355,374,427,430,431],"berlekamp":[293,431],"berlekamp_massei":[125,151,293,410,431],"best":[150,317,387,388],"beta":[10,12,14],"better":[346,388],"between":[3,6,9,12,18,64,84,85,89,90,110,123,141,147,165,167,179,182,190,191,194,231,242,258,278,280,284,294,298,300,313,318,327,344,357,359,367,371,375,406,426,430],"bi":[5,294,430,431],"biawgn_capac":[5,294,431],"bibtex":430,"big":[339,341],"bin":[43,229,241,249,253,255,282,283,300,314,323,324,337,339,340,341,344,356,359,371,378,398,417,424,427],"binari":[5,7,19,21,23,24,27,28,32,35,36,43,90,229,241,249,253,255,290,291,292,294,295,296,297,306,321,325,332,349,378,392,405,407,410,411,427,430,431],"binary_cod":[295,410,431],"binaryerasurechannel":[24,25,26,27,28,29,30,31,411,431],"binarysymmetricchannel":[32,33,34,35,36,37,38,39,411,431],"bipolar":[290,321,325,332,335,357,407,431],"bit":[5,6,7,9,24,29,30,32,37,38,42,43,44,45,56,59,60,90,101,103,106,195,197,198,228,229,240,241,248,249,250,253,254,255,287,291,292,294,296,297,308,309,311,328,349,355,374,392,393,396,405,430,431],"black":431,"blackman":[89,288,289,329,334],"blackmanharri":[288,289,329,334],"blank":414,"block":[0,10,19,40,41,62,67,84,108,190,193,211,232,278,304,305,430],"blockinterleav":[0,40,41,431],"bn":[67,68],"bnt":[67,69,426],"bold":380,"bool":[6,10,12,18,62,64,84,85,88,89,97,98,99,100,108,110,114,123,139,141,147,149,164,165,167,170,179,181,182,190,191,193,194,228,230,231,240,248,250,252,254,256,258,274,275,276,277,278,280,285,310,321,323,324,331,342,343,346,347,348,352,353,356,358,359,360,361,369,371,378,379,383,389,395,400,401,410],"boolean":331,"both":[20,128,138,153,163,220,242,299,301,315,318,339,346,356,357,359,360,378,379,380,399],"bottom":[62,84,190,256,258,262,265,278],"bound":[4,282,283,294,315,316,337,339,340,341,344,398,399,404,430,431],"boundari":[62,228],"bp":[1,42,45,195,198,228,240,248,254,308,309,311,396,427],"bpe":[7,349,405],"bpsk":[232,250,252,294,355,373,374,387,388,425],"bpsk_bb_papr":425,"bpsk_ber":427,"bpsk_pb_papr":425,"bpsk_ser":427,"branch":[3,62,84,190,256,258,259,267,270,278,382,414,415],"brown":328,"browser":413,"bsc":[5,32,33,34,36,37,39,90,294,296,297,306,411,430,431],"bsc_capac":[5,294,297,431],"budget":[430,431],"bug":[431,432],"bugbear":414,"build":[414,430],"built":413,"bursti":10,"byte":[7,328],"c":[19,20,24,29,30,32,37,38,40,41,56,59,60,62,63,64,65,67,75,77,78,79,80,81,90,103,104,105,106,107,125,126,128,129,130,131,132,134,135,136,137,138,151,152,153,154,155,156,157,159,160,161,162,163,195,196,209,211,228,240,248,253,254,287,292,293,294,297,298,318,321,335,351,378,392,393,402,403,408,410,426],"c_":[20,125,126,128,129,130,137,151,152,153,154,155,162,293,294,409],"c_0":[19,125,126,137,151,152,162],"c_1":[19,125,126,137,151,152,162],"c_2":151,"c_hard":294,"c_n":[19,125,151],"c_soft":294,"c_ub":294,"calcul":[4,5,7,24,29,32,37,282,283,287,292,294,297,298,301,314,315,316,318,336,337,338,339,340,341,344,351,387,388,391,392,393,398,399,404,408,417,424,430,431],"call":[12,18,63,64,84,85,89,109,110,123,136,141,147,161,165,167,179,182,190,191,194,231,257,258,278,279,280],"can":[101,103,104,105,107,211,228,256,282,283,286,298,314,320,325,344,349,361,364,388,392,398,407,415,417,421,422,424,427,430,432],"cannot":[211,346],"capac":[24,29,30,32,37,38,56,59,60,90,287,292,294,297,392,393,430,431],"carrier":[80,248,298],"cascad":[240,248,254,361],"case":[84,190,254,273,278,294,300,318,321,331,384,385,390],"caus":298,"caution":[103,104,105,107],"ccdf":[7,271,272],"ccf":431,"cdf":[337,339,340,341,344],"cdot":[20,62,84,88,108,125,128,129,130,142,151,153,154,155,190,193,220,242,256,257,268,278,279,288,289,293,294,315,316,329,330,332,334,337,339,340,341,343,344,354,387,388,399,404],"center":[62,288,289,298,317,318,326,329,334,359,360,379,386,402,403,431],"center_freq":[3,288,289,298],"central":[282,417,424],"centroid":[315,316,387,388,399,404],"cf":302,"cgl":[2,300,336,338,430],"chang":[43,47,298,319,415,432],"channel":[3,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,56,57,58,59,60,61,62,63,64,65,66,90,91,92,93,94,95,228,240,250,252,256,258,265,287,291,292,294,296,297,306,355,373,392,393,430,431],"chapter":[24,32,62,84,90,190,250,252,278,294,321,331,345,382,384],"characterist":[9,20,96,99,125,128,129,130,151,153,154,155,273,276,293,335,347,372,430,431],"characteristic_poli":[19,20,125,126,128,129,130,138,151,152,153,154,155,163,293],"charlong":431,"chaudhari":[10,139],"chebwin":[288,289,329,334],"chebyshev":[288,289,329,334],"check":[414,431],"chi":[283,339,341,394,398,417,424],"chi2":[283,339,341,398,417,424],"chi_":[96,97,98,417,424],"chi_n":[96,97,98,100],"chirp":211,"chu":[409,410,430,431],"ci":413,"circl":[229,241,249,255,422],"circular":[290,321,325,332,335,357,407,409],"cite":430,"claim":[284,354,394],"clairvoy":[2,273],"class":[0,2,3,6,8,10,19,24,32,40,42,56,62,67,84,88,90,96,101,103,104,105,106,107,108,125,131,139,149,151,156,164,181,183,190,193,195,211,220,228,230,232,240,242,248,254,256,273,278,410,411,412,421,422,427,430,431],"classmethod":[125,126,151,152,164,165,181,193],"clock":[298,411,431],"clock_error":[298,411,431],"clockwis":[229,241,249,255],"clone":415,"close":[67,74,76,294,360,412,430,431],"closedlooppl":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,412,426,431],"closer":387,"cmap":[356,371],"cn":[273,286,417,424],"cn0":[67,80],"co":[84,139,190,232,278,343,385,390,395],"code":[42,43,45,195,198,228,229,240,241,248,249,253,254,255,290,295,308,309,311,321,322,325,332,356,378,392,396,407,410,415,427,430,431],"coeff":[126,137,152,162],"coeffici":[42,52,55,62,64,84,85,108,110,164,167,190,191,206,210,258,278,280,335,362,363,364,365,368,369,377,381,382,421,422],"coher":[97,98,99,100,284,294,299,300,315,316,323,324,336,338,342,346,347,348,354,394,399,400,401,404,418,430,431],"coherent_gain":[2,284,299,346,354,417,431],"coherent_gain_loss":[2,300,431],"col":[40,41],"collaps":414,"collect":371,"color":[62,88,181,284,287,298,346,354,357,359,360,361,370,371,376,379,393,417,424,425,428],"colorbar":[356,361,371],"column":[40,41,382],"com":[284,288,289,317,320,325,329,334,345,394,407,414,415,430],"combin":[284,321,342,354,394],"come":359,"comm":[325,407],"command":[413,414],"commit":415,"common":[417,424],"commonli":300,"commun":[10,24,32,62,67,75,77,78,79,80,81,84,88,90,139,190,211,220,242,250,252,278,321,331,345,382,384,385,390,426,430],"commut":[62,84,190,256,258,262,265,278],"compar":[139,181,193,220,230,242,250,252,284,288,289,299,317,323,324,329,334,335,342,346,347,354,359,364,374,376,387,388,394,417,424,428],"comparison":[139,220,242,284,354,414],"compat":432,"complement":341,"complementari":[271,272],"complex":[3,6,9,42,43,46,48,62,67,84,88,96,97,98,99,100,108,114,149,164,170,181,190,193,195,196,199,200,201,202,209,220,223,228,229,230,232,233,239,240,241,242,243,248,249,253,254,255,256,273,274,275,276,277,278,286,287,298,307,314,323,324,330,342,343,346,347,348,356,357,359,360,361,363,365,367,368,369,375,378,379,395,400,401,402,403,406,411,417,420,421,422,424,426,427,430,431],"complex128":[3,10,11,42,48,62,84,88,108,114,149,164,170,181,190,193,195,199,200,201,202,209,228,230,232,233,239,240,248,253,254,256,278,330,402,409,410,411],"complex_symbol":[228,240,248,254],"compon":[330,402,403,406],"composit":301,"composite_snr":[4,301,431],"compress":[298,431],"comput":[2,7,42,44,53,56,59,84,90,96,97,98,99,100,114,170,195,197,207,220,228,240,242,248,250,252,254,271,272,273,274,275,276,277,282,283,285,286,299,300,310,313,318,323,324,327,336,337,338,339,340,341,342,344,346,347,348,350,352,357,359,398,400,401,421,422,426,428,430,431],"computation":430,"concaten":[139,422],"condit":[294,417,424],"config":[414,417,420,421,422,424,425,426,427,428],"configur":[56,59,90,125,151,426],"confus":318,"conj":[170,362,363,364,365,368,369,377,381,422,426],"conjug":[402,403,422],"connect":[62,84,190,256,258,262,265,278],"consecut":[41,43,229,241,249,255],"consid":[228,328,359],"consist":[62,84,88,103,104,105,106,107,108,121,139,146,149,190,230,256,278],"constant":[211,228,232,234,236,301,315,316,318,319,346,367,375,399,404,417,422,424,426],"constel":[9,228,240,248,251,254,286,314,330,356,391,409,430,431],"constrained_layout":380,"construct":19,"contain":[101,184,286,321,328],"content":307,"contigu":[417,424],"continu":[9,42,43,181,228,370,388,420,430,431],"contribut":344,"control":[10,11,12,67,220,232,234,385,390,426,430,431],"conveni":[294,421,422],"convent":[240,254,414],"convers":[426,430,431],"convert":[1,3,125,138,151,163,195,199,201,228,240,248,254,303,308,309,311,312,323,324,328,333,342,346,347,348,396,397,400,401,402,403],"convolut":[63,109,190,257,279,282,283,337,339,340,341,344,398],"convolv":108,"coordin":376,"copi":406,"correct":[298,431],"correctli":[315,316,399,404],"correl":[2,9,273,290,315,316,321,325,331,332,335,357,384,394,399,404,407,409,430,431],"correspond":[20,101,106,126,128,134,142,152,153,159,261,298,335,359,371],"cosin":[8,88,181,196,233,241,249,255,361,379,385,387,388,390,421,430,431],"cost":359,"could":298,"count":[101,104,314],"count_nonzero":[24,32,90],"counter":[229,241,249,255],"cov":415,"cp":232,"cpfsk":228,"cpm":[8,9,42,43,44,45,46,47,48,49,50,51,52,53,54,55,370,430,431],"cram\u00e9r":[4,315,316,399,404,430,431],"creat":[10,12,19,20,24,28,32,36,40,41,42,43,56,58,62,64,67,74,84,85,88,89,90,95,101,102,108,110,125,126,128,134,138,139,141,149,150,151,152,153,159,163,164,165,167,181,182,183,184,190,191,193,194,195,196,211,213,228,229,230,231,232,234,240,241,248,249,251,254,255,256,258,278,280,286,290,314,319,321,325,332,343,359,360,387,388,391,395,402,403,407,409,420,426,428],"create_x":[417,424],"crest":[6,302],"crest_factor":[6,302,350,431],"critic":[74,83,213,214,359,360,426],"crlb":[4,301,315,316,399,404,431],"cross":[321,325,331,332,335,384,407,409,431],"cryptographi":[125,151,293],"cubic":139,"cumsum":428,"cumul":[271,272],"current":[10,15,125,135,142,151,160,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,415],"curv":[9,96,99,250,252,273,276,284,301,354,355,372,373,374,431],"custom":[43,62,66,84,86,183,190,192,196,241,249,255,278,281,431],"cutoff":[329,334],"cutoff_freq":[3,329,334],"cw":307,"cycl":[319,357,359,360,376,379],"cyclic":409,"d":[7,63,88,108,112,125,139,142,149,151,230,282,293,313,318,327,337,339,340,341,351,413,414,415,417,424,430,431],"d200":414,"d205":414,"d212":414,"d213":414,"d415":414,"da":[220,242],"da_error":[220,242],"damp":[67,74,83,211,213,214,426],"damping_factor":[67,74,211,213,214],"dash":[284,357,359,360,379],"data":[8,220,225,242,245,304,305,328,349,379,405,430],"data_aided_error":[220,225,242,245],"datetimez":414,"db":[1,5,6,44,53,62,64,67,78,80,85,97,99,101,103,104,105,107,181,191,197,207,228,240,248,250,252,254,274,276,280,284,285,286,287,288,289,294,299,300,301,303,308,309,310,311,312,314,315,316,317,318,320,323,324,329,330,333,334,336,338,342,345,346,347,350,351,352,353,354,355,356,357,358,359,360,366,373,383,389,392,393,394,396,397,399,401,404,417,424,425,427,428,431],"dbi":[318,351],"dbm":[303,333],"dbv":[303,333],"dc":[181,317,360],"dd":[242,426,431],"dd_error":[220,242],"de":[250,252,426,431],"debug":416,"decad":[114,170,362,363,365,368,369,421,426],"decai":[10,12,14,420,422],"decemb":431,"decibel":[285,303,310,333,352,353,383,389,430,431],"decide_symbol":[195,199,228,240,248,254,426,427,431],"decim":[3,42,43,46,48,52,62,84,85,86,87,190,195,196,199,200,201,202,206,209,228,229,240,241,248,249,253,254,255,256,258,260,262,265,278,280,307,335,345,427,430,431],"decis":[32,42,46,195,199,200,220,223,226,228,240,242,243,246,248,254,294,426],"decision_directed_error":[220,226,242,246],"decod":[8,293,304],"decompos":[3,62,84,190,278,382],"decomposit":[267,270,431],"decorrel":394,"decreas":[10,318,342],"def":[417,420,424,425,427],"default":[9,20,43,116,122,126,128,134,136,152,153,159,161,229,241,249,253,255,285,290,293,310,313,321,325,327,332,335,350,352,356,363,365,367,368,369,371,375,378,380,407,427,431],"default_rng":[28,36,58,61,95,286,291,296,306,417,424],"defin":[67,90,108,125,129,130,131,133,137,151,154,155,156,158,162,164,181,286,294,300,306,320,346,347,348,359,360,372,385,390,401,409,412,422,430],"definit":[89,288,289,329,334,359,360,362,363,364,365,367,368,369,375,377,381,431],"deg":[330,426],"degre":[19,42,43,50,125,133,151,158,195,196,204,228,229,240,241,248,249,251,254,255,293,319,321,330,331,332,335,343,351,384,394,395,410,417,424,426,431],"deinterleav":[40,183,186,188],"delai":[3,9,62,63,84,88,108,109,112,115,119,139,142,149,150,190,211,230,232,256,257,261,278,279,304,305,317,326,363,368,386,426,430,431],"delta":[43,47,75,77,116,149,150,172,298,300,317,319,336,338,364,391,421,422],"demodul":[8,42,46,195,200,228,240,248,254,431],"demonstr":[298,382],"denomin":422,"denot":[282,283,337,339,340,341,344,398],"densiti":[5,9,80,282,283,294,323,324,337,339,340,341,344,347,348,358,361,367,387,392,398,399,400,404,417,424,425,428,430],"depend":[293,318,413,414,416,431],"deprec":426,"deprecationwarn":426,"deriv":[88,337,339,340,341,344],"descrambl":[19,21],"design":[3,43,62,64,66,84,85,86,149,190,191,192,196,241,249,255,278,280,281,288,289,317,329,334,345,413,430,431],"design_bandpass_fir":431,"design_bandstop_fir":431,"design_frac_delay_fir":431,"design_highpass_fir":431,"design_lowpass_fir":431,"design_multirate_fir":431,"design_multirate_tap":431,"designbandpassfir":288,"designbandstopfir":289,"designfracdelayfir":317,"designhighpassfir":329,"designlowpassfir":334,"designmultiratefir":345,"desir":[2,10,12,16,284,286,298,342,346,354,394,400,401,424,427],"detail":[89,288,289,329,334,359,360,367,375],"detect":[96,97,98,99,100,220,223,225,226,242,243,245,246,273,274,275,276,277,284,294,299,300,323,324,342,346,347,348,354,358,366,372,394,400,401,430,431],"detection_pdf":431,"detector":[9,32,67,73,74,96,213,220,227,242,247,273,284,323,324,342,346,347,348,354,358,400,401,426,430,431],"detector_pdf":[9,323,324,347,348,358,400],"determin":[41,282,283,293,331,337,339,340,341,344,371,398,410,417,424],"detrend":[367,375],"dev":[414,416],"develop":[414,415,416],"deviat":[43,47,315,316,399,404,417,424],"df":[387,395,399,404],"dft":[9,300,359,360,430,431],"diagram":[9,10,19,62,67,84,108,190,193,211,228,232,240,248,254,278,304,305,361,430,431],"diamet":[318,351],"dictat":[63,109,257,279,335],"diff":[357,359,360,379,425],"diff_decod":[8,304,305,431],"diff_encod":[8,228,240,248,250,252,254,304,305,431],"differ":[4,7,43,138,163,164,193,229,241,249,253,255,284,288,289,301,315,317,325,329,334,335,346,357,359,360,364,379,398,399,407,409,428,431],"differenti":[3,8,88,89,228,250,252,294,304,305,357,359,360,379,430,431],"digit":[10,24,32,67,75,77,78,79,80,81,88,90,139,211,220,242,250,252,321,331,384,385,390,426,430,431],"dipol":318,"direct":[136,161,220,226,242,246,431],"directori":[413,415],"dirhtml":413,"disabl":414,"discard":[3,62,84,278,307],"discret":[9,10,62,67,75,77,78,79,80,81,88,90,95,139,181,193,211,220,230,242,286,306,312,359,360,385,388,390,397,411,420,426,430,431],"discretememorylesschannel":[90,91,92,93,94,95,411,431],"dish":[318,351],"displai":[328,356,362,363,365,367,368,369,375,378],"displaystyl":[254,385,390],"dist":414,"distanc":[5,313,318,327,430,431],"distinct":[228,240,254],"distribut":[2,7,271,272,282,283,323,324,337,339,340,341,344,358,398,417,424,431],"divis":[321,331,384],"dmc":[90,91,92,93,95,306,411,430,431],"do":420,"doc":414,"document":431,"doe":[307,359,406],"doesn":431,"dog":328,"dollar":413,"domain":[3,6,285,286,298,302,307,310,313,319,327,330,343,350,352,353,357,359,360,362,367,371,375,379,383,387,388,389,391,402,403,406,411,417,424,430,431],"domin":394,"done":[84,301,346,413],"doppler":298,"dot":[20,95,125,126,128,129,130,132,134,135,137,151,152,153,154,155,157,159,160,162,195,196,209,228,240,248,253,254,282,293,306,335,337,340,378],"doubl":[318,351],"down":[40,382],"downsampl":[3,62,84,278,307,431],"dsp":[288,289,317,329,334,345,430],"dt":[315,316,388,395],"dtft":[9,298,359,360,430,431],"dtype":[62,84,88,108,114,149,164,170,181,190,193,228,230,232,233,240,248,254,256,278,290,321,325,332,335,349,376,379,405,407,410,426],"dtypelik":[349,405],"dtz":414,"due":[300,346,428],"durat":[3,298,388,395],"dure":[298,300],"durisi":294,"dw":344,"dwell":394,"dx":[282,283,294,398],"dy":294,"dz":[337,339,340,341],"e":[12,13,14,24,26,27,106,220,242,273,274,275,276,277,285,291,292,294,298,310,315,316,332,359,360,399,404,409,414,415,421,422,427],"e2":409,"e501":414,"e713":414,"e714":414,"e_":[1,9,42,53,103,104,105,106,107,195,207,228,240,248,252,254,286,294,308,311,312,314,356,373,397,427,430],"e_b":[1,5,9,42,44,103,104,105,106,107,195,197,228,240,248,250,254,308,309,311,355,374,392,396,430,431],"each":[3,62,63,64,84,85,109,190,191,256,257,258,262,265,266,278,279,280,282,283,314,328,335,337,339,340,341,344,345,347,367,371,375,394,398,406,431],"easili":[413,414,416,421,422],"ebn0":[1,9,42,44,195,197,228,240,248,250,254,308,309,355,374,392,427],"ebn0_to_esn0":[1,53,207,252,308,427,431],"ebn0_to_snr":[1,228,240,248,254,309,431],"edg":388,"edit":[414,422],"effect":[149,298,301,315,399,431],"effici":[62,136,161,228,307,342,351,374,392,393,406],"either":[20,128,153,223,232,243,282,283,314,337,339,340,341,344,398],"electromagnet":[5,408],"element":[7,41,184,328,349,405,426],"els":[414,424,425],"empir":[282,283,337,339,340,341,344,398,417,424],"en":[19,302,332,335,350,409],"enabl":[414,431],"encod":[248,250,252,304,305,430],"end":[136,161,240,254,273,294,318,321,331,361,384,385,390,402,414,417,424],"endpoint":[114,170,422],"energi":[2,5,9,44,53,96,197,207,250,252,273,274,275,276,277,294,308,309,310,311,312,318,320,326,355,373,374,385,386,387,388,390,392,396,397,430,431],"energydetector":[2,96,97,98,99,100,431],"enough":349,"enr":[9,273,274,276,366],"ensur":[315,316,399,404,426],"entir":[285,310,313,327,350,352,431],"entropi":294,"enumer":394,"envelop":[228,315,316,388,421,422],"epsilon":298,"equal":[62,125,145,228,294,299,301,321,417,424],"equat":[75,77,78,79,80,81,97,98,100,164,193,240,248,254,274,275,277,284,301,315,316,318,354,394,399,404],"equival":[62,84,138,150,163,190,278,286,287,293,312,315,316,317,325,361,397,399,404,407,415,417,420,424],"eras":[24,291],"erasur":[5,24,26,27,28,31,90,291,292,306,411,430],"error":[6,9,12,13,14,32,42,44,53,67,73,74,80,101,102,103,105,106,107,195,197,207,211,213,220,223,225,226,227,228,240,242,243,245,246,247,248,250,252,254,284,297,298,314,315,316,354,355,373,374,394,399,404,411,414,426,430,431],"error_r":[101,105,106,298,427],"errorr":[6,101,102,103,104,105,106,107,427,431],"esn0":[1,9,42,53,195,207,228,240,248,252,254,311,312,373,427],"esn0_to_ebn0":[1,44,197,250,311,431],"esn0_to_snr":[1,312,427,431],"estim":[2,46,67,199,200,284,315,316,354,367,375,394,399,404,426,430],"eta":351,"euclidean":[6,313,430,431],"evalu":[344,421,422],"even":[64,85,150,191,254,280,288,289,317,320,321,329,331,332,334,345,376,384,385,390],"evenli":[114,170],"event":[337,339,340,341],"everi":[3,62,84,101,278,307,420],"evm":[6,314,430,431],"exactli":[149,342],"examin":[149,228,240,248,254,321,332,346,417,424],"exampl":[10,19,24,32,40,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,190,193,194,211,212,213,214,215,216,217,218,219,220,228,230,231,232,233,234,235,236,237,238,239,240,242,248,250,251,252,253,254,264,266,267,269,270,271,272,274,276,278,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,354,355,356,357,358,359,360,361,362,363,364,365,368,369,370,373,374,376,377,378,379,380,381,382,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,417,424,426,431],"exce":[271,347,348],"exceed":[271,272,282,283,337,339,340,341,344,398],"excess":[385,390,428],"exclud":414,"exclus":379,"execut":416,"exist":290,"exp":[10,62,170,232,233,240,248,254,294,320,330,343,362,363,364,365,368,369,377,381,395,409,420,422,426],"expect":298,"expens":[385,390],"explicit":431,"explicitli":[286,346],"exponenti":[3,62,233,307,343,395,402,403,406,420,421,422,431],"express":344,"extend":414,"extens":414,"extract":426,"extrapol":346,"ey":[9,228,240,248,254,361,430,431],"f":[5,20,43,47,62,75,77,84,88,99,114,115,119,125,128,129,130,149,151,153,154,155,170,181,190,232,233,278,286,298,300,315,316,318,319,320,331,336,338,343,346,347,351,359,360,384,385,387,390,394,395,399,404,408,409,414,417,420,421,422,424,425,426,427,428],"f401":414,"f403":414,"f_":[42,43,47,54,62,63,67,74,82,84,114,115,117,119,170,173,190,195,196,208,228,229,240,241,248,249,254,255,256,257,268,278,279,282,288,289,294,298,307,309,312,319,320,329,334,343,357,359,360,361,362,363,365,367,368,369,370,371,375,379,387,388,391,395,396,397,402,403,406,420,421,422,426,428],"f_c":[298,329,334],"f_i":62,"f_start":62,"f_stop":62,"f_x":[282,283,294,337,339,340,341,344,398],"f_y":[283,294,339,341,344,398],"f_z":[282,283,337,339,340,341,344,398],"fa":[2,9,96,97,98,99,100,273,274,275,276,277,284,315,316,342,346,347,348,354,372,394,399,400,401,404,417,424],"face":376,"facecolor":[417,420,421,422,424,425,426,427,428],"fact":[325,407],"factor":[2,3,6,67,74,83,193,194,196,211,213,214,241,249,255,301,302,307,315,316,344,359,399,401,404,406,426],"fade":[250,252],"fals":[2,6,12,62,64,84,85,89,96,97,98,99,100,108,110,114,139,141,164,165,167,170,182,190,191,193,194,228,230,231,240,248,250,252,254,258,273,274,275,276,277,278,280,284,285,291,296,298,306,310,323,324,331,342,343,346,347,348,352,353,354,356,358,359,361,367,371,372,375,379,383,389,394,395,400,401,402,417,422,424,428,430,431],"far":318,"farrow":[3,139,140,141,142,143,144,145,146,147,148,391,419,430,431],"farrow1":139,"farrow2":139,"farrow3":139,"farrow4":139,"farrowresampl":[3,139,140,141,142,143,144,145,146,147,148,420,431],"fashion":415,"fast":359,"fdoa":[4,315,430,431],"fdoa_crlb":[4,315,388,431],"featur":432,"februari":431,"fec":392,"feed":40,"feedback":[20,125,128,129,130,151,153,154,155,164,167,168,181,193,293,335,362,363,364,365,368,369,377,381,410,422],"feedback_poli":[20,125,126,128,129,130,138,151,152,153,154,155,163,293],"feedforward":[62,64,84,85,88,108,110,124,149,164,167,169,181,190,191,193,230,256,258,267,270,278,280,362,363,364,365,368,369,377,381,382,421,422],"fft":[62,307,357,359,367,375,402,403,406],"fibonacci":[19,22,125,126,127,128,129,130,131,132,134,135,136,137,138,151,163,293,335,410,430,431],"fibonacci_lfsr":[138,163],"field":[19,125,126,131,136,138,151,152,156,161,163,290,293,318,321,325,332,335,407,410],"fieldarrai":[125,126,127,131,132,135,136,137,151,152,156,157,160,161,162,290,293,321,325,332,335,407,410,414],"fig":[284,354,394],"figsiz":[228,240,248,254,361,362,380,394,421,422,426],"figur":[10,24,32,62,84,88,97,99,139,149,181,190,193,220,228,230,232,240,242,248,250,251,252,253,254,274,276,278,282,283,284,286,287,288,289,290,292,294,297,298,299,300,301,307,314,315,316,317,318,319,320,321,323,324,325,326,329,330,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,355,356,357,358,359,360,361,362,363,364,365,368,369,370,373,374,376,377,378,379,380,381,385,386,387,388,390,391,392,393,395,398,399,400,401,402,403,404,406,407,409,417,420,421,422,424,425,426,427,428],"file":[414,416],"fill":349,"fill_betweenx":62,"filler":294,"fillstyl":420,"filter":[42,46,52,55,62,63,64,66,67,71,72,74,76,84,85,86,87,88,89,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,142,143,145,146,147,148,149,150,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,190,191,192,193,194,195,200,206,210,211,212,213,214,215,216,217,218,219,228,230,231,240,248,254,256,257,258,261,264,266,267,269,270,278,279,280,281,288,289,307,315,316,317,320,326,329,334,345,361,362,363,364,365,368,369,377,381,382,385,386,390,399,404,406,412,419,428,430,431],"final":[63,109,257,279],"find":[284,293,410],"finit":[3,19,108,125,131,151,156,430,431],"fir":[62,63,64,84,85,87,88,89,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,142,149,150,190,191,193,194,228,230,231,240,248,254,256,257,258,261,264,266,267,269,270,278,279,280,288,289,317,329,334,345,361,362,363,364,365,368,369,377,381,382,419,425,430,431],"fir_10":88,"fir_2":88,"fir_20":88,"fir_40":88,"fir_6":88,"fir_80":88,"firinterpol":431,"first":[62,84,101,136,142,190,191,228,240,261,278,280,301,315,321,331,349,357,364,379,384,399,405,414,416,417,424,431],"fit":414,"fix":[318,431,432],"fixer":414,"fl":[75,77],"flag":415,"flake8":414,"flat":[149,317],"flfsr":[19,20,22,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,163,293,410,431],"flip":[32,296,398],"float":[2,3,6,8,9,10,12,13,14,15,16,17,24,28,30,31,32,36,38,39,42,43,47,50,56,60,62,64,65,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,88,89,90,99,101,103,104,105,107,108,114,115,117,119,139,140,143,149,150,164,165,170,171,173,181,190,191,193,194,195,196,204,211,213,214,216,217,218,220,221,222,224,227,228,229,230,232,234,235,236,237,240,241,242,247,248,249,251,254,255,256,268,276,278,280,282,283,285,286,287,288,289,291,296,298,302,314,317,319,320,323,324,329,330,334,337,339,340,341,343,344,345,346,350,352,353,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,374,375,378,379,383,385,387,388,389,390,391,395,398,411],"float64":[1,2,3,4,5,6,7,8,24,29,32,37,62,84,88,90,91,96,97,98,99,100,101,106,108,114,149,164,170,181,190,193,195,197,205,207,220,225,226,228,230,232,233,240,242,243,245,246,248,250,252,254,256,271,272,273,274,275,276,277,278,284,287,288,289,290,292,294,297,299,300,301,303,308,309,310,311,312,313,314,315,316,317,318,320,321,325,326,329,332,333,334,335,336,338,342,345,346,347,348,351,354,358,385,386,387,388,390,392,393,394,396,397,399,400,401,403,404,407,408,410],"fluctuat":394,"flush":[62,63,84,88,108,109,113,139,143,149,190,230,256,257,278,279,431],"foa":[4,316,430,431],"foa_crlb":[4,316,388,431],"fold":[282,307],"follow":[96,101,282,283,330,337,339,340,341,344,356,371,375,378,380,382,391,398,417,424,426,430],"form":[284,294,431],"format":[233,290,321,325,332,335,407,431],"formula":[282,283,321,398],"forward":[181,182,232,239,431],"found":321,"four":[282,420],"fourier":[9,62,359,360,430,431],"fourth":420,"fox":328,"fpsl":431,"frac":[67,75,77,80,81,88,96,97,98,100,108,112,149,164,181,191,193,211,230,240,248,254,273,274,275,280,284,285,286,287,294,300,301,302,308,309,311,312,314,315,316,318,320,330,333,337,339,340,341,343,344,350,351,354,359,385,387,388,389,390,391,392,393,395,396,397,399,401,404,408,409,417,424,426],"fraction":[3,62,84,139,145,149,150,190,256,268,278,298,317,320,420,430,431],"fractional_delay_fir":[3,317,431],"fractionaldelai":[3,149,150,431],"fred":[62,84,190,278,345,382],"free":[5,228,240,248,254,318,430],"free_space_path_loss":[5,318,431],"freedom":[394,417,424],"freq":[2,3,5,62,84,88,108,114,149,164,170,181,190,193,230,232,233,256,278,298,300,307,318,319,343,351,359,360,395,402,403,406,408,420,426],"freq_estim":426,"freq_offset":[67,75,77,298,338],"freq_rat":[319,395],"frequenc":[2,5,42,43,47,51,62,67,75,77,79,84,88,108,114,115,119,139,149,164,170,181,190,193,211,228,230,232,233,256,278,288,289,298,300,307,315,316,317,318,319,329,334,336,338,343,351,359,360,362,363,365,367,368,369,375,395,399,402,403,404,406,408,411,428,430,431],"frequency_lock_tim":[67,75],"frequency_offset":[319,411,431],"frequency_respons":[62,84,88,108,114,149,164,170,181,190,193,230,256,278,431],"frequency_response_log":431,"freqz":428,"from":[1,62,101,115,119,125,126,151,152,164,165,181,191,193,209,253,256,258,262,265,280,284,298,301,303,308,309,311,312,315,316,319,332,333,335,354,359,367,375,394,396,397,399,404,410,413,417,421,422,424,426,430],"fsk":232,"fspl":[5,318,431],"full":[62,63,84,109,190,256,257,278,279,357],"function":[9,67,76,88,108,149,164,165,193,211,232,271,272,284,287,293,294,298,299,300,301,307,318,320,323,324,325,336,338,346,347,348,354,355,356,358,359,360,361,364,366,367,371,372,373,375,376,377,385,390,392,393,394,400,406,407,421,422,426,428,430,431],"fundament":[96,97,98,100,273,274,275,277],"furthermor":[318,359],"futur":426,"g":[5,106,298,331,351,384,415],"g_":[284,346,354,424],"g_c":[299,417],"g_i":330,"g_nc":[284,346,424],"g_q":330,"gain":[2,5,10,11,12,15,17,18,67,70,71,72,73,74,164,165,171,181,193,211,213,216,218,220,227,232,234,235,242,247,284,288,289,299,300,315,316,317,318,320,326,329,334,336,338,346,351,354,385,386,390,399,404,412,417,424,426,430,431],"galoi":[19,20,125,126,128,129,130,131,132,134,135,136,137,138,151,152,153,154,155,156,157,159,160,161,162,163,290,293,321,325,332,335,407,410,430,431],"galois_lfsr":[138,163],"gamma":[2,96,98,100,273,275,277,284,301,315,316,347,348,358,394,399,400,401,404],"gamma_1":[301,315,399],"gamma_2":[301,315,399],"gardner":[125,151,293],"gauss_0p1":428,"gauss_0p2":428,"gauss_0p3":428,"gaussdesign":320,"gaussian":[5,8,88,181,193,230,286,287,294,320,376,411,417,424,430,431],"gca":[284,323,324,417,420,424,427],"gcd":409,"ge":[249,255,284,354,385,390,394],"gener":[3,28,36,58,61,95,228,240,248,254,256,286,290,291,293,295,296,306,321,322,325,331,332,335,358,372,384,395,407,409,410,413,417,424,427,431],"get":413,"get_window":[89,288,289,329,334,359,360,367,375,431],"gf":[19,125,126,129,130,131,132,134,135,136,137,138,151,152,154,155,156,157,159,160,161,162,163,290,293,321,325,332,335,384,407],"ghz":[298,318,351,408],"git":[413,415],"github":[414,430],"giusepp":294,"given":[2,56,59,90,96,101,103,104,105,107,138,139,140,163,256,267,270,271,272,273,282,283,284,294,300,301,314,315,316,337,339,340,341,344,347,348,354,359,388,398,399,404,421,422],"glfsr":[125,138,151,152,153,154,155,156,157,158,159,160,161,162,163,293,410,431],"global":414,"gmsk":228,"go":[229,241,249,255],"goal":430,"gold":[321,410,430,431],"gold_cod":[321,331,384,410,431],"good":321,"googl":414,"gouraud":375,"grai":[43,228,229,240,241,248,249,253,254,255,322,356,378,410,427,430],"gray_cod":[322,410,431],"greater":[83,287,301,315,316,385,390,393,399,404],"grid":[220,242,380],"group":[9,62,84,88,108,115,149,190,230,256,278,317,363,430],"group_delai":[9,62,84,88,108,115,149,190,230,256,278,317,363,421,422,431],"guarante":[321,432],"h":[2,3,9,42,43,47,51,52,55,62,64,84,85,88,96,108,110,114,116,124,149,164,170,172,181,190,191,193,195,196,205,206,210,211,228,230,240,241,248,249,254,255,256,258,264,267,270,273,278,280,288,289,294,317,320,323,324,329,334,345,347,348,358,362,364,365,369,382,385,390,401,417,424,425,426,428],"h0":[2,323,324,347,348,358,400,417,424,431],"h0_theori":431,"h1":[2,323,324,347,358,417,424,431],"h1_theori":431,"h_":[67,88,426],"h_0p1":[320,385,390],"h_0p2":320,"h_0p3":320,"h_0p5":[385,390],"h_0p9":[385,390],"h_16":[317,385,390],"h_32":317,"h_4":[385,390],"h_64":317,"h_8":[317,385,390],"h_b":[32,297],"h_blackman":[288,289,329,334],"h_blackman_harri":[288,289,329,334],"h_chebyshev":[288,289,329,334],"h_half_sin":326,"h_ham":[288,289,329,334],"h_hann":[288,289,329,334],"h_i":[3,62,84,190,256,266,267,270,278,382,421],"h_kaiser":[288,289,329,334],"h_pad":380,"h_rc_0p1":428,"h_rc_0p5":428,"h_rc_0p9":428,"h_rect":[386,428],"h_srrc":[362,363,364,365,368,369,377,381,427],"h_srrc_0p1":428,"h_srrc_0p5":428,"h_srrc_0p9":428,"h_theori":181,"ha":[62,109,181,190,228,240,248,257,279,286,288,289,298,307,317,318,320,329,334,351,359,360,374,385,390,394,406,409,417,424,426,427,428],"hadamard":[325,407,410,430,431],"hadamard_cod":[325,407,410,431],"hadamardcod":325,"half":[8,228,240,326,351,430,431],"half_sin":[8,229,326,431],"ham":[6,114,288,289,327,329,334,359,430,431],"hann":[288,289,329,334,367,375],"hard":[32,294],"harri":[62,84,190,278,288,289,329,334,345,382],"hat":[6,9,42,46,103,195,199,200,220,223,228,240,242,243,248,254,314,356,378],"have":[63,150,282,290,299,307,317,325,331,349,357,359,360,379,384,405,406,407,417,424],"he":328,"height":182,"help":[284,288,289,317,320,325,329,334,345,394,407],"helper":431,"here":[421,422,430],"heurist":[242,412,426,431],"hexdump":[7,101,328,430,431],"high":[298,315,316,325,346,399,404,407],"higher":[318,385,390,428],"highpass":[3,329],"highpass_fir":[3,329,431],"hist":[282,283,314,323,324,337,339,340,341,344,398,417,424],"histogram":[314,356,361,371],"histogram2d":[356,371],"histtyp":[282,283,323,324,337,339,340,341,344,398,417,424],"hold":[62,84,190,191,256,258,262,278,280,315,316,349,399,404,431],"home":413,"hook":414,"horizont":330,"hostett":[430,431],"hostetter_sdr_2023":430,"how":[10,320,323,324,326,342,346,347,348,357,359,360,361,370,371,379,385,386,390,400,401,407,416],"howev":[24,32,63,103,104,105,107,109,149,211,257,279,284,292,294,297,298,325,335,346,357,407,420],"html":[284,288,289,317,320,325,329,334,345,394,407,413],"http":[19,284,288,289,302,317,320,325,329,332,334,335,345,350,394,407,409,413,414,415,430],"hypothes":[96,273],"hypothesi":[2,323,324,401,417,424],"hz":[67,68,74,75,77,80,114,115,117,119,170,173,213,217,287,298,299,300,303,307,315,316,318,319,320,333,336,338,343,351,387,395,399,402,403,404,408,420],"i":[7,10,12,13,14,18,20,24,28,32,36,43,47,58,61,62,63,64,67,74,83,84,85,88,89,90,95,96,97,98,99,100,101,106,108,109,114,116,122,123,125,126,128,129,130,132,133,134,135,136,138,139,142,147,149,151,152,153,154,155,157,158,159,160,161,163,164,167,169,170,172,178,179,181,184,188,189,190,191,193,194,196,211,213,214,217,220,228,230,233,240,241,242,248,249,254,255,256,257,258,262,265,267,268,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,291,292,293,294,296,297,298,299,300,301,303,306,308,309,310,311,312,313,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,407,408,409,413,414,415,416,417,420,421,422,424,425,426,427,428,430,431,432],"id":414,"ideal":[290,387,388,427],"ident":[138,163,282,337,340],"identifi":[315,316,399,404],"idft":62,"ieee":19,"ignor":[361,414],"iir":[9,67,76,116,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,193,194,211,215,230,362,363,364,365,368,369,377,381,419,421,426,430,431],"iir_back":181,"iir_forw":181,"iir_trap":181,"im":220,"imaginari":[357,359,360,379],"imbal":[330,411,430],"immateri":413,"immedi":415,"impair":431,"implement":[0,2,3,8,10,19,24,32,40,42,62,84,88,90,96,108,125,139,149,151,164,181,183,190,193,195,211,215,220,228,230,232,240,242,248,254,256,273,278,284,293,354,394,410,411,412,420],"impli":318,"import":[43,196,220,241,249,255,415,417,420,421,422,424,425,426,427,428,430],"improv":[2,299,315,316,346,388,399,404,431],"impuls":[3,9,62,84,88,108,116,149,164,172,181,190,193,230,256,278,288,289,317,320,329,334,345,362,364,385,390,428,430,431],"impulse_respons":[9,62,84,88,108,116,149,164,172,181,190,193,230,256,278,288,289,317,320,326,329,334,345,364,385,386,390,421,422,428,431],"includ":[114,170,414,415,416,430,431],"incorpor":[301,315,316,399,404],"increas":[62,89,287,318,351,388,393,422,431],"increment":[232,233,234,236,426],"independ":[240,282,283,287,337,339,340,341,344,393,394,398],"index":[42,43,47,139,145,195,228,240,248,254,261,321,325,332,335,361,370,371,378,407,410,413],"indic":[10,12,18,43,62,64,84,85,88,89,97,98,99,100,108,110,123,139,141,147,149,164,165,167,179,181,182,188,189,190,191,193,194,196,229,230,231,240,241,248,249,250,252,254,255,256,258,261,274,275,276,277,278,280,285,310,320,321,323,324,326,330,331,335,342,343,346,347,348,352,353,356,357,358,359,360,361,369,370,371,379,383,385,386,389,390,395,400,401,407,417,424],"inf":338,"infinit":[3,164,181,430,431],"inform":[90,248,294,308,309,311,325,396,407],"infrastructur":416,"infti":[282,283,286,294,301,315,316,344,360,387,388,398,399,404],"ini_opt":416,"initi":[17,20,125,126,128,132,134,136,138,151,152,153,157,159,161,163,220,224,242,244,335,417,424,426],"initial_st":[125,126,132,138,151,152,157,163,293],"inlin":[417,420,421,422,424,425,426,427,428],"inlinebackend":[417,420,421,422,424,425,426,427,428],"input":[2,5,8,10,11,19,21,23,24,25,27,32,33,35,40,41,56,57,62,63,64,67,75,77,80,81,84,85,88,89,90,92,94,95,108,109,110,116,121,122,125,127,139,140,141,142,145,146,149,164,165,166,167,172,178,181,182,183,184,186,187,188,189,190,191,193,194,211,212,230,231,232,233,240,248,250,252,254,256,257,258,261,262,271,278,279,280,284,286,287,291,292,294,296,297,301,303,304,305,306,307,323,324,333,342,346,347,348,349,364,377,394,400,401,405,406,411,421,422,424,426,431],"insert":[3,190,278,406],"insid":422,"insight":361,"inst_evm":314,"instanc":[103,104,105,107,228],"instantan":[6,42,43,51,314,383,431],"instanti":[24,30,32,38,56,60,90],"instead":[62,84,190,278,319],"instruct":416,"int":[3,7,8,9,24,28,32,36,40,41,42,43,45,49,54,56,58,61,62,64,84,85,88,89,90,95,101,103,104,107,108,111,112,114,115,116,118,119,122,125,133,136,139,141,142,144,149,150,151,158,161,164,170,172,174,178,181,183,185,190,191,193,195,196,198,203,208,225,226,228,229,230,231,232,233,239,240,241,245,246,248,249,254,255,256,258,259,260,261,263,264,266,278,280,282,284,285,286,288,289,290,291,295,296,304,305,306,307,310,313,317,320,321,322,323,324,325,326,327,328,329,332,334,335,337,340,342,345,346,347,348,349,350,352,354,358,359,360,361,362,363,364,365,367,368,369,370,371,375,376,377,379,382,384,385,386,390,394,400,401,405,406,407,409,410,427],"int64":[101,290,321,325,332,335,407,410],"int_":[6,7,8,19,21,23,24,25,26,27,32,33,34,35,40,42,46,90,92,93,94,125,127,183,188,189,195,199,200,228,240,248,254,282,283,291,294,295,296,304,305,306,315,316,322,327,344,349,387,388,398,399,404,405,410,411],"integ":[62,84,114,170,190,256,260,263,278,335,349],"integr":[3,6,67,72,97,98,99,100,181,182,193,194,211,213,216,230,284,294,299,300,315,316,323,324,336,338,342,346,347,348,354,388,399,400,401,404,412,416,418,422,430,431],"integral_gain":[211,216],"integration_tim":336,"intens":430,"intercept":301,"interest":10,"interfer":361,"interleav":[40,41,183,184,185,186,187,188,189,430,431],"interoper":430,"interpol":[3,42,55,62,84,139,190,191,192,195,210,228,240,248,254,256,258,262,263,265,278,280,345,406,425,427,430,431],"interpret":335,"intersymbol":361,"introduc":432,"invers":[7,62,272,315,316,336,338,399,404],"inverse_map":[40,183,188],"invok":416,"ipykernel":413,"ipykernel_10104":426,"ipynb":414,"iq":[330,411,430],"iq_imbal":[330,411,431],"irreducible_poli":[128,153],"is_preferred_pair":[321,331,384,410,431],"isf":[417,424],"isi":[240,248,254,361],"iso":318,"isort":414,"isotrop":318,"issu":430,"iter":[136,161,384,410],"its":[12,13,14,108,125,126,134,136,151,152,159,164,165,181,193,284,286,354,360,387,421,422,428],"itself":282,"j":[62,84,114,164,167,168,170,181,184,188,189,190,193,228,232,240,248,254,256,267,270,278,286,306,323,324,330,332,342,343,346,347,348,359,360,395,400,401,409,421,422],"jacobian":344,"jame":293,"januari":431,"jason":293,"jcharlong":431,"jn_c":[323,324,342,346,347,348,400,401],"john":[24,32,90,250,252,321,331,384],"joint":344,"jq":240,"json":[414,416],"juli":431,"jump":328,"june":431,"jupyt":431,"just":335,"justin":431,"k":[6,8,9,19,42,43,45,46,48,49,62,88,103,125,151,181,195,196,198,199,200,201,202,203,220,223,228,240,242,243,248,249,254,255,284,287,298,304,305,308,309,311,314,346,354,356,359,378,379,392,393,396,417,424,425,428],"k0":[67,70,74,213,232,426],"k1":[67,71,211,426],"k2":[67,72,211,426],"k_0":[67,70,74,213,232,234,235,426],"k_1":[67,71,211,218,426],"k_2":[67,72,211,216,426],"k_p":[67,73,74,213,220,227,242,247,426],"kai":[96,97,98,100,273,274,275,277],"kaiser":[3,62,64,66,84,85,86,190,191,192,278,280,281,288,289,317,329,334,345,431],"kasami":[332,410,430,431],"kasami_cod":[332,410,431],"kei":[8,228,240,248,250,251,252,253,254,423,430,431],"keyword":[355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,381,421,422,431],"khz":[298,300,319,399,404],"km":318,"knee":301,"knowledg":273,"known":[220,223,242,243,286,300,325,359,407],"kp":[67,73,74,213,426],"ksp":[402,403],"kwarg":[355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,381],"l":[63,109,149,150,166,194,230,231,257,279,317],"l_":317,"label":[43,62,84,88,97,99,139,149,181,190,193,220,229,230,241,242,249,250,252,255,274,276,278,282,283,284,286,288,289,294,298,300,301,314,315,316,317,318,319,320,329,330,334,336,337,338,339,340,341,342,344,346,347,354,355,357,359,360,361,362,363,365,366,367,368,369,370,371,373,374,375,379,385,387,388,390,391,394,398,399,401,404,417,420,424,425,426,427,428],"lack":346,"lag":[335,357],"lambda":[5,318,408,417,424],"lambda_":[417,424],"larg":[282,325,332,335,359,407,414],"larger":[289,326,330,356,378,386],"last":[228,240,349,413],"latest":[415,430],"law":[284,323,324,342,346,347,348,354,400,401,431],"lazi":328,"le":[88,150,230,284,317,343,351,354,385,390,394,395],"lead":[228,330,427],"leakag":359,"leaki":[3,193,194,230,430,431],"leakyintegr":[3,193,194,230,431],"least":[293,340],"left":[96,97,98,125,149,151,164,240,242,248,254,273,274,275,277,284,285,286,287,294,298,300,301,310,313,314,315,316,318,320,321,323,324,330,342,343,344,346,347,348,351,352,353,354,383,385,388,389,390,392,393,395,400,401,409,417,424],"legend":[62,88,149,181,220,242,282,283,284,294,298,300,301,315,316,318,336,337,338,339,340,341,342,344,346,347,354,394,398,399,401,404,417,424,425,426,428],"len":388,"length":[3,9,43,46,48,62,63,64,84,85,88,89,99,108,109,111,116,122,124,149,150,166,183,186,187,190,191,194,196,200,202,229,230,231,241,249,255,256,257,278,279,280,288,289,290,295,299,300,317,319,320,321,322,325,326,329,332,334,335,345,346,357,359,362,364,367,371,375,377,385,386,390,402,407,409,414,420,425,428,431],"leq":[284,294,337,339,340,341,354,394],"less":[83,284,287,301,315,316,321,342,354,393,394,399,404],"let":[344,346],"level":431,"lf":[67,426],"lfilter":164,"lfloor":[88,108,112,149,230],"lfsr":[19,22,125,126,127,128,129,130,131,132,134,135,136,137,138,151,152,153,154,155,156,157,159,160,161,162,163,293,335,410,430,431],"lib":[417,424],"librari":[414,415,416,420,427,430,432],"light":298,"like":[9,228,294,376,415,430,431],"likelihood":[46,199,200,220,412,426,431],"limit":[5,9,282,287,356,374,378,392,393,427,430,431],"limits_":[96,108,164,273],"line":[328,357,359,360,376,379,380,414,425],"linear":[1,10,15,17,62,88,125,129,131,133,137,139,151,154,156,158,162,190,191,192,195,196,225,226,228,240,245,246,248,254,278,280,281,284,286,293,294,301,303,319,323,324,333,335,342,346,347,348,357,358,365,367,372,375,378,400,401,417,424,430,431],"linearli":[24,191,280,287,393],"linearmodul":[8,9,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,225,226,245,246,248,378,431],"linecollect":371,"linestyl":[88,181,220,228,240,242,248,254,284,287,294,298,354,356,371,378,380,393,409,417,420,424,427],"linewidth":[371,380,409],"link":[318,430,431],"linspac":[24,32,88,97,114,170,181,250,252,274,282,283,284,287,292,294,297,300,301,318,323,324,336,337,338,339,340,341,344,346,347,354,355,373,374,388,393,398,417,422,424,425,426,427],"lint":[414,415],"list":384,"ll":318,"ln":[284,320],"lo":[67,395,426],"lobe":[359,360,428],"loc":[149,282,283,298,318,337,339,340,341,344,346,347,398],"local":[67,413,426],"localhost":413,"locat":[301,413,416],"lock":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,211,212,213,214,215,216,217,218,219,232,233,234,235,236,237,238,239,429,430],"lock_tim":[67,77,426],"log":[10,294,362,363,365,367,368,369,371,421,422,426],"log10":[114,170],"log2":294,"log_":[284,285,299,300,303,310,318,350,352,353,354,383,389],"log_2":[42,45,195,198,228,240,248,254,287,308,309,311,392,393,396],"logarithm":[287,362,363,365,367,368,369,393,421,422],"loglog":[315,316,372,399,404],"logspac":[99,114,170,276,284,299,315,316,342,346,347,392,394,399,401,404],"long":[300,360,387,388,414],"longer":[358,361,385,390,402],"loop":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,211,212,213,214,215,216,217,218,219,232,233,234,235,236,237,238,239,429,430,431],"loop_filt":426,"loopfilt":[211,212,213,214,215,216,217,218,219,412,426,431],"loss":[2,300,318,336,338,359,430,431],"low":[298,335,346],"lower":[4,149,228,240,254,298,315,316,385,390,399,404,417,424,430,431],"lowpass":[3,334],"lowpass_fir":[3,114,334,431],"lyon":422,"m":[8,42,43,45,46,48,49,62,84,95,125,151,164,167,169,181,190,193,195,196,198,199,200,201,202,203,209,220,228,240,242,248,249,253,254,255,256,264,266,278,293,295,298,299,300,306,308,309,311,315,316,318,319,321,322,325,331,332,335,336,338,357,378,384,396,407,410,413,414,415,416,417,424,430,431],"m_sequenc":[335,357,410,431],"made":431,"mag":[357,359,360],"magic":414,"magnitud":[6,9,10,12,16,88,149,181,193,230,314,317,335,357,362,365,409,430,431],"magnitude_respons":[9,88,114,149,170,181,193,230,288,289,317,320,326,329,334,345,365,385,386,390,421,422,426,428,431],"mai":[43,229,241,249,253,255,282,314,356,371,375,378,380,422,431],"main":[359,360,415,428],"major":432,"make":[387,388,426,432],"mani":[394,407,414],"manual":[228,240,248,254,414,416],"map":[8,9,40,183,184,188,189,195,196,201,209,228,232,240,248,253,254,314,378,430,431],"map_symbol":[195,201,228,240,248,254,286,314,330,356,391,425,426,427,431],"mapsto":[184,188,189,195,196,209,228,240,248,253,254,378],"march":431,"margin":294,"mark":[284,354],"marker":[84,139,190,232,278,356,376,378,379,420,427],"markers":378,"massei":[293,431],"match":[42,43,46,52,195,196,200,206,228,240,241,248,249,254,255,298,315,316,361,399,404,431],"math":413,"mathbb":[195,196,209,228,240,248,253,254,287,294,378,409],"mathcal":[2,7,9,24,25,26,27,32,33,34,35,90,92,93,94,95,96,271,272,273,274,275,276,277,282,286,294,306,323,324,347,348,358,401,417,424],"mathrm":[125,151,273,290,293,321,323,324,325,332,335,342,346,347,348,400,401,407,417,424],"mathwork":[284,288,289,317,320,325,329,334,345,394,407],"matlab":[9,190,191,192,278,280,281,376,430,431],"matplotlib":[9,355,356,357,358,359,360,361,363,365,366,367,368,369,370,371,373,375,376,378,379,380,381,417,420,421,422,424,425,426,427,428,430],"matric":382,"matrix":[3,40,90,91,95,306,382],"matt":[430,431],"max":[301,314,337,339,352,353,417,424],"max_":[90,294],"max_f":[114,170],"max_frequency_offset":[2,336,431],"max_iid_rv":[7,337,431],"max_integration_tim":[2,338,431],"max_open_warn":380,"max_rv":[7,339],"maximum":[2,7,43,46,114,170,199,200,220,294,320,326,335,336,337,338,339,356,378,385,386,390,412,426,430,431],"maximum_length_sequ":335,"maxkb":414,"mean":[6,282,314,315,316,367,375,387,388,389,399,401,404,417,424,428],"meant":[12,13,14,67],"measur":[101,103,285,286,302,303,310,313,314,315,316,327,333,350,352,353,383,387,388,389,399,404,417,424,426,430,431],"median":367,"memoryless":[90,95,306,411,430],"meter":[318,351,408],"method":[3,9,46,66,86,182,191,192,199,200,258,262,265,280,281,288,289,294,317,329,334,345,367,375,421,422,431],"methodologi":394,"mf":[228,240,248,254,361],"mf_sampl":[228,240,248,254],"mhostett":[415,430,431],"mhz":[298,300,303,319,333,399,404],"michael":[10,67,75,77,78,79,80,81,88,139,211,220,242,385,390],"mid":[347,348,401],"min":[340,341,417,424],"min_iid_rv":[7,340,431],"min_rv":[7,341],"min_snr":[2,284,342,354,394,431],"minim":[133,158,284,290,293,410],"minimum":[2,7,8,228,284,340,341,342,394,430,431],"minor":[431,432],"minut":413,"minvers":416,"misalign":[325,407],"miscellan":430,"mix":[3,62,298,343,425,430,431],"ml":[220,224,412,426],"mle":[195,199,228,240,248,254],"mlped":[220,221,222,223,224,225,226,227,412,426,431],"mod":409,"mode":[12,17,18,63,64,85,87,89,109,110,113,120,123,141,143,147,165,167,176,179,182,191,194,231,257,258,269,279,280,290,321,325,332,335,357,361,407,409],"model":[2,24,32,90,125,151,293,394,431],"modem":[225,226,228,240,245,246,248,254],"modifi":[134,135,159,160,431],"modul":[32,42,43,47,48,49,195,196,202,203,205,220,225,226,228,232,240,241,242,245,246,248,249,250,252,254,255,308,309,311,314,355,361,370,373,374,378,379,387,388,392,393,396,413,416,427,430,431],"month":430,"more":[9,43,136,161,229,241,249,253,255,282,283,298,318,337,339,340,341,344,360,376,387,398,431],"most":[2,336,338,349,405],"move":[3,193,194,230,231,430,431],"movingaverag":[3,193,230,231,431],"mph":298,"msk":[8,228,229,370,430,431],"mu":282,"mu_f":[387,399,404],"mu_t":[315,316,388],"much":[301,428],"multi":414,"multipl":[7,114,170,186,187,349,376,405,427,431],"multipli":[10,67,88,190,278],"multiply_distribut":431,"multiply_rv":[7,344,431],"multir":[3,62,63,84,190,278,345,382,431],"multirate_fir":[3,64,85,191,280,345,431],"multirate_tap":431,"must":[20,64,85,128,141,153,186,187,191,280,286,288,289,294,298,315,320,329,332,334,343,345,371,385,390,395,399,409,417,424],"mutual":[90,294,379],"mw":[303,333],"myst":413,"n":[1,3,5,6,7,9,10,11,19,20,21,23,40,42,43,46,48,51,52,55,62,63,64,67,84,85,88,89,95,96,99,103,104,105,106,107,108,109,110,111,112,113,115,116,118,119,121,122,124,125,126,127,128,129,130,132,134,135,136,137,139,140,143,146,149,150,151,152,153,154,155,157,159,160,162,164,166,167,168,172,174,178,181,182,183,184,186,187,190,191,193,195,196,200,202,205,206,210,211,212,228,230,232,233,239,240,241,248,249,254,255,256,257,258,262,264,265,266,267,270,271,272,273,275,277,278,279,280,282,284,285,286,287,288,289,290,293,294,295,298,299,302,306,307,308,309,310,311,312,313,314,317,319,321,322,323,324,325,327,329,330,332,334,337,340,342,343,345,346,347,348,350,352,353,354,357,359,360,361,362,363,364,365,367,368,369,370,371,375,377,379,382,383,387,388,389,391,392,393,395,396,397,400,401,402,403,406,407,409,410,411,426,428,430,431],"n0":427,"n_":[2,97,98,99,100,284,323,324,342,346,347,348,354,394,400,401,424],"n_0":[1,5,9,12,13,14,42,44,53,80,103,104,105,106,107,195,197,207,228,240,248,250,252,254,286,294,308,309,311,312,314,315,316,355,356,373,374,392,396,397,399,404,427,430,431],"n_c":[299,323,324,342,346,347,348,400,401,417,431],"n_f":362,"n_freq":362,"n_nc":[2,96,97,98,99,100,284,323,324,342,346,347,348,354,394,400,401,424,431],"n_point":[225,226,245,246],"n_symbol":[388,425],"n_t":362,"n_time":[362,422],"n_var":[282,337,340],"name":125,"nan":[315,316,346,399,404],"nand":286,"narrow":[385,387,390],"natur":[67,79],"nb":413,"nc":[2,97,98,99,100,284,323,324,342,346,347,348,354,394,400,401,424],"nco":[67,70,74,213,232,233,234,235,236,237,238,239,412,426,430,431],"ncx2":[417,424],"ndarrai":[1,2,3,4,5,6,7,8,10,11,19,21,23,24,25,26,27,29,32,33,34,35,37,40,42,44,46,48,51,53,56,57,59,62,63,84,88,90,91,92,93,94,96,97,98,99,100,101,106,108,109,113,114,115,116,119,121,122,124,125,127,139,140,143,146,148,149,164,166,168,169,170,172,175,177,178,180,181,183,186,187,188,189,190,193,195,197,199,200,201,202,205,207,209,211,212,220,223,225,226,228,230,232,233,239,240,242,243,245,246,248,250,252,253,254,256,257,267,270,271,272,273,274,275,276,277,278,279,284,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,325,326,327,329,330,332,333,334,335,336,338,342,343,345,346,347,348,349,351,354,358,376,379,382,385,386,390,391,392,393,394,395,396,397,399,400,401,402,403,404,405,406,407,408,409,410,411],"ndim":426,"ne":409,"nearest":360,"nearli":428,"necessari":[346,413],"need":[84,190,278,413,414,416],"neg":[62,136,161,301,318,330],"new":[24,28,32,36,42,43,56,58,61,90,95,101,102,125,128,134,139,141,151,153,159,193,195,196,228,229,240,241,248,249,254,255,319,391],"new_sample_r":420,"next":[125,136,151,161,359,376,384,394,415],"nfrom":284,"nois":[2,5,9,10,44,53,62,67,68,69,74,80,84,88,96,97,98,99,100,101,103,104,105,106,107,108,117,149,164,173,181,190,193,197,207,211,213,217,228,230,240,248,250,252,254,256,273,274,275,276,277,278,284,286,287,294,299,301,308,309,311,312,315,316,323,324,342,346,347,348,355,358,373,374,392,393,394,396,397,399,400,401,404,411,417,424,426,430,431],"noise_bandwidth":[62,67,74,84,88,108,117,149,164,173,181,190,193,211,213,217,230,256,278,315,316,399,404,431],"noiseless":[228,240,248,254,314],"noisi":[42,195,228,240,248,254,286],"nomin":[374,392,393],"non":[63,97,98,99,100,109,257,279,284,323,324,326,335,342,346,347,348,354,357,359,379,386,394,400,401,414,417,418,430,431],"non_coherent_gain":[2,284,346,354,424,431],"none":[9,19,20,24,28,32,36,42,44,56,58,61,62,84,88,89,90,95,99,108,114,116,122,125,126,128,134,139,145,149,151,152,153,159,170,190,196,211,219,230,233,241,249,255,256,276,278,284,285,286,287,288,289,291,296,298,306,310,313,315,316,321,323,324,327,329,332,334,335,342,344,347,348,349,350,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,384,394,399,400,401,404,405,411,417,420,424,425,427],"norm":[282,283,314,320,326,337,339,340,341,344,371,385,386,390,398,417,424],"normal":[7,43,67,69,74,211,213,217,271,272,282,283,288,289,314,320,323,324,326,329,334,337,339,340,341,344,359,360,362,363,365,367,368,369,375,385,386,387,388,390,398,417,424,426,428],"northeast":330,"northwest":330,"note":[10,19,24,32,40,62,84,88,90,96,97,98,100,108,125,129,130,149,151,154,155,164,181,190,193,211,220,228,230,232,240,242,248,254,256,262,265,267,270,273,274,275,277,278,282,283,284,286,287,290,292,293,297,299,300,304,305,317,320,321,330,331,336,337,338,339,340,341,344,346,347,348,351,354,359,360,361,376,382,384,385,390,391,392,393,394,398,401,409],"notebook":431,"notic":[10,136,138,161,163,298,301,319,335,342,346,357,359,360,388,402,403,417,420,424,428],"notion":382,"novemb":431,"now":[319,342,402,403,420,431],"np":[10,19,24,25,26,32,33,34,40,62,84,88,90,91,92,93,97,99,101,114,139,149,170,181,183,188,189,190,193,195,205,209,228,230,232,240,248,250,252,253,254,264,266,267,270,274,276,278,282,283,284,286,287,291,292,293,294,296,297,299,300,301,306,314,315,316,318,319,323,324,325,330,336,337,338,339,340,341,342,344,346,347,354,355,356,361,362,363,364,365,368,369,370,371,373,374,377,379,381,382,387,388,391,392,393,394,398,399,401,404,407,417,420,421,422,424,425,426,427,428],"npt":[43,64,85,114,170,191,196,229,241,249,255,280,362,363,364,365,368,369,377,381],"npy":414,"nstandard":[315,316,399,404],"nu":[417,424],"nuisanc":431,"null":[2,96,273,323,360,401,417,424,428],"numba":[430,431],"number":[28,36,41,42,43,45,54,58,61,62,63,64,65,84,95,97,98,99,100,101,103,104,107,114,115,116,119,122,136,161,170,172,178,190,195,196,198,208,225,226,228,229,239,240,241,245,246,248,249,254,255,256,258,259,267,270,278,282,284,286,291,296,299,306,308,309,311,320,323,324,326,328,337,340,342,346,347,348,349,354,356,358,359,360,361,362,363,364,365,367,368,369,370,375,377,382,385,386,390,394,396,400,401,405],"numer":[7,67,232,234,282,283,294,336,337,338,339,340,341,344,398,412,422,426,430,431],"numpi":[28,36,43,58,61,62,64,84,85,88,95,108,115,119,149,190,191,196,229,230,241,249,255,256,278,280,286,291,296,306,356,357,405,414,417,420,421,422,424,425,426,427,428,430,431],"nyquist":[240,248,254,288,289,307,329,334,361,406,428],"o":[84,139,190,278,420],"object":[42,43,67,74,101,102,195,196,228,229,240,241,248,249,254,255,293,325,362,363,364,365,368,369,377,381,407,426,431],"observ":[220,242,298,317,347,348,351,361,400],"obtain":[101,282,283,398],"occur":[300,337,339,340,341],"odd":[64,85,150,191,254,280,317,321,331,345,384,402],"off":[196,241,249,255],"offset":[2,8,42,43,50,75,77,84,139,190,195,196,204,228,229,232,233,234,237,240,241,248,249,251,254,255,278,287,298,300,319,336,338,343,364,379,391,393,411,426,430,431],"offset_r":[319,391,431],"often":420,"omega":[9,62,84,88,108,114,115,119,139,149,164,170,181,190,193,230,232,234,236,256,278,362,363,365,368,369,426],"omega_":[67,78],"omega_3db":[67,78],"omega_n":[67,79,426],"omnidirect":318,"one":[43,108,136,161,164,229,240,241,249,253,255,301,318,320,328,340,362,363,365,367,368,369,375,384,394,402,414,421,422,425,428],"ones":[20,126,128,152,153,191,280,417,424,426],"onli":[17,43,63,64,67,85,87,109,113,114,120,143,170,176,191,196,220,229,241,249,253,255,257,269,279,280,286,290,315,316,318,323,324,325,326,331,335,337,339,342,346,347,348,356,357,359,361,371,384,386,392,399,400,401,404,407,416,417,424,426,427],"onto":[75,77,81],"oo":431,"open":[361,430],"oper":[9,12,96,99,273,276,321,347,372,426,430,431],"oplu":[304,305,321,327],"optim":431,"optimum":[250,252],"option":[233,362,363,365,367,368,369,375,431],"oqpsk":[8,228,240,241,431],"order":[3,42,43,49,62,63,64,67,84,85,88,89,101,106,108,109,118,125,126,132,133,134,135,136,137,138,139,141,144,149,151,152,157,158,159,160,161,162,163,164,174,181,190,191,193,195,196,203,211,213,228,230,240,248,249,254,255,256,257,264,266,278,279,280,286,288,289,290,293,308,309,311,314,320,321,325,329,332,334,335,345,356,361,370,385,387,388,390,391,396,407,412,422,425,426,427,431],"org":[19,302,332,335,350,409],"origin":[12,13,14,136,161,240,254,298,301,315,316,337,339,340,341,399,404,406,420],"oscil":[67,232,234,412,426,430,431],"other":[103,104,105,107,301,335,394,420,432],"otherwis":321,"out":[19,24,32,40,62,84,90,101,114,125,126,129,130,131,132,134,135,136,137,138,149,151,152,154,155,156,157,159,160,161,162,163,170,183,190,220,228,240,248,251,253,254,256,264,266,267,268,270,271,272,278,290,291,293,295,296,299,300,303,304,305,306,308,309,311,312,314,318,321,322,323,324,325,331,332,333,335,336,338,342,346,347,348,349,351,380,382,384,387,388,392,396,397,400,405,407,408],"output":[10,11,12,16,19,21,23,24,26,27,32,34,35,40,41,57,62,63,84,90,93,94,95,109,116,122,125,127,136,138,139,142,151,161,163,165,167,172,178,182,184,188,189,190,191,193,194,200,211,212,230,232,233,239,256,257,258,261,265,268,278,279,280,284,286,287,290,291,292,293,294,296,297,299,305,306,314,315,316,321,325,332,333,335,346,347,348,349,354,357,364,377,399,401,404,405,407,410,413,420,421,422,424,426,431],"outsid":[149,422],"over":[10,125,129,130,131,132,134,135,136,137,151,154,155,156,157,159,160,161,162,250,252,290,293,299,319,321,325,328,332,335,407,431],"overdamp":[74,83,213,214],"overlai":62,"overlap":[367,375,425],"oversampl":[359,360,388],"overwritten":[356,371,375,378],"p":[5,7,24,28,29,31,32,36,37,39,62,84,90,91,95,125,151,190,191,232,233,256,263,268,271,272,278,280,282,283,291,292,293,294,296,297,306,337,339,340,341,344,345,347,348,383,398,411],"p_":[2,9,96,97,98,99,100,250,252,273,274,275,276,277,284,285,286,303,306,314,315,316,333,342,346,347,348,350,352,354,355,367,372,373,394,399,400,401,404,417,424],"p_b":[44,197],"p_d":[2,9,96,97,99,273,274,276,284,323,324,342,347,354,366,372,394,417,424,431],"p_d_mea":[417,424],"p_e":[53,207],"p_fa":[2,9,96,97,98,99,100,273,274,275,276,277,284,323,324,342,346,347,348,354,358,372,394,400,401,417,424,431],"p_fa_mea":[417,424],"p_h0":358,"p_h1":358,"p_rc_0p1":428,"p_rc_0p5":428,"p_rc_0p9":428,"p_rect":428,"p_srrc_0p1":428,"p_srrc_0p5":428,"p_srrc_0p9":428,"pacf":431,"pack":[7,101,103,228,240,248,254,328,349,430,431],"packag":[415,430],"pad":300,"page":413,"pair":[321,331,384,410,430,431],"papr":[6,228,240,254,350,425,431],"papr_bb_0p1":425,"papr_bb_0p5":425,"papr_bb_0p9":425,"papr_bb_rect":425,"papr_pb_0p1":425,"papr_pb_0p5":425,"papr_pb_0p9":425,"papr_pb_rect":425,"par":318,"parabol":[5,318,351,388],"parabolic_antenna":[5,318,351,431],"parallel":[62,84,190,256,258,265,278],"paramet":[11,12,17,20,21,23,27,28,35,36,41,43,44,46,48,53,57,58,61,63,64,74,75,77,80,85,89,94,95,97,98,99,100,103,104,105,107,109,110,114,115,116,117,119,122,126,127,128,134,136,140,141,143,145,150,152,153,159,161,165,166,167,170,172,173,178,182,184,186,187,191,194,196,197,199,200,201,202,207,212,213,223,224,225,226,229,231,233,234,239,241,243,245,246,249,250,252,255,257,258,271,272,274,275,276,277,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,417,424],"parameter":346,"parser":413,"part":[293,357,359,360,379,426],"partit":[256,258,262,265],"pass":[24,27,28,32,35,36,43,56,57,58,61,62,84,88,90,94,95,108,113,139,143,149,190,230,256,258,262,278,286,291,296,306,314,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,381,411,413,415,421,422,431],"passband":[3,149,288,289,298,317,320,326,329,334,385,386,390,402,403,425,431],"patch":432,"path":[318,430],"pb":425,"pb_papr":425,"pccf":431,"pcolormesh":[356,371,375],"pdf":[9,282,283,294,337,339,340,341,344,347,348,358,394,398,400,417,424,430,431],"peak":[6,228,240,254,302,314,315,316,350,352,353,359,399,404,423],"peak_pow":[6,350,352,431],"peak_voltag":[6,302,353,431],"ped":[67,73,74,213,220,224,225,226,242,243,244,245,246,247,412,426,430,431],"peebl":[2,346,354,431],"pei":294,"pep585":414,"per":[7,42,43,45,46,47,48,54,63,109,195,196,198,200,202,208,228,229,233,240,241,248,249,254,255,257,279,286,287,294,308,309,311,312,319,320,326,328,349,356,361,370,385,386,390,396,397,405,414,425,428,431],"percent":431,"percentil":[314,375],"perf":414,"perfect":273,"perfectli":149,"perflint":414,"perform":[10,11,63,67,109,150,250,252,257,279,299,307,317,346,347,387,388,406,412,417,421,422,424,427,430,431],"period":[74,213,217,228,331,384,409,431],"periodogram":[9,62,307,367,387,402,403,406,425,430,431],"permut":[40,183,184,188,189],"persist":[240,248,254,356,361,371,427,431],"phase":[3,9,42,43,47,50,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,108,119,149,190,195,196,204,211,212,213,214,215,216,217,218,219,220,223,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,278,284,319,330,335,343,361,368,369,370,382,394,395,411,417,423,424,429,430,431],"phase_delai":[9,62,84,88,108,119,149,190,230,256,278,368,431],"phase_err":[67,426],"phase_error":426,"phase_error_vari":[67,80],"phase_est":[67,426],"phase_lock_tim":[67,81],"phase_offset":[42,43,50,195,196,204,228,229,240,241,248,249,251,254,255,286,314,330,356,361,378,379,391,425,426,427],"phase_respons":[9,114,170,369,431],"phase_tre":[9,228,370,431],"phi":[9,42,43,50,62,84,88,108,119,149,190,195,196,204,228,229,230,240,241,248,249,251,254,255,256,278,319,330,343,368,395],"physic":318,"pi":[8,10,40,43,47,62,84,88,139,170,181,183,184,188,189,190,220,232,240,242,248,254,255,278,286,294,300,315,316,318,319,320,330,343,351,359,360,362,363,364,365,368,369,377,381,385,390,395,399,404,409,420,421,422,426,430,431],"pi4_qpsk":254,"pickleshar":413,"piecewis":[3,139,141,144],"pimpsk":[8,254,255,431],"pin":431,"pip":[413,414,415,416,430],"pixel":[287,393],"pl":[77,81,414],"place":[184,188,189],"plane":422,"pleas":430,"pll":[67,68,69,74,75,76,77,78,79,80,81,82,83,412,430,431],"plot":[10,24,32,62,84,88,97,99,114,115,116,119,122,139,149,170,172,178,181,190,193,220,228,230,232,240,242,248,250,251,252,253,254,274,276,278,282,283,284,286,287,288,289,290,292,294,297,298,299,300,301,307,314,317,318,319,320,321,323,324,325,326,329,330,332,334,335,336,337,338,339,340,341,343,344,345,346,347,348,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,385,386,387,388,390,391,392,393,395,398,400,402,403,406,407,409,417,420,421,422,424,426,427,428,430,431],"plr0912":414,"plr0913":414,"plr0915":414,"plr2004":414,"plr5501":414,"plt":[10,24,32,62,84,88,97,99,139,149,181,190,193,220,228,230,232,240,242,248,250,251,252,253,254,274,276,278,282,283,284,286,287,288,289,290,292,294,297,298,299,300,301,307,314,315,316,317,318,319,320,321,323,324,325,326,329,330,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,354,355,356,357,358,359,360,361,362,363,364,365,368,369,370,373,374,376,377,378,379,381,385,386,387,388,390,391,392,393,394,395,398,399,400,401,402,403,404,406,407,409,417,420,421,422,424,425,426,427,428],"plu":[67,211,213,412,431],"plw0603":414,"pm":[360,428],"pn":[321,331,384],"point":[114,170,225,226,245,246,346,356,358,359,360,367,375],"pole":[9,164,165,170,175,181,193,362,363,364,365,368,369,377,381,421,430],"poli":[19,125,126,129,130,131,134,137,138,151,152,154,155,156,159,162,163,293,332,335,384,410],"poly1":[321,331,410],"poly2":[321,331,410],"polylik":[19,20,125,128,151,153,321,331,332,335,384,410],"polynomi":[3,20,128,129,130,133,139,141,144,153,154,155,158,293,321,331,332,335,384,410,431],"polyphas":[62,63,64,66,84,85,86,190,191,192,256,257,258,259,261,262,265,266,267,270,278,279,280,281,307,345,382,406,430,431],"polyphase_decompos":[3,382,431],"polyphase_matrix":431,"polyphase_ord":[62,64,84,85,190,191,256,264,266,278,280,345,431],"polyphase_tap":[62,84,190,256,264,266,267,270,278],"polyphasefir":[3,62,84,190,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,278,431],"posit":[62,184,188,189,301,321,330],"possibl":[318,430],"post":[284,354],"power":[5,9,228,240,248,254,285,286,287,294,303,314,315,316,320,323,324,326,333,350,351,352,359,360,367,383,385,386,387,390,392,393,399,404,417,423,424,428,430,431],"ppb":[298,431],"ppi":[211,213,412],"ppm":[298,391,431],"pr":[95,306],"pre":415,"precis":[315,316,325,346,388,399,404,407],"prefer":[321,331,384,410,430,431],"preferred_pair":[321,331,384,410,431],"present":[240,248,254,347,417,424],"preserv":[12,18,64,84,85,89,110,123,141,147,165,167,179,182,190,191,194,231,258,278,280],"prevent":[84,190,240,254,278],"previou":[62,64,84,85,88,89,108,110,121,139,141,145,146,149,165,167,182,190,191,193,194,230,231,256,258,278,280,304,305],"prime":409,"primit":[125,151,321,331,332,335,384,410,431],"primitive_poli":[20,125,126,128,129,130,131,132,134,135,136,137,138,151,152,153,154,155,156,157,159,160,161,162,163,332,335],"print":[125,126,138,151,152,163,293,298,328,417,420,421,422,424,426],"print_figure_kwarg":[417,420,421,422,424,425,426,427,428],"proaki":[24,32,90,250,252,321,331,384],"probabl":[2,9,24,28,31,32,36,39,90,91,95,96,97,98,99,100,271,272,273,274,275,276,277,282,283,284,291,292,294,296,297,306,323,324,337,339,340,341,342,344,346,347,348,354,358,361,366,372,394,398,400,401,417,424,430,431],"process":[62,84,96,97,98,100,125,127,190,193,230,273,274,275,277,278,301,345,382,422,426,430],"prod_":[337,340],"produc":[2,62,63,109,125,133,136,138,151,158,161,163,190,256,257,258,265,278,279,293,299,320,335,336,338,357,384,410,428],"product":[4,7,299,301,315,316,320,344,399,404,428,430,431],"progress":430,"propag":394,"properti":[13,14,15,16,18,22,25,26,30,31,33,34,38,39,45,47,49,50,51,52,54,55,60,65,66,68,69,70,71,72,73,76,78,79,82,83,86,91,92,93,112,118,121,123,124,129,130,131,132,133,135,137,142,144,146,147,148,154,155,156,157,158,160,162,168,169,171,174,175,177,179,180,188,189,192,198,203,204,205,206,208,209,210,214,215,216,217,218,221,222,227,235,236,237,247,251,253,259,260,261,262,263,264,265,266,267,268,270,281,321,431],"proport":[63,67,71,211,213,218,257,279,315,316,318,351,399,404,412,431],"proportional_gain":[211,218],"prototyp":[3,62,64,84,85,190,191,256,257,258,264,267,270,278,279,280,382,431],"provid":[2,42,44,53,106,195,197,207,228,240,248,250,252,254,294,298,321,336,338,346,358,361,371,414,430],"psd":[9,44,53,197,207,250,252,308,309,311,312,355,373,374,387,392,396,397,399,404],"psk":[8,220,240,242,248,249,250,251,252,253,254,255,286,314,330,355,356,361,373,374,378,379,387,388,391,425,426,430,431],"psk16":[250,252,355,373,427],"psk16_bb_papr":425,"psk16_ber":427,"psk16_pb_papr":425,"psk16_ser":427,"psk8":[250,252,355,373,427],"psk8_bb_papr":425,"psk8_ber":427,"psk8_bin":427,"psk8_grai":427,"psk8_pb_papr":425,"psk8_ser":427,"public":431,"puls":[42,43,46,48,51,52,55,88,181,195,196,200,202,205,206,210,228,240,241,248,249,254,255,320,326,361,379,385,386,387,388,390,394,423,430,431],"pulse_shap":[42,43,46,48,51,195,196,200,202,205,228,240,241,248,249,254,255,361,379,387,388,425,427],"purpos":431,"py":[414,416,426],"pycodestyl":414,"pydocstyl":414,"pyflak":414,"pylint":[414,431],"pypi":430,"pyplot":[9,355,356,357,358,363,365,366,367,368,369,371,373,375,376,378,379,380,381,417,420,421,422,424,425,426,427,428],"pyproject":[414,416],"pytest":[415,416],"python":[413,430,431],"python3":[413,414,415,416,430],"pyupgrad":414,"q":[7,62,84,85,190,228,240,256,260,268,271,272,273,274,275,277,278,280,294,335,345,409,431],"q_":[96,97,98,100],"qam":[308,309,311,396],"qasim":[10,139],"qinv":[7,271,272,431],"qpsk":[220,240,242,248,250,251,252,254,286,314,355,356,361,373,378,379,391,426,430,431],"qpsk_bb_papr":425,"qpsk_ber":427,"qpsk_pb_papr":425,"qpsk_ser":427,"quad":[88,230],"quadrat":[139,319,431],"quadratur":[8,240,330,361],"quantiti":[103,104,105,106,107],"quartic":[139,431],"quick":328,"quickli":10,"quit":[325,407],"r":[3,10,40,41,62,84,139,140,142,143,190,256,257,268,278,279,294,301,307,308,309,311,314,315,316,320,337,339,340,341,343,344,385,390,395,396,399,401,402,403,404,406,413,414,415,416,422,425,426,428],"rad":[114,170],"rad2deg":426,"radar":394,"radian":[67,78,79,80,220,223,225,226,232,233,234,236,237,242,243,245,246,254,426],"radio":430,"rainbow":[356,371],"rais":[8,88,181,196,241,249,255,361,379,385,387,388,390,421,430],"raised_cosin":[8,196,241,249,255,376,385,428,431],"ramp":[191,211,280],"randint":[19,24,32,90,228,240,248,254,286,291,296,306,314,330,356,361,370,379,387,388,391,425,426,427],"randn":[10,62,193,230,379],"random":[10,19,24,28,32,36,58,61,62,90,95,96,193,228,230,240,248,254,271,282,283,286,291,296,306,314,330,337,339,340,341,344,356,361,370,379,387,388,391,398,417,424,425,426,427,430,431],"rang":[62,220,242,356,426,427],"rao":[4,315,316,399,404,430,431],"raster":[9,361,370,371,430,431],"rate":[3,6,9,10,12,13,14,42,43,44,47,53,62,63,64,67,74,82,84,85,101,102,103,105,106,114,115,117,119,139,140,142,143,170,173,190,191,195,197,207,228,240,248,250,252,254,256,257,260,263,268,278,279,280,298,299,307,308,309,311,319,343,345,346,355,357,359,360,361,362,363,365,367,368,369,370,371,373,374,375,379,387,388,391,392,395,396,401,402,403,406,411,417,424,430,431],"ratio":[2,5,6,9,43,44,47,53,80,97,99,101,103,104,105,106,107,197,207,228,240,250,252,254,274,276,284,286,287,294,301,308,309,311,312,315,316,323,324,342,346,347,350,355,358,373,374,392,393,394,396,397,399,401,404],"ration":[3,278,280,345,431],"rayleigh":[282,283,337,339,340,341,394,398],"rc":[8,196,240,241,248,249,254,255,361,385],"rc_0p1":428,"rc_0p5":428,"rc_0p9":428,"rc_param":380,"rcdefault":380,"rcparam":[9,380],"re":[220,273,323,324,342,346,347,348,400,401,417,424],"read":40,"real":[3,97,98,100,271,272,274,275,277,286,294,298,323,324,342,343,346,347,348,357,359,360,363,365,367,368,369,371,375,379,388,395,400,401,402,403,417,421,422,424,425,426,430,431],"rearrang":[301,315,316,399,404],"reason":[318,326,386,413],"receiv":[9,10,42,46,52,96,97,99,101,103,195,199,200,206,220,221,223,224,228,240,242,243,248,250,252,254,273,274,275,276,277,298,314,318,347,361,366,372,430,431],"reciproc":[125,129,130,151,154,155],"recommend":[190,430],"rect":[43,196,241,249,255,387,388,428],"rectangular":[8,43,182,196,241,249,255,315,316,386,387,388,399,404,425,428,430,431],"recurr":[125,129,133,137,151,154,158,162,293],"recurs":282,"reduc":[12,13,14,300,359],"reduct":[299,300,346,417,424],"ref":[6,220,222,224,284,288,289,314,317,320,325,329,334,345,394,407],"refactor":431,"refer":[10,12,16,19,24,32,62,67,75,77,78,79,80,81,84,88,90,96,97,98,100,101,125,139,151,190,211,220,222,223,224,242,243,250,252,273,274,275,277,278,284,286,288,289,293,294,300,301,302,314,317,319,320,321,325,329,331,332,334,335,345,346,350,354,382,384,385,390,391,394,407,409,422,424,428,430],"referenc":346,"reflector":[5,318,351],"regim":[287,393],"regist":[125,126,137,151,152,162,293,335,410],"rel":[254,298,409,428],"relat":[62,84,137,162,190,256,267,270,278,320],"relationship":344,"releas":[415,431],"relev":430,"reli":430,"remain":[113,143,307,349],"rememb":193,"remov":[240,248,254,298,301,315,316,343,367,375,376,399,404,431],"renam":431,"render":414,"repeat":232,"replac":431,"replic":430,"replica":[2,273],"replicacorrel":[2,273,274,275,276,277,431],"repo":[414,415],"repres":[24,26,27,67,76,291,292,298,335],"represent":[378,431],"reproduc":293,"requir":[2,63,109,257,279,282,283,284,293,337,339,340,341,342,344,346,394,398,401,413,414,415,416,431],"resampl":[62,84,139,140,141,142,143,144,145,146,147,148,190,256,257,268,278,279,280,281,345,382,391,419,430,431],"resample_sign":420,"research":430,"resembl":360,"reset":[10,17,24,32,56,61,62,84,87,88,90,108,120,125,134,139,145,149,151,159,164,176,181,190,193,211,219,230,232,238,256,269,278],"resolut":[359,413],"respons":[3,9,62,84,88,108,114,116,122,149,164,170,172,178,181,190,193,230,256,278,288,289,317,320,329,334,345,361,362,363,364,365,369,377,385,390,428,430,431],"result":[228,240,254,282,283,285,298,310,318,337,339,340,341,344,351,352,353,383,385,389,390,398,417,424,427],"return":[7,8,11,21,23,27,29,35,37,44,46,48,53,57,59,62,63,67,75,77,80,81,84,88,94,97,98,99,100,101,103,104,105,106,107,108,109,111,113,114,115,116,117,119,122,126,127,136,138,140,143,149,152,161,163,164,166,170,172,173,178,181,186,187,190,193,197,199,200,201,202,207,212,223,225,226,230,233,239,243,245,246,250,252,256,257,271,272,274,275,276,277,278,279,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,417,421,422,424,425,427,431],"rev":414,"revers":[125,129,130,136,154,155,161],"revert":380,"rework":431,"rf":[318,425,426],"rfloor":[88,108,112,149,230],"rho":[5,9,374,392,393],"rice":[10,67,75,77,78,79,80,81,88,139,211,220,242,282,283,337,339,340,341,385,390,398],"richard":[284,354],"rician":[282,283,337,339,340,341,398],"right":[96,97,98,125,151,164,240,242,248,254,273,274,275,277,284,285,286,287,294,300,301,310,313,314,315,316,318,320,323,324,330,342,343,344,346,347,348,351,352,353,354,383,385,388,389,390,392,393,395,400,401,409,417,424],"rm":[6,220,221,222,224,302,314,315,316,387,388,389,399,404,430,431],"rms_bandwidth":[6,387,399,404,431],"rms_integration_tim":[6,315,316,388,431],"rms_voltag":[6,302,389,431],"rng":[323,324,417,424],"roc":[9,96,99,273,276,347,372,430,431],"roll":[196,241,249,255,428],"root":[6,8,196,241,249,255,314,315,316,361,379,387,388,389,390,399,404,409,410,421,430],"root_raised_cosin":[8,88,181,196,241,249,255,362,363,364,365,368,369,377,381,390,421,425,427,428,431],"rotat":[254,287,319,343,393,426],"roughli":[24,32,291,296,318,420],"row":[40,41,371],"rrc":376,"ruf":414,"ruff":[414,415,431],"rule":414,"run":[139,413],"rv":[282,283,337,339,340,341,344,398],"rv_continu":[2,7,282,283,323,324,337,339,340,341,344,358,398],"rv_histogram":[7,282,283,337,339,340,341,344,398],"rx":[220,221,224],"rx_complex_symbol":[228,240,248,254],"rx_filter":[42,52,195,206,228,240,248,254],"rx_sampl":[228,240,248,254,361],"rx_symbol":[228,240,248,254],"s_":[20,125,126,128,132,134,135,151,152,153,157,159,160],"s_0":[20,125,126,128,132,134,135,151,152,153,157,159,160],"s_1":[20,125,126,128,132,134,135,151,152,153,157,159,160,315,399,417,424],"s_2":[315,399],"s_hat":[46,200,426,427],"sach":293,"same":[88,109,125,136,138,151,161,163,220,242,299,315,346,357,359,360,361,376,379,387,388,394,399,421],"sampl":[2,3,12,13,14,42,43,46,48,54,62,63,67,74,82,84,88,97,98,99,100,108,109,112,114,115,116,117,119,122,139,142,145,149,170,172,173,178,190,191,195,196,200,202,208,213,217,228,229,230,232,233,234,236,239,240,241,248,249,254,255,256,257,261,268,278,279,280,284,286,298,299,307,309,312,319,320,323,324,326,337,340,342,343,346,347,348,354,357,359,360,361,362,363,364,365,367,368,369,370,371,375,377,379,385,386,387,388,390,391,395,396,397,400,401,402,403,406,411,417,420,424,425,426,428,430,431],"sample_r":[6,9,62,67,74,82,84,88,108,114,115,117,119,139,149,164,170,173,181,190,193,230,256,278,298,307,319,343,357,359,360,361,362,363,365,367,368,369,370,371,375,379,387,388,391,395,402,403,406,420,426,428],"sample_rate_offset":[391,411,431],"satisfi":[343,395],"scalar":426,"scale":[193,220,282,283,315,316,323,324,337,339,340,341,344,359,360,362,363,365,367,368,369,375,398,399,404,417,421,422,424,431],"scallop":[300,359],"scatter":[356,394],"scheme":[220,225,226,228,240,242,245,246,248,254,431],"scipi":[7,89,108,164,282,283,288,289,329,334,337,339,340,341,344,358,359,360,367,375,398,417,424,428,430,431],"scrambl":[19,22,23,431],"scrambler":[19,20,430,431],"sdr":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,420,421,422,424,425,426,427,428,431,432],"se":[252,373],"second":[74,75,77,81,101,211,213,217,299,300,301,315,316,320,321,331,336,338,357,388,395,399,404,414,417,424],"section":[10,88,96,103,104,105,106,107,139,220,242,273,422,426],"see":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,89,104,105,106,107,108,109,110,111,112,113,117,118,120,121,123,124,138,139,140,141,142,143,144,145,146,147,148,163,164,165,166,167,168,169,171,173,174,175,176,177,179,180,182,194,211,212,213,214,215,216,217,218,219,228,231,232,233,234,235,236,237,238,239,240,248,251,253,254,269,278,288,289,299,307,318,320,326,329,334,362,363,364,365,367,368,369,375,377,381,385,386,390,430],"seed":[24,28,32,36,56,58,61,90,95,286,291,296,306,431],"seen":415,"segment":[367,375],"select":[363,365,367,368,369,375,414],"self":[125,126,151,152,164,165,181,193],"semant":432,"semilogi":[287,355,372,373,392,393],"semilogx":[284,299,342,346,354,372,394,401],"sensibl":431,"separ":[41,228,357,361],"septemb":431,"sequenc":[19,21,23,24,27,32,35,40,56,57,90,94,125,129,133,136,138,151,154,158,161,163,183,186,187,290,291,293,296,306,321,325,331,332,335,357,384,407,409,411,430,431],"ser":[6,9,42,53,101,195,207,228,240,248,252,254,373,427,430,431],"server":413,"set":[286,315,316,318,321,325,332,356,359,367,371,375,376,378,380,394,399,404,407,414,416,422],"set_prop_cycl":[284,323,324,417,420,424,427],"set_titl":[284,354,394],"set_xlabel":[284,354,394],"set_ylabel":[284,354,394],"settabl":[10,13,14,16,220,221,222,232,235,236,237],"sever":[114,170,321,332],"seymour":301,"sf":[417,424],"sh":414,"shade":[358,375],"shannon":[5,9,374,392,393,430,431],"shannon_limit_ebn0":[5,9,374,392,431],"shannon_limit_snr":[5,287,393,431],"shape":[42,43,46,48,51,52,55,62,114,170,195,196,200,202,205,206,210,228,240,241,248,249,254,255,320,326,335,361,379,385,386,387,388,390,422,423,430,431],"share":[357,359,360,379],"sharei":[284,354],"shift":[8,125,126,137,151,152,162,228,240,248,250,251,252,253,254,293,298,321,335,409,410,421,422,423,430,431],"shnidman":[2,394,431],"should":[145,220,228,387,388,415],"show":[417,420,421,422,424,425,426,427,428],"show_zero":[356,371],"showloc":416,"shown":392,"side":[282,283,288,289,320,321,337,339,340,341,344,362,363,365,367,368,369,375,398,421,422,425,428],"sidelob":[290,325,335,357,359,385,390,407,409],"sigma":[96,97,98,99,100,273,274,275,276,277,282,286,287,294,323,324,347,348,400,417,424],"sigma1":[417,424],"sigma2":[2,98,100,275,277,323,324,347,348,358,400,417,424],"sigma_":[80,96,97,99,315,316,399,404],"sigma_1":[417,424],"sigma_2":417,"signal":[2,5,6,9,10,11,12,13,14,42,43,51,62,63,67,75,77,80,81,84,88,89,96,97,98,99,100,101,103,104,105,106,107,108,109,113,139,140,143,149,164,166,181,190,193,195,196,205,211,212,220,221,222,224,228,230,232,233,239,240,241,248,249,254,255,256,257,258,262,265,273,274,275,276,277,278,279,284,285,286,287,288,289,294,298,299,300,301,302,303,307,308,309,310,311,312,313,315,316,318,319,320,323,324,327,329,330,333,334,342,343,345,346,347,348,350,351,352,353,357,358,359,360,361,362,363,365,367,368,369,370,371,375,379,382,383,387,388,389,391,393,394,395,396,397,399,400,401,402,403,404,406,408,417,421,422,424,426,428,430,431],"signific":[349,405],"significantli":428,"sim":[96,273,282,286,294,414,417,424],"similar":[228,240,254,300,428],"similarli":[298,417],"simon":[250,252],"simpl":294,"simpli":299,"simplifi":[294,414],"simul":[220,225,226,242,245,246,427,430],"sin":[232,286,300,385,390],"sinc":[294,298,300,336,337,338,339,340,341,344,351,387,413,427],"sine":[8,139,228,233,326,430,431],"sing":293,"singl":[99,114,170,250,252,359,361,426],"sinusoid":[3,248,286,298,307,319,343,359,360,395,402,403,406,422,431],"site":413,"size":[10,40,41,46,48,95,136,161,183,185,186,187,200,202,293,306,318,323,324,335,359,360,379,420,426,427,428],"sliding_window_view":[417,424],"slightli":346,"slope":[220,242,301],"small":[332,428],"smaller":[282,283,301,320,337,339,340,341,344,346,358,385,390,398,428],"smallest":349,"snr":[1,2,4,5,9,96,97,99,101,103,104,105,106,107,228,240,248,254,284,286,287,294,299,300,301,315,316,323,324,342,346,347,348,354,358,366,393,394,396,397,399,400,401,402,403,404,411,417,424,427,431],"snr1":[4,301,315,399,417,424],"snr2":[4,301,315,399,417,424],"snr_ref":[284,346,354,424],"snr_to_ebn0":[1,44,197,250,396,431],"snr_to_esn0":[1,53,207,252,397,431],"so":[62,240,248,254,284,301,318,320,326,385,386,390,430],"soft":294,"softwar":430,"solid":[284,357,359,360,371,379],"solv":[294,346],"some":413,"someth":430,"sourc":314,"sp":[8,9,42,43,46,48,54,195,196,200,202,208,228,229,240,241,248,249,254,255,309,312,320,326,361,370,379,385,386,387,388,390,396,397,402,403,425,427,428],"space":[5,62,114,170,300,318,430],"span":[8,9,43,196,241,249,255,320,326,361,370,385,386,390,425,428,431],"specif":[64,85,106,114,170,191,280,282,416,428],"specifi":[7,20,101,104,105,107,125,128,134,151,153,159,220,225,226,242,245,246,286,287,306,328,346,413,421,422,431],"spectra":387,"spectral":[5,228,294,307,359,367,374,387,392,393,399,404,425,428],"spectrogram":[9,375,430,431],"spectrum":[307,362,363,365,367,368,369,375,387,399,402,403,404,406],"speed":298,"sphinx":413,"split":62,"spread":[62,325,359,387,388,407],"sqrt":[273,274,275,277,284,294,313,314,315,316,320,323,324,387,388,389,390,399,404,409,417,424,425,426,428],"squar":[6,8,196,241,249,255,283,284,314,315,316,318,323,324,339,341,342,346,347,348,351,354,361,379,387,388,389,390,394,398,399,400,401,404,421,431],"src":414,"srrc":[8,196,240,241,248,249,254,255,361,379,387,388,390,425,427],"srrc_0p1":428,"srrc_0p5":428,"srrc_0p9":428,"standard":[7,271,272,315,316,376,399,404,417,424,430,431],"start":[229,241,249,255,413],"stat":[7,282,283,337,339,340,341,344,358,398,417,424],"state":[19,20,62,63,67,80,84,87,88,108,109,113,120,121,123,126,128,132,134,135,136,138,139,143,145,146,147,149,152,153,157,159,160,161,163,164,176,177,179,181,190,193,230,256,257,269,278,279,293,335,431],"statement":414,"static":[24,29,32,37,56,59,90,96,97,98,99,100,273,274,275,276,277,414],"statist":[2,96,97,98,100,273,274,275,277,323,324,358,431],"steadi":[67,80],"stein":[301,315,316,399,404],"stem":[9,359,360,364,376,377,430,431],"step":[9,62,84,88,108,122,125,132,134,135,136,138,149,151,157,159,160,161,163,164,178,181,190,193,230,232,233,239,256,278,282,283,293,323,324,337,339,340,341,344,377,398,417,424,430],"step_respons":[9,62,84,88,108,122,149,164,178,181,190,193,230,256,278,377,421,422,426,431],"steven":[96,97,98,100,273,274,275,277],"still":431,"stop":[64,85,191,280,345],"stopband":[64,85,191,280,345,385,390],"store":[413,415,416],"str":[7,89,288,289,328,329,334,359,360,361,367,370,371,375,376],"straddl":359,"stream":[12,17,18,63,64,85,87,89,109,110,113,120,123,141,143,147,165,167,176,179,182,191,194,228,231,240,248,254,257,258,269,279,280,422],"stretch":330,"stride":371,"stride_trick":[417,424],"string":[43,196,241,249,255,328,431],"strong":[12,13],"structur":139,"style":[9,376,380,431],"subclass":[125,131,151,156],"subplot":[284,330,354,361,394,426,427],"subsequ":298,"substitut":[337,339,340,341],"subtract_rv":[7,398,431],"suffici":[282,315,316,399,404],"sum":[7,62,84,96,108,164,190,256,258,265,273,278,282,283,337,340,417,424,428,430,431],"sum_":[108,164,275,277,285,286,287,299,310,313,314,323,324,327,342,346,347,348,359,360,389,400,401,417,424],"sum_distribut":431,"summari":414,"summat":[84,256],"superflu":431,"support":[108,164,431],"suppos":[300,342],"suppress":431,"suptitl":[228,240,248,254,361,394,426,427],"surround":10,"sweep_alpha":425,"swerl":[2,394],"switch":413,"sym":[42,43,47,54,195,196,208,228,229,240,241,248,249,254,255,309,312,320,385,390,396,397,428],"symbol":[6,9,42,43,45,46,47,48,53,54,101,103,106,125,127,136,151,161,190,195,196,198,199,200,201,202,207,208,209,220,223,228,229,240,241,242,243,248,249,250,252,253,254,255,286,293,294,308,309,311,312,314,320,326,356,361,370,373,378,379,385,386,387,388,390,396,397,425,426,428,430,431],"symbol_label":[43,228,229,240,241,248,249,253,254,255,427],"symbol_map":[9,195,196,209,228,240,248,251,253,254,314,378,427,431],"symbol_r":[387,388],"symmetr":[5,32,36,90,296,297,306,402,403,411,430],"symmetri":149,"synchron":430,"synthes":431,"synthesi":[293,430,431],"system":[62,84,190,278,312,318,325,345,382,397,407,414,416,426,430],"t":[9,19,67,69,74,96,125,126,137,151,152,162,211,213,217,273,293,298,300,315,316,319,320,321,323,324,328,331,336,342,346,347,348,360,379,384,385,388,390,391,395,399,400,401,404,413,420,431],"t_":[6,75,77,81,125,140,151,315,316,320,385,388,390,428],"t_0":[125,151],"t_1":[125,151],"t_c":[299,300,336,338],"t_lock":426,"tabul":[101,102],"tail":358,"take":[75,77,81,413],"taken":[240,248,254,256],"tap":[3,19,62,64,84,85,88,108,124,125,126,137,138,139,148,149,151,152,162,163,164,168,169,181,190,191,193,230,256,258,264,266,267,270,278,280,293,382,421,422],"target":[2,394],"tau":317,"tau_":[9,62,84,88,108,119,149,190,230,256,278,368],"tau_g":[9,62,84,88,108,115,149,190,230,256,278,363],"tdoa":[4,399,430,431],"tdoa_crlb":[4,387,399,431],"techniqu":[336,338],"ted":[74,213],"ten":[337,340],"term":[301,315,316,399,404],"test":[96,273,414,415,430,431],"test_psk":416,"testpath":416,"text":[6,24,32,64,85,90,96,191,254,273,280,284,285,286,287,292,294,297,299,300,302,303,314,315,316,318,319,321,331,333,340,341,345,346,350,352,353,384,387,388,389,391,392,393,399,404],"textcoord":[287,393],"textrm":[67,78],"th":[184,188,189,359],"than":[43,83,136,161,228,229,241,249,253,255,284,287,301,315,316,321,326,330,342,354,356,378,386,393,394,399,404,417,424],"thei":[325,335,407,432],"them":[181,432],"theme":413,"theorem":282,"theoret":[99,250,252,284,342,347,348,354,355,373,374,394,400,401,417,424,427,430,431],"theori":[88,96,97,98,100,181,273,274,275,277,284,417,424],"therefor":[240,248,254,298,321,337,339,340,341,387,428],"theta":[5,232,234,237,351],"theta_":[80,220,223,242,243],"theta_0":426,"thi":[24,28,32,36,43,46,58,61,67,84,95,103,104,105,107,108,136,161,164,190,191,196,199,200,209,220,228,233,240,241,249,253,254,255,278,280,282,283,284,286,291,293,294,296,298,300,301,306,307,314,315,316,318,323,324,325,337,339,340,341,342,344,346,347,348,354,356,359,361,367,371,375,376,379,387,388,392,394,398,399,400,401,404,406,407,413,415,416,417,420,422,424,426,427,428,430],"think":318,"thought":[320,432],"three":[145,282,420,428],"threshold":[2,96,98,100,273,275,277,323,324,346,347,348,358,394,400,401,417,424,430,431],"threshold_factor":[2,401,431],"through":[24,27,32,35,56,57,62,84,88,90,94,108,113,125,127,139,143,149,190,230,240,254,256,278,291,296,306,319,411,421,422,426],"thu":360,"tild":[42,46,195,199,200,220,223,228,240,242,243,248,254],"time":[2,3,6,10,40,41,67,74,75,77,78,79,80,81,88,95,108,136,139,161,164,181,193,211,213,220,230,240,242,248,254,285,286,298,299,300,302,306,307,310,312,313,315,316,319,320,325,327,330,336,338,342,343,350,352,353,357,359,360,362,367,371,375,379,383,385,387,388,389,390,391,397,399,402,403,404,406,407,411,417,420,421,422,424,428,430,431],"time_bandwidth":[2,8,299,320],"time_domain":[9,10,84,88,139,181,190,193,228,230,232,240,248,254,278,286,298,307,319,321,325,332,343,379,388,395,402,403,406,407,417,420,424,425,426,427,428,431],"titl":[10,24,32,62,84,88,139,181,190,220,232,242,250,252,278,282,283,284,286,287,292,294,297,298,299,300,301,307,314,315,316,318,319,323,324,330,336,337,338,339,340,341,342,343,344,346,347,348,354,355,358,373,374,376,379,391,392,393,394,395,398,399,400,401,402,403,404,406,409,417,420,424,425,426,427,428,430],"titleweight":380,"tmp":426,"to_complex_baseband":[3,402,431],"to_complex_bb":431,"to_fibonacci_lfsr":[151,163],"to_galois_lfsr":[125,138],"to_real_passband":[3,403,431],"to_real_pb":431,"toa":[4,404,430,431],"toa_crlb":[4,387,404,431],"toml":[414,415,416],"tom\u00e1\u0161":294,"tone":[62,359,360],"too":414,"tool":[414,416,430],"toolbox":430,"top":[62,84,190,256,258,262,265,278],"total":[101,318,320,326,385,386,390,428],"track":211,"trail":414,"trajectori":228,"transfer":[67,76,108,164,165,193,211,320,385,390,421,422,426],"transform":[9,62,344,359,360,430,431],"transient":361,"transit":[32,36,39,90,91,95,240,254,296,297,306,407],"translat":431,"transmit":[42,55,103,195,210,220,223,228,240,242,243,248,254,298,314,361,388],"transmitt":[298,318],"trapezoid":[181,182,431],"tree":[9,370,430,431],"trend":[367,375],"true":[19,84,97,98,99,100,114,129,130,139,154,155,170,190,220,225,226,228,240,242,245,246,248,250,252,254,274,275,276,277,278,282,283,284,285,291,293,296,306,310,321,323,324,325,331,337,339,340,341,342,343,344,346,347,348,352,353,354,356,358,359,360,361,369,371,378,379,380,383,389,395,398,400,401,407,417,424,426,427],"truncat":88,"tupl":[5,62,84,88,89,96,99,101,103,106,108,114,115,119,149,164,170,181,190,193,195,199,200,220,225,226,228,230,232,233,240,242,245,246,248,254,256,273,276,278,285,288,289,290,310,313,321,325,327,329,332,334,335,350,351,352,356,359,360,362,363,364,365,367,368,369,375,376,377,378,379,381,384,407,410],"turn":318,"twice":300,"two":[4,6,7,9,10,193,230,240,248,254,282,283,288,289,300,301,313,321,327,331,335,337,339,341,344,357,359,362,363,365,367,368,369,375,384,398,409,410,417,420,421,422,424,431],"tx":[298,420],"tx_filter":[42,55,195,210,228,240,248,254],"tx_mf":427,"tx_sampl":[228,240,248,254,361],"txt":[413,414,415,416],"ty":420,"type":[43,62,64,84,85,88,108,115,119,125,131,136,149,151,156,161,190,191,196,229,230,241,249,255,256,278,280,293,303,314,323,324,333,342,346,347,348,349,359,360,364,367,372,375,377,400,401,405,414,426,431],"typealiasforwardref":[43,62,64,84,85,88,108,115,119,149,190,191,196,229,230,241,249,255,256,278,280],"u":[122,178,321,377,409,410,421,422,430],"ub":294,"uint8":[228,240,248,254,349,405],"unaffect":[132,157],"unalias":307,"unambigu":[220,242],"uncod":305,"under":[2,9,96,273,323,324,358,401,417,424],"underdamp":[74,83,213,214],"underli":[211,215],"understand":422,"uniform":[325,407],"uniformli":379,"uniniti":293,"uninstal":414,"unit":[1,122,178,211,229,232,241,249,255,286,287,294,303,304,305,323,324,333,348,377,379,400,415,421,422,426,430,431],"unitless":[298,299],"unknown":[417,424],"unpack":[7,101,103,328,405,427,430,431],"unread":376,"unsign":349,"unstabl":422,"unsupport":431,"unwindow":300,"unwrap":[319,369,426],"up":[318,414],"up006":414,"updat":[413,431],"upgrad":431,"upon":415,"upper":[294,346,347],"upsampl":[3,190,278,406,431],"url":430,"us":[3,9,10,17,19,22,24,29,30,32,37,38,43,62,64,66,84,85,86,87,88,89,90,108,110,113,114,120,139,141,143,149,164,165,167,170,176,181,182,190,191,192,193,194,196,199,200,211,215,220,225,226,230,231,240,241,242,245,246,248,249,254,255,256,258,262,265,269,278,280,281,282,283,284,287,288,289,292,293,294,297,298,314,317,318,321,325,328,329,332,334,335,336,337,338,339,340,341,342,344,345,346,349,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,391,394,398,405,407,413,414,415,416,421,422,424,426,427,428,430,431,432],"use_styl":[9,380,417,420,421,422,424,425,426,427,428],"user":[103,104,105,107,421,422],"v":[19,84,125,151,232,256,298,303,321,333,413],"v0":414,"v2":[414,431],"v_":[302,303,333,353,389],"valid":[109,318,335,357,361,370,371],"valu":[12,13,14,42,43,44,53,96,184,195,196,197,207,228,229,240,241,248,249,250,252,254,255,271,272,282,283,290,293,303,304,305,315,316,320,321,325,330,331,332,333,335,337,339,340,341,344,346,356,358,363,365,367,368,369,375,378,384,398,399,404,407,414,422,431],"vari":[139,233,319],"variabl":[232,233,271,282,283,328,337,339,340,341,344,398,426,430,431],"varianc":[67,80,96,98,100,275,277,282,286,323,324,342,346,347,348,358,400,401,417,424],"variou":[99,149,284,299,300,336,338,346,347,354,392,414,428],"vector":[6,19,20,101,114,125,126,128,132,134,135,145,151,152,153,157,159,160,170,314,430,431],"veloc":298,"veri":[220,335,387,388,430],"verif":431,"verifi":321,"version":[359,360,413,415,430,431],"vertic":330,"vi":293,"view":[134,159,414,430],"vmax":375,"vmin":375,"voltag":[303,333,353,389,417,424,430],"vsat":318,"vscode":[414,416],"w":[96,273,286,294,344,414,417,420,421,422,424,425,426,427,428],"w_1":[417,424],"w_pad":380,"wa":[106,287,298,301,315,316,318,388,399,404,430],"wai":[190,415],"walsh":[325,407,410,430,431],"walsh_cod":[325,407,410,431],"walshcod":407,"warn":[414,431],"wave":[5,139,228,408],"wavelength":[5,408,431],"we":[282,283,337,339,340,341,344,351,361,398,417,424,430],"weak":[12,14],"web":413,"webpag":413,"webserv":413,"welch":[9,367,375],"well":[300,318],"were":[250,252,301,315,316,399,404],"what":318,"whatev":106,"when":[10,17,24,32,62,64,84,85,87,88,108,113,116,120,122,139,143,149,164,172,176,178,181,190,191,193,194,230,256,269,278,280,286,287,291,292,294,296,297,301,312,325,346,359,362,363,364,365,368,369,376,377,392,393,397,407,409,417,420,421,422,424],"where":[63,74,90,95,109,142,196,213,249,255,257,273,279,282,286,287,294,300,306,308,309,311,315,316,320,321,337,339,340,341,359,360,387,388,396,399,404,409,421,422,430],"wherev":415,"whether":[10,12,18,62,64,84,85,88,89,97,98,99,100,108,110,123,139,141,147,149,164,165,167,179,181,182,190,191,193,194,230,231,250,252,256,258,274,275,276,277,278,280,285,310,321,323,324,342,343,346,347,348,352,353,356,358,359,360,361,369,371,379,383,389,395,400,401],"which":[20,126,128,134,141,152,153,159,228,240,254,285,286,287,298,310,313,315,316,319,327,330,332,335,344,350,351,352,356,361,363,365,367,368,369,374,375,378,380,391,399,404,417,424,428],"while":[330,428],"white":[5,286,287,294,411,417,424,430,431],"whitespac":414,"whole":[114,170,428],"whose":[43,196,229,241,248,249,255,335,359],"why":318,"wide":284,"widen":359,"wider":[320,359],"widget":[417,420,421,422,424,425,426,427,428],"width":[7,149,317,328,360],"wiki":[19,302,332,335,350,409],"wikipedia":[19,302,332,335,350,409],"win":88,"window":[3,84,88,89,114,190,278,288,289,317,329,334,345,359,360,367,375,431],"wireless":[56,411],"within":[394,428],"without":[240,248,254,298,315,316,399,404,431],"work":10,"worn":428,"wors":427,"worst":[149,300],"wrap":[9,62,376],"wrapper":[108,164,376],"wrong":414,"www":[284,288,289,317,320,325,329,334,345,394,407],"x":[1,3,6,7,8,9,10,11,19,20,21,23,24,25,27,32,33,35,40,42,46,48,56,57,62,63,67,84,88,90,92,94,95,96,101,103,108,109,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,149,151,152,153,154,155,156,157,159,160,161,162,163,164,166,181,182,183,186,187,190,193,195,200,202,211,212,228,230,240,248,254,256,257,258,262,271,272,273,278,279,282,283,285,286,290,291,293,294,296,298,299,300,302,303,304,305,306,307,310,313,314,315,316,319,323,324,327,330,331,333,335,337,339,340,341,342,343,344,346,347,348,349,350,352,353,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,375,376,378,379,383,384,387,388,389,391,395,398,400,401,405,406,410,411,415,417,424,425,426,427,431,432],"x1":[307,321,325,332,407],"x1_h0":[417,424],"x1_h0_real_theori":[417,424],"x1_h1":[417,424],"x1_h1_real_theori":[417,424],"x2":[307,321,325,332,407],"x2_h0":[417,424],"x2_h0_real_theori":[417,424],"x2_h1":[417,424],"x2_h1_real_theori":[417,424],"x3":[307,321,325,332,407,409],"x5":409,"x_":[303,333,337,340],"x_1":[282,337,340],"x_2":[282,337,340],"x_3":[282,337,340,409],"x_4":282,"x_5":409,"x_axi":[359,362,363,365,367,368,369,421,422,425,426,431],"x_bb_0p1":425,"x_bb_0p5":425,"x_bb_0p9":425,"x_bb_rect":425,"x_c":[3,402,403],"x_h0":[323,324,417,424],"x_h1":[323,324,417,424],"x_hat":[6,9,101,103,314,356,427],"x_i":[7,24,27,32,35,90,94,95,282,287,291,292,294,296,297,306,330,337,340],"x_label":366,"x_n":[282,337,340],"x_pb_0p1":425,"x_pb_0p5":425,"x_pb_0p9":425,"x_pb_rect":425,"x_q":330,"x_r":[3,402,403],"x_rect":[387,388],"x_srrc":[387,388],"x_srrc_env":388,"x_tild":[42,46,200],"x_u":409,"xdist":415,"xlabel":[24,32,220,242,282,283,284,287,292,294,297,299,300,301,314,315,316,318,336,337,338,339,340,341,342,344,346,392,393,398,399,401,404,417,424,425,426,428],"xlim":[139,298,301,307,315,316,323,324,339,341,398,399,404,406,425,426,428],"xor":321,"xtick":62,"xx":[9,19,367],"xytext":[287,393],"y":[6,7,8,9,10,11,19,21,23,24,26,27,32,34,35,40,57,62,84,88,90,93,94,95,108,109,113,125,127,139,140,143,151,164,166,181,183,186,187,190,193,211,212,232,233,239,256,257,258,265,278,279,283,286,291,293,294,296,298,299,304,305,306,307,313,319,327,330,335,339,341,343,344,356,357,359,360,365,367,375,376,378,391,398,406,410,426,427],"y1":[84,139,190,278,330],"y2":[84,139,190,278,330],"y2_h0":417,"y2_h0_real_theori":417,"y2_h1":417,"y2_h1_real_theori":417,"y3":[84,139,190,278],"y4":[84,139,190,278],"y5":[84,139,190,278],"y_":[125,151,293],"y_1":[84,190,278,330],"y_2":[84,190,278,330,417],"y_3":[84,190,278],"y_4":[84,190,278],"y_5":[84,190,278],"y_axi":[88,357,359,360,365,367,375,431],"y_back":181,"y_fir":[193,230],"y_forw":181,"y_i":[24,27,32,35,62,63,90,94,256,287,291,292,294,296,297,306],"y_iir":[193,230],"y_j":[95,306],"y_prev":[8,304,305],"y_t":[125,151,293],"y_trap":181,"yaml":414,"yang":294,"year":430,"yield":[337,339,340,341,384],"ylabel":[24,32,220,242,282,283,284,287,292,294,297,299,300,301,314,315,316,318,319,336,337,338,339,340,341,342,344,346,392,393,398,399,401,404,417,424,425,426,428],"ylim":[10,139,149,193,230,288,289,300,301,307,315,316,317,321,323,324,325,329,332,334,335,336,338,346,374,399,404,406,407,409,421,426,427,428],"you":[318,414,415,416,426,430],"your":[414,416,426,430],"z":[10,67,108,164,181,193,211,232,282,283,293,298,304,305,337,339,340,341,344,398,409,421,422,426],"z1_h0":[417,424],"z1_h0_theori":[417,424],"z1_h1":[417,424],"z1_h1_theori":[417,424],"z2_h0":[417,424],"z2_h0_theori":[417,424],"z2_h1":[417,424],"z2_h1_theori":[417,424],"z_":282,"z_1":[417,424],"z_2":[417,424],"z_h0":[323,324],"z_h1":[323,324],"zadoff":[409,410,430,431],"zadoff_chu":431,"zadoff_chu_sequ":[409,410,431],"zero":[3,9,62,84,88,108,113,139,143,145,149,150,164,165,170,180,181,190,191,193,211,230,233,256,278,280,298,300,317,325,326,335,349,357,359,362,363,364,365,368,369,377,381,386,401,402,406,407,421,425,426,428,430,431],"zeros_pol":[9,381,422,431],"zerospol":[164,165,170,181,193,362,363,364,365,368,369,377,381,422],"zeta":[67,74,83,211,213,214],"zoh":[190,191,192,278,280,281],"zorder":[286,391],"\u03b1":193,"\u03bc":[300,315,316]},"titles":["Coding","Conversions","Detection","Digital signal processing","Estimation","Link budgets","Measurement","Miscellaneous","Modulation","Plotting","sdr.AGC","sdr.AGC.__call__","sdr.AGC.__init__","sdr.AGC.attack","sdr.AGC.decay","sdr.AGC.gain","sdr.AGC.reference","sdr.AGC.reset","sdr.AGC.streaming","sdr.AdditiveScrambler","sdr.AdditiveScrambler.__init__","sdr.AdditiveScrambler.descramble","sdr.AdditiveScrambler.lfsr","sdr.AdditiveScrambler.scramble","sdr.BinaryErasureChannel","sdr.BinaryErasureChannel.X","sdr.BinaryErasureChannel.Y","sdr.BinaryErasureChannel.__call__","sdr.BinaryErasureChannel.__init__","sdr.BinaryErasureChannel.capacities","sdr.BinaryErasureChannel.capacity","sdr.BinaryErasureChannel.p","sdr.BinarySymmetricChannel","sdr.BinarySymmetricChannel.X","sdr.BinarySymmetricChannel.Y","sdr.BinarySymmetricChannel.__call__","sdr.BinarySymmetricChannel.__init__","sdr.BinarySymmetricChannel.capacities","sdr.BinarySymmetricChannel.capacity","sdr.BinarySymmetricChannel.p","sdr.BlockInterleaver","sdr.BlockInterleaver.__init__","sdr.CPM","sdr.CPM.__init__","sdr.CPM.ber","sdr.CPM.bps","sdr.CPM.demodulate","sdr.CPM.index","sdr.CPM.modulate","sdr.CPM.order","sdr.CPM.phase_offset","sdr.CPM.pulse_shape","sdr.CPM.rx_filter","sdr.CPM.ser","sdr.CPM.sps","sdr.CPM.tx_filter","sdr.Channel","sdr.Channel.__call__","sdr.Channel.__init__","sdr.Channel.capacities","sdr.Channel.capacity","sdr.Channel.reset","sdr.Channelizer","sdr.Channelizer.__call__","sdr.Channelizer.__init__","sdr.Channelizer.channels","sdr.Channelizer.method","sdr.ClosedLoopPLL","sdr.ClosedLoopPLL.Bn","sdr.ClosedLoopPLL.BnT","sdr.ClosedLoopPLL.K0","sdr.ClosedLoopPLL.K1","sdr.ClosedLoopPLL.K2","sdr.ClosedLoopPLL.Kp","sdr.ClosedLoopPLL.__init__","sdr.ClosedLoopPLL.frequency_lock_time","sdr.ClosedLoopPLL.iir","sdr.ClosedLoopPLL.lock_time","sdr.ClosedLoopPLL.omega_3dB","sdr.ClosedLoopPLL.omega_n","sdr.ClosedLoopPLL.phase_error_variance","sdr.ClosedLoopPLL.phase_lock_time","sdr.ClosedLoopPLL.sample_rate","sdr.ClosedLoopPLL.zeta","sdr.Decimator","sdr.Decimator.__init__","sdr.Decimator.method","sdr.Decimator.reset","sdr.Differentiator","sdr.Differentiator.__init__","sdr.DiscreteMemorylessChannel","sdr.DiscreteMemorylessChannel.P","sdr.DiscreteMemorylessChannel.X","sdr.DiscreteMemorylessChannel.Y","sdr.DiscreteMemorylessChannel.__call__","sdr.DiscreteMemorylessChannel.__init__","sdr.EnergyDetector","sdr.EnergyDetector.p_d","sdr.EnergyDetector.p_fa","sdr.EnergyDetector.roc","sdr.EnergyDetector.threshold","sdr.ErrorRate","sdr.ErrorRate.__init__","sdr.ErrorRate.add","sdr.ErrorRate.counts","sdr.ErrorRate.error_rate","sdr.ErrorRate.error_rates","sdr.ErrorRate.errors","sdr.FIR","sdr.FIR.__call__","sdr.FIR.__init__","sdr.FIR.__len__","sdr.FIR.delay","sdr.FIR.flush","sdr.FIR.frequency_response","sdr.FIR.group_delay","sdr.FIR.impulse_response","sdr.FIR.noise_bandwidth","sdr.FIR.order","sdr.FIR.phase_delay","sdr.FIR.reset","sdr.FIR.state","sdr.FIR.step_response","sdr.FIR.streaming","sdr.FIR.taps","sdr.FLFSR","sdr.FLFSR.Taps","sdr.FLFSR.__call__","sdr.FLFSR.__init__","sdr.FLFSR.characteristic_poly","sdr.FLFSR.feedback_poly","sdr.FLFSR.field","sdr.FLFSR.initial_state","sdr.FLFSR.order","sdr.FLFSR.reset","sdr.FLFSR.state","sdr.FLFSR.step","sdr.FLFSR.taps","sdr.FLFSR.to_galois_lfsr","sdr.FarrowResampler","sdr.FarrowResampler.__call__","sdr.FarrowResampler.__init__","sdr.FarrowResampler.delay","sdr.FarrowResampler.flush","sdr.FarrowResampler.order","sdr.FarrowResampler.reset","sdr.FarrowResampler.state","sdr.FarrowResampler.streaming","sdr.FarrowResampler.taps","sdr.FractionalDelay","sdr.FractionalDelay.__init__","sdr.GLFSR","sdr.GLFSR.Taps","sdr.GLFSR.__init__","sdr.GLFSR.characteristic_poly","sdr.GLFSR.feedback_poly","sdr.GLFSR.field","sdr.GLFSR.initial_state","sdr.GLFSR.order","sdr.GLFSR.reset","sdr.GLFSR.state","sdr.GLFSR.step","sdr.GLFSR.taps","sdr.GLFSR.to_fibonacci_lfsr","sdr.IIR","sdr.IIR.ZerosPoles","sdr.IIR.__call__","sdr.IIR.__init__","sdr.IIR.a_taps","sdr.IIR.b_taps","sdr.IIR.frequency_response","sdr.IIR.gain","sdr.IIR.impulse_response","sdr.IIR.noise_bandwidth","sdr.IIR.order","sdr.IIR.poles","sdr.IIR.reset","sdr.IIR.state","sdr.IIR.step_response","sdr.IIR.streaming","sdr.IIR.zeros","sdr.Integrator","sdr.Integrator.__init__","sdr.Interleaver","sdr.Interleaver.__init__","sdr.Interleaver.__len__","sdr.Interleaver.deinterleave","sdr.Interleaver.interleave","sdr.Interleaver.inverse_map","sdr.Interleaver.map","sdr.Interpolator","sdr.Interpolator.__init__","sdr.Interpolator.method","sdr.LeakyIntegrator","sdr.LeakyIntegrator.__init__","sdr.LinearModulation","sdr.LinearModulation.__init__","sdr.LinearModulation.ber","sdr.LinearModulation.bps","sdr.LinearModulation.decide_symbols","sdr.LinearModulation.demodulate","sdr.LinearModulation.map_symbols","sdr.LinearModulation.modulate","sdr.LinearModulation.order","sdr.LinearModulation.phase_offset","sdr.LinearModulation.pulse_shape","sdr.LinearModulation.rx_filter","sdr.LinearModulation.ser","sdr.LinearModulation.sps","sdr.LinearModulation.symbol_map","sdr.LinearModulation.tx_filter","sdr.LoopFilter","sdr.LoopFilter.__call__","sdr.LoopFilter.__init__","sdr.LoopFilter.damping_factor","sdr.LoopFilter.iir","sdr.LoopFilter.integral_gain","sdr.LoopFilter.noise_bandwidth","sdr.LoopFilter.proportional_gain","sdr.LoopFilter.reset","sdr.MLPED","sdr.MLPED.A_received","sdr.MLPED.A_reference","sdr.MLPED.__call__","sdr.MLPED.__init__","sdr.MLPED.data_aided_error","sdr.MLPED.decision_directed_error","sdr.MLPED.gain","sdr.MSK","sdr.MSK.__init__","sdr.MovingAverager","sdr.MovingAverager.__init__","sdr.NCO","sdr.NCO.__call__","sdr.NCO.__init__","sdr.NCO.gain","sdr.NCO.increment","sdr.NCO.offset","sdr.NCO.reset","sdr.NCO.step","sdr.OQPSK","sdr.OQPSK.__init__","sdr.PED","sdr.PED.__call__","sdr.PED.__init__","sdr.PED.data_aided_error","sdr.PED.decision_directed_error","sdr.PED.gain","sdr.PSK","sdr.PSK.__init__","sdr.PSK.ber","sdr.PSK.phase_offset","sdr.PSK.ser","sdr.PSK.symbol_map","sdr.PiMPSK","sdr.PiMPSK.__init__","sdr.PolyphaseFIR","sdr.PolyphaseFIR.__call__","sdr.PolyphaseFIR.__init__","sdr.PolyphaseFIR.branches","sdr.PolyphaseFIR.decimation","sdr.PolyphaseFIR.delay","sdr.PolyphaseFIR.input","sdr.PolyphaseFIR.interpolation","sdr.PolyphaseFIR.order","sdr.PolyphaseFIR.output","sdr.PolyphaseFIR.polyphase_order","sdr.PolyphaseFIR.polyphase_taps","sdr.PolyphaseFIR.rate","sdr.PolyphaseFIR.reset","sdr.PolyphaseFIR.taps","sdr.Q","sdr.Qinv","sdr.ReplicaCorrelator","sdr.ReplicaCorrelator.p_d","sdr.ReplicaCorrelator.p_fa","sdr.ReplicaCorrelator.roc","sdr.ReplicaCorrelator.threshold","sdr.Resampler","sdr.Resampler.__call__","sdr.Resampler.__init__","sdr.Resampler.method","sdr.add_iid_rvs","sdr.add_rvs","sdr.albersheim","sdr.average_power","sdr.awgn","sdr.awgn_capacity","sdr.bandpass_fir","sdr.bandstop_fir","sdr.barker_code","sdr.bec","sdr.bec_capacity","sdr.berlekamp_massey","sdr.biawgn_capacity","sdr.binary_code","sdr.bsc","sdr.bsc_capacity","sdr.clock_error","sdr.coherent_gain","sdr.coherent_gain_loss","sdr.composite_snr","sdr.crest_factor","sdr.db","sdr.diff_decode","sdr.diff_encode","sdr.dmc","sdr.downsample","sdr.ebn0_to_esn0","sdr.ebn0_to_snr","sdr.energy","sdr.esn0_to_ebn0","sdr.esn0_to_snr","sdr.euclidean","sdr.evm","sdr.fdoa_crlb","sdr.foa_crlb","sdr.fractional_delay_fir","sdr.free_space_path_loss","sdr.frequency_offset","sdr.gaussian","sdr.gold_code","sdr.gray_code","sdr.h0","sdr.h1","sdr.hadamard_code","sdr.half_sine","sdr.hamming","sdr.hexdump","sdr.highpass_fir","sdr.iq_imbalance","sdr.is_preferred_pair","sdr.kasami_code","sdr.linear","sdr.lowpass_fir","sdr.m_sequence","sdr.max_frequency_offset","sdr.max_iid_rvs","sdr.max_integration_time","sdr.max_rvs","sdr.min_iid_rvs","sdr.min_rvs","sdr.min_snr","sdr.mix","sdr.multiply_rvs","sdr.multirate_fir","sdr.non_coherent_gain","sdr.p_d","sdr.p_fa","sdr.pack","sdr.papr","sdr.parabolic_antenna","sdr.peak_power","sdr.peak_voltage","sdr.peebles","sdr.plot.ber","sdr.plot.constellation","sdr.plot.correlation","sdr.plot.detector_pdfs","sdr.plot.dft","sdr.plot.dtft","sdr.plot.eye","sdr.plot.filter","sdr.plot.group_delay","sdr.plot.impulse_response","sdr.plot.magnitude_response","sdr.plot.p_d","sdr.plot.periodogram","sdr.plot.phase_delay","sdr.plot.phase_response","sdr.plot.phase_tree","sdr.plot.raster","sdr.plot.roc","sdr.plot.ser","sdr.plot.shannon_limit_ebn0","sdr.plot.spectrogram","sdr.plot.stem","sdr.plot.step_response","sdr.plot.symbol_map","sdr.plot.time_domain","sdr.plot.use_style","sdr.plot.zeros_poles","sdr.polyphase_decompose","sdr.power","sdr.preferred_pairs","sdr.raised_cosine","sdr.rectangular","sdr.rms_bandwidth","sdr.rms_integration_time","sdr.rms_voltage","sdr.root_raised_cosine","sdr.sample_rate_offset","sdr.shannon_limit_ebn0","sdr.shannon_limit_snr","sdr.shnidman","sdr.sinusoid","sdr.snr_to_ebn0","sdr.snr_to_esn0","sdr.subtract_rvs","sdr.tdoa_crlb","sdr.threshold","sdr.threshold_factor","sdr.to_complex_baseband","sdr.to_real_passband","sdr.toa_crlb","sdr.unpack","sdr.upsample","sdr.walsh_code","sdr.wavelength","sdr.zadoff_chu_sequence","Sequences","Simulation","Synchronization","Documentation","Formatting","Installation","Unit Tests","Coherent integration","Detection","Digital signal processing","Farrow arbitrary resampler","FIR filters","IIR filters","Modulation","Non-coherent integration","Peak-to-average power","Phase-locked loops","Phase-shift keying","Pulse shapes","Synchronization","sdr","v0.0","Versioning"],"titleterms":{"":[421,422],"0":431,"1":431,"10":431,"11":431,"12":431,"13":431,"14":431,"15":431,"16":[427,431],"17":431,"18":431,"19":431,"2":431,"20":431,"21":431,"22":431,"23":431,"24":431,"25":431,"26":431,"27":431,"28":431,"3":431,"4":431,"5":431,"6":431,"7":431,"8":[427,431],"9":431,"across":[425,426],"alpha":432,"also":[20,43,44,53,101,103,114,115,116,119,122,125,128,151,153,170,172,178,196,197,207,229,241,249,250,252,255,271,272,284,302,315,316,321,323,324,331,342,346,350,354,358,359,360,384,387,388,392,393,394,399,404,406],"amplitud":412,"an":[420,421,422],"analysi":9,"analyz":[421,422,426],"antenna":5,"applic":3,"approxim":2,"arbitrari":[3,420],"averag":425,"b_n":426,"bandwidth":425,"beta":432,"bit":427,"bpsk":427,"budget":5,"build":413,"capac":5,"chang":431,"channel":[5,411],"citat":430,"close":426,"code":[0,414,416],"coher":[2,417,424],"command":416,"commit":414,"compar":426,"configur":[414,416],"constel":427,"construct":420,"constructor":[10,19,24,32,40,42,56,62,67,84,88,90,101,108,125,139,149,151,164,181,183,190,193,195,211,220,228,230,232,240,242,248,254,256,278],"continu":8,"contributor":431,"control":412,"convers":1,"correl":[3,410],"cosin":428,"creat":[421,422],"curv":427,"data":7,"decibel":1,"delai":[421,422],"depend":415,"design":426,"detect":[2,9,417,418,424],"detector":[2,412],"dev":415,"digit":[3,419,422],"distanc":6,"doc":413,"document":413,"domain":[4,9,425,426],"downsampl":420,"edit":415,"encod":8,"energi":6,"error":[412,427],"estim":[4,9],"examin":[421,422,425],"excess":425,"farrow":420,"featur":430,"filter":[3,9,421,422,426],"fir":[3,421],"folder":415,"format":414,"formatt":414,"frac":420,"frequenc":[4,9,421,422,425,426],"from":[414,415,416],"fulli":[421,422],"gaussian":428,"github":415,"group":[421,422],"h":[421,422],"iid":7,"iir":[3,422],"impair":411,"implement":426,"impuls":[421,422],"independ":7,"input":420,"instal":[413,414,415,416,430],"integ":420,"integr":[2,417,424,426],"interleav":0,"irrat":420,"kei":427,"length":410,"line":416,"linear":[8,410],"link":5,"linter":414,"local":415,"lock":[412,426],"loop":[412,426],"loss":5,"manipul":[3,7],"map":[410,427],"maximum":410,"measur":6,"method":[10,19,24,32,40,42,56,62,67,84,88,90,96,101,108,125,139,149,151,164,181,183,190,193,195,211,220,228,230,232,240,242,248,254,256,273,278],"miscellan":7,"mode":[10,62,84,88,108,139,149,164,181,190,193,230,256,278],"model":411,"modul":[6,8,9,423],"n":[417,420,421,422,424],"nois":[1,4],"nomenclatur":[42,195,228,240,248,254],"non":[2,424],"note":[20,67,128,153,294,301,315,316,318,367,375,387,388,399,404],"omega":[421,422],"onli":[10,62,84,88,108,139,149,164,181,190,193,230,256,278],"orthogon":8,"path":5,"peak":425,"perform":[2,426],"phase":[8,412,426,427],"pll":426,"plot":[9,425],"plu":426,"pole":422,"polynomi":[125,151],"polyphas":3,"power":[6,425],"ppi":426,"pre":414,"probabl":7,"process":[3,419],"properti":[10,19,24,32,40,42,56,62,67,84,88,90,108,125,139,149,151,164,181,183,190,193,195,211,220,228,230,232,240,242,248,254,256,278],"proport":426,"psk":427,"puls":[8,425,428],"pypi":415,"qpsk":[425,427],"r":420,"rais":428,"random":7,"rate":[420,427],"ratio":[1,4],"recurr":410,"releas":432,"resampl":[3,420],"respons":[421,422,426],"root":428,"run":[414,416],"scrambler":0,"sdr":430,"see":[20,43,44,53,101,103,114,115,116,119,122,125,128,151,153,170,172,178,196,197,207,229,241,249,250,252,255,271,272,284,302,315,316,321,323,324,331,342,346,350,354,358,359,360,384,387,388,392,393,394,399,404,406],"sequenc":410,"serv":413,"shape":[8,425,428],"shift":427,"signal":[1,3,4,411,419,420,425],"simul":411,"special":[10,24,32,40,56,62,84,88,90,108,125,139,149,164,181,183,190,193,211,220,230,232,242,256,278],"spectral":9,"squar":428,"stabil":422,"state":[125,151],"step":[421,422,426],"stream":[10,62,84,88,108,139,149,164,181,190,193,230,256,278],"symbol":[8,410,427],"synchron":[412,429],"t":426,"t_":420,"tau_g":[421,422],"test":416,"theoret":2,"time":[4,9,425,426],"unit":416,"upsampl":420,"util":9,"v":[414,416],"v0":431,"variabl":[7,42,195,228,240,248,254],"variou":425,"version":432,"voltag":6,"warn":[298,307,315,316,399,404,406],"x":420,"x_1":[417,424],"x_2":[417,424],"y":420,"zero":422,"zeta":426}})