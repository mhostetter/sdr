Search.setIndex({"alltitles":{"16-PSK":[[426,"id2"]],"8-PSK":[[426,"id1"]],"Alpha releases":[[431,"alpha-releases"]],"Amplitude control loops":[[411,"amplitude-control-loops"]],"Analyze PLL closed-loop performance":[[425,"analyze-pll-closed-loop-performance"]],"Antennas":[[5,"antennas"]],"Approximated performance":[[2,"approximated-performance"]],"Arbitrary resampling":[[3,"arbitrary-resampling"]],"BPSK":[[426,"bpsk"]],"Beta releases":[[431,"beta-releases"]],"Bit error rate curves":[[426,"bit-error-rate-curves"]],"Build the docs":[[412,"build-the-docs"]],"Changes":[[430,"changes"],[430,"id1"],[430,"id3"],[430,"id5"],[430,"id7"],[430,"id9"],[430,"id11"],[430,"id13"],[430,"id15"],[430,"id17"],[430,"id19"],[430,"id21"],[430,"id23"],[430,"id25"],[430,"id27"],[430,"id29"],[430,"id31"],[430,"id33"],[430,"id35"],[430,"id37"],[430,"id39"],[430,"id41"],[430,"id43"],[430,"id45"],[430,"id47"],[430,"id49"],[430,"id51"]],"Channel capacity":[[5,"channel-capacity"]],"Channel models":[[410,"channel-models"]],"Citation":[[429,"citation"]],"Coding":[[0,null]],"Coherent integration":[[2,"coherent-integration"],[416,null]],"Compare lock time across B_n T":[[425,"compare-lock-time-across-b-n-t"]],"Compare step and frequency response across B_n T":[[425,"compare-step-and-frequency-response-across-b-n-t"]],"Compare step and frequency response across \\zeta":[[425,"compare-step-and-frequency-response-across-zeta"]],"Configuration":[[413,"configuration"],[415,"configuration"]],"Constellations":[[426,"constellations"]],"Construct an input signal, x[n] = x(n T_s)":[[419,"construct-an-input-signal-x-n-x-n-t-s"]],"Constructors":[[10,null],[19,null],[24,null],[32,null],[40,null],[42,"constructors"],[56,null],[62,null],[67,"constructors"],[84,null],[88,null],[90,null],[101,"constructors"],[108,null],[125,"constructors"],[139,null],[149,null],[151,"constructors"],[164,null],[181,null],[183,null],[190,null],[193,null],[195,"constructors"],[211,null],[220,null],[228,"constructors"],[230,null],[232,null],[240,"constructors"],[242,null],[248,"constructors"],[254,"constructors"],[256,null],[278,null]],"Continuous-phase modulations":[[8,"continuous-phase-modulations"]],"Contributors":[[430,"contributors"],[430,"id2"],[430,"id4"],[430,"id6"],[430,"id8"],[430,"id10"],[430,"id12"],[430,"id14"],[430,"id16"],[430,"id18"],[430,"id20"],[430,"id22"],[430,"id24"],[430,"id26"],[430,"id28"],[430,"id30"],[430,"id32"],[430,"id34"],[430,"id36"],[430,"id38"],[430,"id40"],[430,"id42"],[430,"id44"],[430,"id46"],[430,"id48"],[430,"id50"],[430,"id52"]],"Conversions":[[1,null]],"Correlation":[[3,"correlation"]],"Correlation sequences":[[409,"correlation-sequences"]],"Create an FIR filter":[[420,"create-an-fir-filter"]],"Create an IIR filter":[[421,"create-an-iir-filter"]],"Data manipulation":[[7,"data-manipulation"]],"Decibels":[[1,"decibels"]],"Design a proportional-plus-integrator (PPI) loop filter":[[425,"design-a-proportional-plus-integrator-ppi-loop-filter"]],"Detect x_1[n]":[[416,"detect-x-1-n"],[423,"detect-x-1-n"]],"Detect x_2[n]":[[416,"detect-x-2-n"],[423,"detect-x-2-n"]],"Detection":[[2,null],[9,"detection"],[417,null]],"Detectors":[[2,"detectors"]],"Digital signal processing":[[3,null],[418,null]],"Distance":[[6,"distance"]],"Documentation":[[412,null]],"Downsample by an irrational rate":[[419,"downsample-by-an-irrational-rate"]],"Downsample the signal by an integer rate":[[419,"downsample-the-signal-by-an-integer-rate"]],"Editable install from local folder":[[414,"editable-install-from-local-folder"]],"Energy":[[6,"energy"]],"Error rate curves":[[426,"error-rate-curves"]],"Estimation":[[4,null]],"Examine frequency domain":[[424,"examine-frequency-domain"]],"Examine the frequency response, H(\\omega)":[[420,"examine-the-frequency-response-h-omega"],[421,"examine-the-frequency-response-h-omega"]],"Examine the group delay, \\tau_g(\\omega)":[[420,"examine-the-group-delay-tau-g-omega"],[421,"examine-the-group-delay-tau-g-omega"]],"Examine the impulse response, h[n]":[[420,"examine-the-impulse-response-h-n"],[421,"examine-the-impulse-response-h-n"]],"Examine the step response, s[n]":[[420,"examine-the-step-response-s-n"],[421,"examine-the-step-response-s-n"]],"Examine the zeros and poles":[[421,"examine-the-zeros-and-poles"]],"Examine time domain":[[424,"examine-time-domain"]],"FIR filtering":[[3,"fir-filtering"]],"FIR filters":[[420,null]],"Farrow arbitrary resampler":[[419,null]],"Features":[[429,"features"]],"Filter analysis":[[9,"filter-analysis"]],"Filter applications":[[3,"filter-applications"]],"Formatting":[[413,null]],"Frequency domain":[[4,"frequency-domain"]],"Frequency-domain":[[9,"frequency-domain"]],"Fully analyze a FIR filter":[[420,"fully-analyze-a-fir-filter"]],"Fully analyze an IIR filter":[[421,"fully-analyze-an-iir-filter"]],"Gaussian":[[427,"gaussian"]],"IID random variables":[[7,"iid-random-variables"]],"IIR filtering":[[3,"iir-filtering"]],"IIR filters":[[421,null]],"Implement a PLL in the phase domain":[[425,"implement-a-pll-in-the-phase-domain"]],"Implement a PLL in the time domain":[[425,"implement-a-pll-in-the-time-domain"]],"Independent random variables":[[7,"independent-random-variables"]],"Install":[[412,"install"],[413,"install"],[415,"install"]],"Install from GitHub":[[414,"install-from-github"]],"Install from PyPI":[[414,"install-from-pypi"]],"Install the dev dependencies":[[414,"install-the-dev-dependencies"]],"Installation":[[414,null],[429,"installation"]],"Interleavers":[[0,"interleavers"]],"Linear modulations":[[8,"linear-modulations"]],"Linear recurrent sequences":[[409,"linear-recurrent-sequences"]],"Link budgets":[[5,null]],"Maximum-length sequences":[[409,"maximum-length-sequences"]],"Measurement":[[6,null]],"Methods":[[19,"methods"],[24,"methods"],[32,"methods"],[40,"methods"],[42,"methods"],[56,"methods"],[62,"methods"],[67,"methods"],[84,"methods"],[88,"methods"],[90,"methods"],[96,null],[101,"methods"],[108,"methods"],[125,"methods"],[149,"methods"],[151,"methods"],[164,"methods"],[181,"methods"],[183,"methods"],[190,"methods"],[193,"methods"],[195,"methods"],[211,"methods"],[220,"methods"],[228,"methods"],[230,"methods"],[232,"methods"],[240,"methods"],[242,"methods"],[248,"methods"],[254,"methods"],[256,"methods"],[273,null],[278,"methods"]],"Miscellaneous":[[7,null]],"Modulation":[[6,"modulation"],[8,null],[9,"modulation"],[422,null]],"Non-coherent integration":[[2,"non-coherent-integration"],[423,null]],"Note":[[20,null],[67,null],[128,null],[153,null],[294,null],[300,null],[314,null],[315,null],[317,null],[366,null],[374,null],[386,null],[387,null],[398,null],[403,null]],"Orthogonal modulations":[[8,"orthogonal-modulations"]],"Path losses":[[5,"path-losses"]],"Peak-to-average power":[[424,null]],"Phase error detectors":[[411,"phase-error-detectors"]],"Phase-locked loops":[[411,"phase-locked-loops"],[425,null]],"Phase-shift keying":[[426,null]],"Plot across excess bandwidth":[[424,"plot-across-excess-bandwidth"]],"Plotting":[[9,null]],"Poles and digital filter stability":[[421,"poles-and-digital-filter-stability"]],"Polynomials":[[125,"polynomials"],[151,"polynomials"]],"Polyphase FIR filtering":[[3,"polyphase-fir-filtering"]],"Power":[[6,"power"]],"Pre-commit":[[413,"pre-commit"]],"Probability":[[7,"probability"]],"Properties":[[10,"properties"],[19,"properties"],[24,"properties"],[32,"properties"],[40,"properties"],[42,"properties"],[56,"properties"],[62,"properties"],[67,"properties"],[84,"properties"],[88,"properties"],[90,"properties"],[108,"properties"],[125,"properties"],[139,"properties"],[149,"properties"],[151,"properties"],[164,"properties"],[181,"properties"],[183,"properties"],[190,"properties"],[193,"properties"],[195,"properties"],[211,"properties"],[220,"properties"],[228,"properties"],[230,"properties"],[232,"properties"],[240,"properties"],[242,"properties"],[248,"properties"],[254,"properties"],[256,"properties"],[278,"properties"]],"Pulse shapes":[[427,null]],"Pulse shaping":[[8,"pulse-shaping"]],"QPSK":[[426,"qpsk"]],"QPSK signal with various pulse shapes":[[424,"qpsk-signal-with-various-pulse-shapes"]],"Raised cosine":[[427,"raised-cosine"]],"Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})":[[419,"resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]],"Run from VS Code":[[413,"run-from-vs-code"],[415,"run-from-vs-code"]],"Run from the command line":[[415,"run-from-the-command-line"]],"Run the formatter":[[413,"run-the-formatter"]],"Run the linter":[[413,"run-the-linter"]],"Scramblers":[[0,"scramblers"]],"See also":[[20,null],[43,null],[44,null],[53,null],[101,null],[103,null],[114,null],[115,null],[116,null],[119,null],[122,null],[125,null],[128,null],[151,null],[153,null],[170,null],[172,null],[178,null],[196,null],[197,null],[207,null],[229,null],[241,null],[249,null],[250,null],[252,null],[255,null],[271,null],[272,null],[284,null],[301,null],[314,null],[315,null],[320,null],[322,null],[323,null],[330,null],[341,null],[345,null],[349,null],[353,null],[357,null],[358,null],[359,null],[383,null],[386,null],[387,null],[391,null],[392,null],[393,null],[398,null],[403,null],[405,null]],"Sequences":[[409,null]],"Serve the docs":[[412,"serve-the-docs"]],"Signal impairments":[[410,"signal-impairments"]],"Signal manipulation":[[3,"signal-manipulation"]],"Signal-to-noise ratio":[[4,"signal-to-noise-ratio"]],"Signal-to-noise ratios":[[1,"signal-to-noise-ratios"]],"Simulation":[[410,null]],"Special methods":[[10,"special-methods"],[24,"special-methods"],[32,"special-methods"],[40,"special-methods"],[56,"special-methods"],[62,"special-methods"],[84,"special-methods"],[88,"special-methods"],[90,"special-methods"],[108,"special-methods"],[125,"special-methods"],[139,"special-methods"],[149,"special-methods"],[164,"special-methods"],[181,"special-methods"],[183,"special-methods"],[190,"special-methods"],[193,"special-methods"],[211,"special-methods"],[220,"special-methods"],[230,"special-methods"],[232,"special-methods"],[242,"special-methods"],[256,"special-methods"],[278,"special-methods"]],"Spectral estimation":[[9,"spectral-estimation"]],"Square-root raised cosine":[[427,"square-root-raised-cosine"]],"State":[[125,"state"],[151,"state"]],"Streaming mode only":[[10,"streaming-mode-only"],[62,"streaming-mode-only"],[84,"streaming-mode-only"],[88,"streaming-mode-only"],[108,"streaming-mode-only"],[139,"streaming-mode-only"],[149,"streaming-mode-only"],[164,"streaming-mode-only"],[181,"streaming-mode-only"],[190,"streaming-mode-only"],[193,"streaming-mode-only"],[230,"streaming-mode-only"],[256,"streaming-mode-only"],[278,"streaming-mode-only"]],"Symbol encoding":[[8,"symbol-encoding"]],"Symbol error rate curves":[[426,"symbol-error-rate-curves"]],"Symbol mapping":[[426,"symbol-mapping"]],"Symbol-mapping sequences":[[409,"symbol-mapping-sequences"]],"Synchronization":[[411,null],[428,null]],"Theoretical performance":[[2,"theoretical-performance"]],"Time domain":[[4,"time-domain"]],"Time-domain":[[9,"time-domain"]],"Unit Tests":[[415,null]],"Upsample by an irrational rate":[[419,"upsample-by-an-irrational-rate"]],"Upsample the signal by an integer rate":[[419,"upsample-the-signal-by-an-integer-rate"]],"Utility":[[9,"utility"]],"Variable nomenclature":[[42,null],[195,null],[228,null],[240,null],[248,null],[254,null]],"Versioning":[[431,null]],"Voltage":[[6,"voltage"]],"Warning":[[306,null],[314,null],[315,null],[398,null],[403,null],[405,null]],"sdr":[[429,null]],"v0.0":[[430,null]],"v0.0.1":[[430,"v0-0-1"]],"v0.0.10":[[430,"v0-0-10"]],"v0.0.11":[[430,"v0-0-11"]],"v0.0.12":[[430,"v0-0-12"]],"v0.0.13":[[430,"v0-0-13"]],"v0.0.14":[[430,"v0-0-14"]],"v0.0.15":[[430,"v0-0-15"]],"v0.0.16":[[430,"v0-0-16"]],"v0.0.17":[[430,"v0-0-17"]],"v0.0.18":[[430,"v0-0-18"]],"v0.0.19":[[430,"v0-0-19"]],"v0.0.2":[[430,"v0-0-2"]],"v0.0.20":[[430,"v0-0-20"]],"v0.0.21":[[430,"v0-0-21"]],"v0.0.22":[[430,"v0-0-22"]],"v0.0.23":[[430,"v0-0-23"]],"v0.0.24":[[430,"v0-0-24"]],"v0.0.25":[[430,"v0-0-25"]],"v0.0.26":[[430,"v0-0-26"]],"v0.0.27":[[430,"v0-0-27"]],"v0.0.3":[[430,"v0-0-3"]],"v0.0.4":[[430,"v0-0-4"]],"v0.0.5":[[430,"v0-0-5"]],"v0.0.6":[[430,"v0-0-6"]],"v0.0.7":[[430,"v0-0-7"]],"v0.0.8":[[430,"v0-0-8"]],"v0.0.9":[[430,"v0-0-9"]]},"docurls":["api/coding/","api/conversions/","api/detection/","api/dsp/","api/estimation/","api/link-budgets/","api/measurement/","api/misc/","api/modulation/","api/plotting/","api/sdr.AGC/","api/sdr.AGC.__call__/","api/sdr.AGC.__init__/","api/sdr.AGC.attack/","api/sdr.AGC.decay/","api/sdr.AGC.gain/","api/sdr.AGC.reference/","api/sdr.AGC.reset/","api/sdr.AGC.streaming/","api/sdr.AdditiveScrambler/","api/sdr.AdditiveScrambler.__init__/","api/sdr.AdditiveScrambler.descramble/","api/sdr.AdditiveScrambler.lfsr/","api/sdr.AdditiveScrambler.scramble/","api/sdr.BinaryErasureChannel/","api/sdr.BinaryErasureChannel.X/","api/sdr.BinaryErasureChannel.Y/","api/sdr.BinaryErasureChannel.__call__/","api/sdr.BinaryErasureChannel.__init__/","api/sdr.BinaryErasureChannel.capacities/","api/sdr.BinaryErasureChannel.capacity/","api/sdr.BinaryErasureChannel.p/","api/sdr.BinarySymmetricChannel/","api/sdr.BinarySymmetricChannel.X/","api/sdr.BinarySymmetricChannel.Y/","api/sdr.BinarySymmetricChannel.__call__/","api/sdr.BinarySymmetricChannel.__init__/","api/sdr.BinarySymmetricChannel.capacities/","api/sdr.BinarySymmetricChannel.capacity/","api/sdr.BinarySymmetricChannel.p/","api/sdr.BlockInterleaver/","api/sdr.BlockInterleaver.__init__/","api/sdr.CPM/","api/sdr.CPM.__init__/","api/sdr.CPM.ber/","api/sdr.CPM.bps/","api/sdr.CPM.demodulate/","api/sdr.CPM.index/","api/sdr.CPM.modulate/","api/sdr.CPM.order/","api/sdr.CPM.phase_offset/","api/sdr.CPM.pulse_shape/","api/sdr.CPM.rx_filter/","api/sdr.CPM.ser/","api/sdr.CPM.sps/","api/sdr.CPM.tx_filter/","api/sdr.Channel/","api/sdr.Channel.__call__/","api/sdr.Channel.__init__/","api/sdr.Channel.capacities/","api/sdr.Channel.capacity/","api/sdr.Channel.reset/","api/sdr.Channelizer/","api/sdr.Channelizer.__call__/","api/sdr.Channelizer.__init__/","api/sdr.Channelizer.channels/","api/sdr.Channelizer.method/","api/sdr.ClosedLoopPLL/","api/sdr.ClosedLoopPLL.Bn/","api/sdr.ClosedLoopPLL.BnT/","api/sdr.ClosedLoopPLL.K0/","api/sdr.ClosedLoopPLL.K1/","api/sdr.ClosedLoopPLL.K2/","api/sdr.ClosedLoopPLL.Kp/","api/sdr.ClosedLoopPLL.__init__/","api/sdr.ClosedLoopPLL.frequency_lock_time/","api/sdr.ClosedLoopPLL.iir/","api/sdr.ClosedLoopPLL.lock_time/","api/sdr.ClosedLoopPLL.omega_3dB/","api/sdr.ClosedLoopPLL.omega_n/","api/sdr.ClosedLoopPLL.phase_error_variance/","api/sdr.ClosedLoopPLL.phase_lock_time/","api/sdr.ClosedLoopPLL.sample_rate/","api/sdr.ClosedLoopPLL.zeta/","api/sdr.Decimator/","api/sdr.Decimator.__init__/","api/sdr.Decimator.method/","api/sdr.Decimator.reset/","api/sdr.Differentiator/","api/sdr.Differentiator.__init__/","api/sdr.DiscreteMemorylessChannel/","api/sdr.DiscreteMemorylessChannel.P/","api/sdr.DiscreteMemorylessChannel.X/","api/sdr.DiscreteMemorylessChannel.Y/","api/sdr.DiscreteMemorylessChannel.__call__/","api/sdr.DiscreteMemorylessChannel.__init__/","api/sdr.EnergyDetector/","api/sdr.EnergyDetector.p_d/","api/sdr.EnergyDetector.p_fa/","api/sdr.EnergyDetector.roc/","api/sdr.EnergyDetector.threshold/","api/sdr.ErrorRate/","api/sdr.ErrorRate.__init__/","api/sdr.ErrorRate.add/","api/sdr.ErrorRate.counts/","api/sdr.ErrorRate.error_rate/","api/sdr.ErrorRate.error_rates/","api/sdr.ErrorRate.errors/","api/sdr.FIR/","api/sdr.FIR.__call__/","api/sdr.FIR.__init__/","api/sdr.FIR.__len__/","api/sdr.FIR.delay/","api/sdr.FIR.flush/","api/sdr.FIR.frequency_response/","api/sdr.FIR.group_delay/","api/sdr.FIR.impulse_response/","api/sdr.FIR.noise_bandwidth/","api/sdr.FIR.order/","api/sdr.FIR.phase_delay/","api/sdr.FIR.reset/","api/sdr.FIR.state/","api/sdr.FIR.step_response/","api/sdr.FIR.streaming/","api/sdr.FIR.taps/","api/sdr.FLFSR/","api/sdr.FLFSR.Taps/","api/sdr.FLFSR.__call__/","api/sdr.FLFSR.__init__/","api/sdr.FLFSR.characteristic_poly/","api/sdr.FLFSR.feedback_poly/","api/sdr.FLFSR.field/","api/sdr.FLFSR.initial_state/","api/sdr.FLFSR.order/","api/sdr.FLFSR.reset/","api/sdr.FLFSR.state/","api/sdr.FLFSR.step/","api/sdr.FLFSR.taps/","api/sdr.FLFSR.to_galois_lfsr/","api/sdr.FarrowResampler/","api/sdr.FarrowResampler.__call__/","api/sdr.FarrowResampler.__init__/","api/sdr.FarrowResampler.delay/","api/sdr.FarrowResampler.flush/","api/sdr.FarrowResampler.order/","api/sdr.FarrowResampler.reset/","api/sdr.FarrowResampler.state/","api/sdr.FarrowResampler.streaming/","api/sdr.FarrowResampler.taps/","api/sdr.FractionalDelay/","api/sdr.FractionalDelay.__init__/","api/sdr.GLFSR/","api/sdr.GLFSR.Taps/","api/sdr.GLFSR.__init__/","api/sdr.GLFSR.characteristic_poly/","api/sdr.GLFSR.feedback_poly/","api/sdr.GLFSR.field/","api/sdr.GLFSR.initial_state/","api/sdr.GLFSR.order/","api/sdr.GLFSR.reset/","api/sdr.GLFSR.state/","api/sdr.GLFSR.step/","api/sdr.GLFSR.taps/","api/sdr.GLFSR.to_fibonacci_lfsr/","api/sdr.IIR/","api/sdr.IIR.ZerosPoles/","api/sdr.IIR.__call__/","api/sdr.IIR.__init__/","api/sdr.IIR.a_taps/","api/sdr.IIR.b_taps/","api/sdr.IIR.frequency_response/","api/sdr.IIR.gain/","api/sdr.IIR.impulse_response/","api/sdr.IIR.noise_bandwidth/","api/sdr.IIR.order/","api/sdr.IIR.poles/","api/sdr.IIR.reset/","api/sdr.IIR.state/","api/sdr.IIR.step_response/","api/sdr.IIR.streaming/","api/sdr.IIR.zeros/","api/sdr.Integrator/","api/sdr.Integrator.__init__/","api/sdr.Interleaver/","api/sdr.Interleaver.__init__/","api/sdr.Interleaver.__len__/","api/sdr.Interleaver.deinterleave/","api/sdr.Interleaver.interleave/","api/sdr.Interleaver.inverse_map/","api/sdr.Interleaver.map/","api/sdr.Interpolator/","api/sdr.Interpolator.__init__/","api/sdr.Interpolator.method/","api/sdr.LeakyIntegrator/","api/sdr.LeakyIntegrator.__init__/","api/sdr.LinearModulation/","api/sdr.LinearModulation.__init__/","api/sdr.LinearModulation.ber/","api/sdr.LinearModulation.bps/","api/sdr.LinearModulation.decide_symbols/","api/sdr.LinearModulation.demodulate/","api/sdr.LinearModulation.map_symbols/","api/sdr.LinearModulation.modulate/","api/sdr.LinearModulation.order/","api/sdr.LinearModulation.phase_offset/","api/sdr.LinearModulation.pulse_shape/","api/sdr.LinearModulation.rx_filter/","api/sdr.LinearModulation.ser/","api/sdr.LinearModulation.sps/","api/sdr.LinearModulation.symbol_map/","api/sdr.LinearModulation.tx_filter/","api/sdr.LoopFilter/","api/sdr.LoopFilter.__call__/","api/sdr.LoopFilter.__init__/","api/sdr.LoopFilter.damping_factor/","api/sdr.LoopFilter.iir/","api/sdr.LoopFilter.integral_gain/","api/sdr.LoopFilter.noise_bandwidth/","api/sdr.LoopFilter.proportional_gain/","api/sdr.LoopFilter.reset/","api/sdr.MLPED/","api/sdr.MLPED.A_received/","api/sdr.MLPED.A_reference/","api/sdr.MLPED.__call__/","api/sdr.MLPED.__init__/","api/sdr.MLPED.data_aided_error/","api/sdr.MLPED.decision_directed_error/","api/sdr.MLPED.gain/","api/sdr.MSK/","api/sdr.MSK.__init__/","api/sdr.MovingAverager/","api/sdr.MovingAverager.__init__/","api/sdr.NCO/","api/sdr.NCO.__call__/","api/sdr.NCO.__init__/","api/sdr.NCO.gain/","api/sdr.NCO.increment/","api/sdr.NCO.offset/","api/sdr.NCO.reset/","api/sdr.NCO.step/","api/sdr.OQPSK/","api/sdr.OQPSK.__init__/","api/sdr.PED/","api/sdr.PED.__call__/","api/sdr.PED.__init__/","api/sdr.PED.data_aided_error/","api/sdr.PED.decision_directed_error/","api/sdr.PED.gain/","api/sdr.PSK/","api/sdr.PSK.__init__/","api/sdr.PSK.ber/","api/sdr.PSK.phase_offset/","api/sdr.PSK.ser/","api/sdr.PSK.symbol_map/","api/sdr.PiMPSK/","api/sdr.PiMPSK.__init__/","api/sdr.PolyphaseFIR/","api/sdr.PolyphaseFIR.__call__/","api/sdr.PolyphaseFIR.__init__/","api/sdr.PolyphaseFIR.branches/","api/sdr.PolyphaseFIR.decimation/","api/sdr.PolyphaseFIR.delay/","api/sdr.PolyphaseFIR.input/","api/sdr.PolyphaseFIR.interpolation/","api/sdr.PolyphaseFIR.order/","api/sdr.PolyphaseFIR.output/","api/sdr.PolyphaseFIR.polyphase_order/","api/sdr.PolyphaseFIR.polyphase_taps/","api/sdr.PolyphaseFIR.rate/","api/sdr.PolyphaseFIR.reset/","api/sdr.PolyphaseFIR.taps/","api/sdr.Q/","api/sdr.Qinv/","api/sdr.ReplicaCorrelator/","api/sdr.ReplicaCorrelator.p_d/","api/sdr.ReplicaCorrelator.p_fa/","api/sdr.ReplicaCorrelator.roc/","api/sdr.ReplicaCorrelator.threshold/","api/sdr.Resampler/","api/sdr.Resampler.__call__/","api/sdr.Resampler.__init__/","api/sdr.Resampler.method/","api/sdr.add_iid_rvs/","api/sdr.add_rvs/","api/sdr.albersheim/","api/sdr.average_power/","api/sdr.awgn/","api/sdr.awgn_capacity/","api/sdr.bandpass_fir/","api/sdr.bandstop_fir/","api/sdr.barker_code/","api/sdr.bec/","api/sdr.bec_capacity/","api/sdr.berlekamp_massey/","api/sdr.biawgn_capacity/","api/sdr.binary_code/","api/sdr.bsc/","api/sdr.bsc_capacity/","api/sdr.coherent_gain/","api/sdr.coherent_gain_loss/","api/sdr.composite_snr/","api/sdr.crest_factor/","api/sdr.db/","api/sdr.diff_decode/","api/sdr.diff_encode/","api/sdr.dmc/","api/sdr.downsample/","api/sdr.ebn0_to_esn0/","api/sdr.ebn0_to_snr/","api/sdr.energy/","api/sdr.esn0_to_ebn0/","api/sdr.esn0_to_snr/","api/sdr.euclidean/","api/sdr.evm/","api/sdr.fdoa_crlb/","api/sdr.foa_crlb/","api/sdr.fractional_delay_fir/","api/sdr.free_space_path_loss/","api/sdr.frequency_offset/","api/sdr.gaussian/","api/sdr.gold_code/","api/sdr.gray_code/","api/sdr.h0/","api/sdr.h1/","api/sdr.hadamard_code/","api/sdr.half_sine/","api/sdr.hamming/","api/sdr.hexdump/","api/sdr.highpass_fir/","api/sdr.iq_imbalance/","api/sdr.is_preferred_pair/","api/sdr.kasami_code/","api/sdr.linear/","api/sdr.lowpass_fir/","api/sdr.m_sequence/","api/sdr.max_frequency_offset/","api/sdr.max_iid_rvs/","api/sdr.max_integration_time/","api/sdr.max_rvs/","api/sdr.min_iid_rvs/","api/sdr.min_rvs/","api/sdr.min_snr/","api/sdr.mix/","api/sdr.multiply_rvs/","api/sdr.multirate_fir/","api/sdr.non_coherent_gain/","api/sdr.p_d/","api/sdr.p_fa/","api/sdr.pack/","api/sdr.papr/","api/sdr.parabolic_antenna/","api/sdr.peak_power/","api/sdr.peak_voltage/","api/sdr.peebles/","api/sdr.plot.ber/","api/sdr.plot.constellation/","api/sdr.plot.correlation/","api/sdr.plot.detector_pdfs/","api/sdr.plot.dft/","api/sdr.plot.dtft/","api/sdr.plot.eye/","api/sdr.plot.filter/","api/sdr.plot.group_delay/","api/sdr.plot.impulse_response/","api/sdr.plot.magnitude_response/","api/sdr.plot.p_d/","api/sdr.plot.periodogram/","api/sdr.plot.phase_delay/","api/sdr.plot.phase_response/","api/sdr.plot.phase_tree/","api/sdr.plot.raster/","api/sdr.plot.roc/","api/sdr.plot.ser/","api/sdr.plot.shannon_limit_ebn0/","api/sdr.plot.spectrogram/","api/sdr.plot.stem/","api/sdr.plot.step_response/","api/sdr.plot.symbol_map/","api/sdr.plot.time_domain/","api/sdr.plot.use_style/","api/sdr.plot.zeros_poles/","api/sdr.polyphase_decompose/","api/sdr.power/","api/sdr.preferred_pairs/","api/sdr.raised_cosine/","api/sdr.rectangular/","api/sdr.rms_bandwidth/","api/sdr.rms_integration_time/","api/sdr.rms_voltage/","api/sdr.root_raised_cosine/","api/sdr.sample_rate_offset/","api/sdr.shannon_limit_ebn0/","api/sdr.shannon_limit_snr/","api/sdr.shnidman/","api/sdr.sinusoid/","api/sdr.snr_to_ebn0/","api/sdr.snr_to_esn0/","api/sdr.subtract_rvs/","api/sdr.tdoa_crlb/","api/sdr.threshold/","api/sdr.threshold_factor/","api/sdr.to_complex_baseband/","api/sdr.to_real_passband/","api/sdr.toa_crlb/","api/sdr.unpack/","api/sdr.upsample/","api/sdr.walsh_code/","api/sdr.wavelength/","api/sdr.zadoff_chu_sequence/","api/sequences/","api/simulation/","api/synchronization/","development/documentation/","development/formatting/","development/installation/","development/unit-tests/","examples/coherent-integration/","examples/detection/","examples/dsp/","examples/farrow-resampler/","examples/fir-filters/","examples/iir-filters/","examples/modulation/","examples/non-coherent-integration/","examples/peak-to-average-power/","examples/phase-locked-loop/","examples/psk/","examples/pulse-shapes/","examples/synchronization/","","release-notes/v0.0/","release-notes/versioning/"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.intersphinx":1,"sphinx_last_updated_by_git":1},"indexentries":{"module":[[3,"module-sdr",false]],"sdr":[[3,"module-sdr",false]]},"objects":{"":[[3,0,0,1,"sdr",""]],"sdr":[[10,1,1,"","AGC","Implements an automatic gain controller (AGC)."],[19,1,1,"","AdditiveScrambler","Implements an additive scrambler."],[24,1,1,"","BinaryErasureChannel","Implements a binary erasure channel (BEC)."],[32,1,1,"","BinarySymmetricChannel","Implements a binary symmetric channel (BSC)."],[40,1,1,"","BlockInterleaver","Implements a block interleaver."],[42,1,1,"","CPM","Implements continuous-phase modulation (CPM)."],[56,1,1,"","Channel","A base class for wireless channels."],[62,1,1,"","Channelizer","Implements a polyphase channelizer FIR filter."],[67,1,1,"","ClosedLoopPLL","A class that defines the performance of a closed-loop PLL."],[84,1,1,"","Decimator","Implements a polyphase decimating FIR filter."],[88,1,1,"","Differentiator","Implements a differentiator FIR filter."],[90,1,1,"","DiscreteMemorylessChannel","Implements a discrete memoryless channel (DMC)."],[96,1,1,"","EnergyDetector","Implements an energy detector."],[101,1,1,"","ErrorRate","A class for measuring bit error rates (BER) or symbol error rates (SER)."],[108,1,1,"","FIR","Implements a finite impulse response (FIR) filter."],[125,1,1,"","FLFSR","Implements a Fibonacci linear-feedback shift register (LFSR)."],[139,1,1,"","FarrowResampler","Implements a piecewise polynomial Farrow arbitrary resampler."],[149,1,1,"","FractionalDelay","Implements a fractional delay FIR filter."],[151,1,1,"","GLFSR","Implements a Galois linear-feedback shift register (LFSR)."],[164,1,1,"","IIR","Implements an infinite impulse response (IIR) filter."],[181,1,1,"","Integrator","Implements an integrator IIR filter."],[183,1,1,"","Interleaver","Implements an arbitrary interleaver."],[190,1,1,"","Interpolator","Implements a polyphase interpolating FIR filter."],[193,1,1,"","LeakyIntegrator","Implements a leaky integrator IIR filter."],[195,1,1,"","LinearModulation","Implements linear phase/amplitude modulation with arbitrary symbol mapping."],[211,1,1,"","LoopFilter","Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."],[220,1,1,"","MLPED","Implements a maximum-likelihood phase error detector (ML-PED)."],[228,1,1,"","MSK","Implements minimum-shift keying (MSK) modulation and demodulation."],[230,1,1,"","MovingAverager","Implements a moving average FIR filter."],[232,1,1,"","NCO","Implements a numerically controlled oscillator (NCO)."],[240,1,1,"","OQPSK","Implements offset quadrature phase-shift keying (OQPSK) modulation and demodulation."],[242,1,1,"","PED","Implements a heuristic phase error detector (PED)."],[248,1,1,"","PSK","Implements phase-shift keying (PSK) modulation and demodulation."],[254,1,1,"","PiMPSK","Implements $pi/M$ phase-shift keying ($pi/M$ PSK) modulation and demodulation."],[256,1,1,"","PolyphaseFIR","Implements a generic polyphase FIR filter."],[271,6,1,"","Q","Computes the CCDF of the standard normal distribution $mathcal{N}(0, 1)$.."],[272,6,1,"","Qinv","Computes the inverse CCDF of the standard normal distribution $mathcal{N}(0, 1)$."],[273,1,1,"","ReplicaCorrelator","Implements an clairvoyant replica-correlator detector."],[278,1,1,"","Resampler","Implements a polyphase rational resampling FIR filter."],[282,6,1,"","add_iid_rvs","Numerically calculates the distribution of the sum of $n$ i.i.d. random variables $X_i$."],[283,6,1,"","add_rvs","Numerically calculates the distribution of the sum of two independent random variables $X$ and $Y$."],[284,6,1,"","albersheim","Estimates the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$."],[285,6,1,"","average_power","Measures the average power of a time-domain signal $x[n]$."],[286,6,1,"","awgn","Adds additive white Gaussian noise (AWGN) to the time-domain signal $x[n]$."],[287,6,1,"","awgn_capacity","Calculates the capacity of an additive white Gaussian noise (AWGN) channel."],[288,6,1,"","bandpass_fir","Designs a bandpass FIR filter impulse response $h[n]$ using the window method."],[289,6,1,"","bandstop_fir","Designs a bandstop FIR filter impulse response $h[n]$ using the window method."],[290,6,1,"","barker_code","Generates the Barker code/sequence of length $n$."],[291,6,1,"","bec","Passes the binary input sequence $x$ through a binary erasure channel (BEC)."],[292,6,1,"","bec_capacity","Calculates the capacity of a binary erasure channel (BEC)."],[293,6,1,"","berlekamp_massey","Finds the minimal polynomial $c(x)$ that produces the linear recurrent sequence $y$."],[294,6,1,"","biawgn_capacity","Calculates the capacity of a binary-input additive white Gaussian noise (BI-AWGN) channel."],[295,6,1,"","binary_code","Generates a binary code of length $n = 2^m$."],[296,6,1,"","bsc","Passes the binary input sequence $x$ through a binary symmetric channel (BSC)."],[297,6,1,"","bsc_capacity","Calculates the capacity of a binary symmetric channel (BSC)."],[298,6,1,"","coherent_gain","Computes the SNR improvement by coherent integration."],[299,6,1,"","coherent_gain_loss","Computes the coherent gain loss (CGL) given a time or frequency offset."],[300,6,1,"","composite_snr","Calculates the signal-to-noise ratio (SNR) of the product of two signals."],[301,6,1,"","crest_factor","Measures the crest factor of a time-domain signal $x[n]$."],[302,6,1,"","db","Converts from linear units to decibels."],[303,6,1,"","diff_decode","Differentially decodes the input data $y[k]$."],[304,6,1,"","diff_encode","Differentially encodes the input data $x[k]$."],[305,6,1,"","dmc","Passes the input sequence $x$ through a discrete memoryless channel (DMC)."],[306,6,1,"","downsample","Downsamples the time-domain signal $x[n]$ by the factor $r$, by discarding $r-1$ samples every $r$ samples."],[307,6,1,"","ebn0_to_esn0","Converts from $E_b/N_0$ to $E_s/N_0$."],[308,6,1,"","ebn0_to_snr","Converts from $E_b/N_0$ to $S/N$."],[309,6,1,"","energy","Measures the energy of a time-domain signal $x[n]$."],[310,6,1,"","esn0_to_ebn0","Converts from $E_s/N_0$ to $E_b/N_0$."],[311,6,1,"","esn0_to_snr","Converts from $E_s/N_0$ to $S/N$."],[312,6,1,"","euclidean","Measures the Euclidean distance between two signals $x[n]$ and $y[n]$."],[313,6,1,"","evm","Measures the error-vector magnitude (EVM) of the complex symbols $hat{x}[k]$."],[314,6,1,"","fdoa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on frequency difference of arrival (FDOA) estimation."],[315,6,1,"","foa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on frequency of arrival (FOA) estimation."],[316,6,1,"","fractional_delay_fir","Designs a fractional delay FIR filter impulse response $h[n]$ using the Kaiser window method."],[317,6,1,"","free_space_path_loss","Calculates the free-space path loss (FSPL) in dB."],[318,6,1,"","frequency_offset","Applies a frequency and phase offset to the time-domain signal $x[n]$."],[319,6,1,"","gaussian","Returns a Gaussian pulse shape."],[320,6,1,"","gold_code","Generates the Gold code/sequence of length $n = 2^m - 1$."],[321,6,1,"","gray_code","Generates a Gray code of length $n = 2^m$."],[322,6,1,"","h0","Computes the statistical distribution under the null hypothesis $mathcal{H}_0$."],[323,6,1,"","h1","Computes the statistical distribution under the alternative hypothesis $mathcal{H}_1$."],[324,6,1,"","hadamard_code","Generates the Hadamard code/sequence of length $n = 2^m$."],[325,6,1,"","half_sine","Returns a half-sine pulse shape."],[326,6,1,"","hamming","Measures the Hamming distance between two signals $x[n]$ and $y[n]$."],[327,6,1,"","hexdump","Returns a hexdump of the specified data."],[328,6,1,"","highpass_fir","Designs a highpass FIR filter impulse response $h[n]$ using the window method."],[329,6,1,"","iq_imbalance","Applies IQ imbalance to the complex time-domain signal $x[n]$."],[330,6,1,"","is_preferred_pair","Determines if two primitive polynomials generate preferred pair $m$-sequences."],[331,6,1,"","kasami_code","Generates the Kasami code/sequence of length $n = 2^m - 1$."],[332,6,1,"","linear","Converts from decibels to linear units."],[333,6,1,"","lowpass_fir","Designs a lowpass FIR filter impulse response $h[n]$ using the window method."],[334,6,1,"","m_sequence","Generates a maximum-length sequence ($m$-sequence) from a Fibonacci linear feedback shift register (LFSR)."],[335,6,1,"","max_frequency_offset","Computes the maximum frequency offset that produces at most the provided coherent gain loss (CGL)."],[336,6,1,"","max_iid_rvs","Numerically calculates the distribution of the maximum of $n$ i.i.d. random variables $X_i$."],[337,6,1,"","max_integration_time","Computes the maximum integration time that produces at most the provided coherent gain loss (CGL)."],[338,6,1,"","max_rvs","Numerically calculates the distribution of the maximum of two independent random variables $X$ and $Y$."],[339,6,1,"","min_iid_rvs","Numerically calculates the distribution of the minimum of $n$ i.i.d. random variables $X_i$."],[340,6,1,"","min_rvs","Numerically calculates the distribution of the minimum of two independent random variables $X$ and $Y$."],[341,6,1,"","min_snr","Computes the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$."],[342,6,1,"","mix","Mixes a time-domain signal with a complex exponential or real sinusoid."],[343,6,1,"","multiply_rvs","Numerically calculates the distribution of the product of two independent random variables $X$ and $Y$."],[344,6,1,"","multirate_fir","Designs a multirate FIR filter impulse response $h[n]$ using the Kaiser window method."],[345,6,1,"","non_coherent_gain","Computes the SNR improvement by non-coherently integrating $N_{nc}$ samples."],[346,6,1,"","p_d","Computes the theoretical probability of detection $P_d$."],[347,6,1,"","p_fa","Computes the theoretical probability of false alarm $P_{fa}$."],[348,6,1,"","pack","Packs a binary array into an array with multiple bits per element."],[349,6,1,"","papr","Measures the peak-to-average power ratio (PAPR) of a time-domain signal $x[n]$."],[350,6,1,"","parabolic_antenna","Calculates the gain $G$ and beamwidth $theta$ of a parabolic reflector."],[351,6,1,"","peak_power","Measures the peak power of a time-domain signal $x[n]$."],[352,6,1,"","peak_voltage","Measures the peak voltage of a time-domain signal $x[n]$."],[353,6,1,"","peebles","Estimates the non-coherent integration gain for a given probability of detection $P_d$ and false alarm $P_{fa}$."],[381,6,1,"","polyphase_decompose","Decomposes the prototype filter taps $h[n]$ into the polyphase matrix $h_i[n]$ with $B$ phases."],[382,6,1,"","power","Measures the instantaneous power of a time-domain signal $x[n]$."],[383,6,1,"","preferred_pairs","Generates primitive polynomials of degree $m$ that produce preferred pair $m$-sequences."],[384,6,1,"","raised_cosine","Returns a raised cosine (RC) pulse shape."],[385,6,1,"","rectangular","Returns a rectangular pulse shape."],[386,6,1,"","rms_bandwidth","Measures the RMS bandwidth $B_{text{rms}}$ of the signal $x[n]$."],[387,6,1,"","rms_integration_time","Measures the RMS integration time $T_{text{rms}}$ of the signal $x[n]$."],[388,6,1,"","rms_voltage","Measures the root-mean-square (RMS) voltage of a time-domain signal $x[n]$."],[389,6,1,"","root_raised_cosine","Returns a square root raised cosine (SRRC) pulse shape."],[390,6,1,"","sample_rate_offset","Applies a sample rate offset to the time-domain signal $x[n]$."],[391,6,1,"","shannon_limit_ebn0","Calculates the Shannon limit on the bit energy-to-noise power spectral density ratio $E_b/N_0$ in the AWGN channel."],[392,6,1,"","shannon_limit_snr","Calculates the Shannon limit on the signal-to-noise ratio $S/N$ in the AWGN channel."],[393,6,1,"","shnidman","Estimates the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$ for the Swerling target model."],[394,6,1,"","sinusoid","Generates a complex exponential or real sinusoid."],[395,6,1,"","snr_to_ebn0","Converts from $S/N$ to $E_b/N_0$."],[396,6,1,"","snr_to_esn0","Converts from $S/N$ to $E_s/N_0$."],[397,6,1,"","subtract_rvs","Numerically calculates the distribution of the difference of two independent random variables $X$ and $Y$."],[398,6,1,"","tdoa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on time difference of arrival (TDOA) estimation."],[399,6,1,"","threshold","Computes the theoretical detection threshold $gamma$."],[400,6,1,"","threshold_factor","Computes the theoretical detection threshold factor $alpha$."],[401,6,1,"","to_complex_baseband","Converts a real passband signal to a complex baseband signal."],[402,6,1,"","to_real_passband","Converts a complex baseband signal to a real passband signal."],[403,6,1,"","toa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on time of arrival (TOA) estimation."],[404,6,1,"","unpack","Unpacks an array with multiple bits per element into a binary array."],[405,6,1,"","upsample","Upsamples the time-domain signal $x[n]$ by the factor $r$, by inserting $r-1$ zeros between each sample."],[406,6,1,"","walsh_code","Generates the Walsh code/sequence of length $n = 2^m$."],[407,6,1,"","wavelength","Calculates the wavelength $lambda$ of an electromagnetic wave with frequency $f$."],[408,6,1,"","zadoff_chu_sequence","Generates the root-$u$ Zadoff-Chu sequence of length $N$."]],"sdr.AGC":[[11,2,1,"","__call__","Performs automatic gain control on the input signal."],[12,2,1,"","__init__","Creates an automatic gain controller (AGC)."],[13,4,1,"","attack","(Settable) The attack rate $alpha$."],[14,4,1,"","decay","(Settable) The decay rate $beta$."],[15,4,1,"","gain","The current linear gain."],[16,4,1,"","reference","(Settable) The desired output magnitude."],[17,2,1,"","reset","Resets the AGC gain. Only useful when using streaming mode."],[18,4,1,"","streaming","Indicates whether the AGC is in streaming mode."]],"sdr.AGC.__call__":[[11,3,2,"p-x","x","The input signal $x[n]$."]],"sdr.AGC.__init__":[[12,3,2,"p-attack","attack","The attack rate $alpha$."],[12,3,2,"p-decay","decay","The decay rate $beta$."],[12,3,2,"p-reference","reference","The desired output magnitude."],[12,3,2,"p-streaming","streaming","Indicates whether the AGC operates in streaming mode."]],"sdr.AGC.reset":[[17,3,2,"p-gain","gain","The initial linear gain of the AGC."]],"sdr.AdditiveScrambler":[[20,2,1,"","__init__","Creates an additive scrambler."],[21,2,1,"","descramble","Descrambles the binary input sequence $y[n]$."],[22,4,1,"","lfsr","The Fibonacci LFSR used for scrambling."],[23,2,1,"","scramble","Scrambles the binary input sequence $x[n]$."]],"sdr.AdditiveScrambler.__init__":[[20,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[20,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[20,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.AdditiveScrambler.descramble":[[21,3,2,"p-y","y","The binary input sequence $y[n]$."]],"sdr.AdditiveScrambler.scramble":[[23,3,2,"p-x","x","The binary input sequence $x[n]$."]],"sdr.BinaryErasureChannel":[[25,4,1,"","X","The input alphabet $mathcal{X} = {0, 1}$ of the BEC channel."],[26,4,1,"","Y","The output alphabet $mathcal{Y} = {0, 1, e}$ of the BEC channel. Erasures $e$ are represented by -1."],[27,2,1,"","__call__","Passes the binary input sequence $x$ through the channel."],[28,2,1,"","__init__","Creates a new binary erasure channel (BEC)."],[29,2,1,"","capacities","Calculates the capacity of BEC channels."],[30,4,1,"","capacity","The capacity $C$ of the instantiated channel in bits/channel use."],[31,4,1,"","p","The erasure probability $p$ of the BEC channel."]],"sdr.BinaryErasureChannel.__call__":[[27,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X} = {0, 1}$."]],"sdr.BinaryErasureChannel.__init__":[[28,3,2,"p-p","p","The erasure probability $p$ of the BEC channel."],[28,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.BinaryErasureChannel.capacities":[[29,3,2,"","p","Calculates the capacity of BEC channels."]],"sdr.BinarySymmetricChannel":[[33,4,1,"","X","The input alphabet $mathcal{X} = {0, 1}$ of the BSC channel."],[34,4,1,"","Y","The output alphabet $mathcal{Y} = {0, 1}$ of the BSC channel."],[35,2,1,"","__call__","Passes the binary input sequence $x$ through the channel."],[36,2,1,"","__init__","Creates a new binary symmetric channel (BSC)."],[37,2,1,"","capacities","Calculates the capacity of BSC channels."],[38,4,1,"","capacity","The capacity $C$ of the instantiated channel in bits/channel use."],[39,4,1,"","p","The transition probability $p$ of the BSC channel."]],"sdr.BinarySymmetricChannel.__call__":[[35,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X} = {0, 1}$."]],"sdr.BinarySymmetricChannel.__init__":[[36,3,2,"p-p","p","The transition probability $p$ of the BSC channel."],[36,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.BinarySymmetricChannel.capacities":[[37,3,2,"","p","Calculates the capacity of BSC channels."]],"sdr.BlockInterleaver":[[41,2,1,"","__init__","Creates a $R times C$ block interleaver."]],"sdr.BlockInterleaver.__init__":[[41,3,2,"p-cols","cols","The number of columns $C$ in the interleaver."],[41,3,2,"p-rows","rows","The number of rows $R$ in the interleaver."]],"sdr.CPM":[[43,2,1,"","__init__","Creates a new continuous-phase modulation object."],[44,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[45,4,1,"","bps","The number of coded bits per symbol $k = log_2 M$."],[46,2,1,"","demodulate","Demodulates the pulse-shaped complex samples into decimal symbol decisions."],[47,4,1,"","index","The modulation index $h$."],[48,2,1,"","modulate","Modulates the decimal symbols $s[k]$ into pulse-shaped complex samples $x[n]$."],[49,4,1,"","order","The modulation order $M = 2^k$."],[50,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[51,4,1,"","pulse_shape","The pulse shape $h[n]$ of the instantaneous frequency of the signal."],[52,4,1,"","rx_filter","The receive decimating matched filter. The filter coefficients are matched to the pulse shape $h[-n]^*$."],[53,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[54,4,1,"","sps","The number of samples per symbol $f_s / f_{sym}$."],[55,4,1,"","tx_filter","The transmit interpolating pulse shaping filter. The filter coefficients are the pulse shape $h[n]$."]],"sdr.CPM.__init__":[[43,3,2,"p-index","index","The modulation index $h$."],[43,3,2,"p-order","order","The modulation order $M = 2^k$."],[43,3,2,"p-phase_offset","phase_offset","A phase offset $phi$ in degrees."],[43,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the instantaneous frequency of the signal."],[43,3,2,"p-span","span","The span of the pulse shape in symbols."],[43,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[43,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.CPM.ber":[[44,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.CPM.demodulate":[[46,3,2,"p-x_tilde","x_tilde","The received pulse-shaped complex samples $tilde{x}[n]$ to demodulate, with sps samples per symbol and length sps * s_hat.size + pulse_shape.size - 1."]],"sdr.CPM.modulate":[[48,3,2,"p-s","s","The decimal symbols $s[k]$ to modulate, $0$ to $M-1$."]],"sdr.CPM.ser":[[53,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.Channel":[[57,2,1,"","__call__","Passes the input sequence $x$ through the channel."],[58,2,1,"","__init__","Creates a new channel."],[59,2,1,"","capacities","Computes the channel capacity given the channel configuration."],[60,4,1,"","capacity","The channel capacity $C$ in bits/2D of the instantiated channel."],[61,2,1,"","reset","Resets the channel with a new seed."]],"sdr.Channel.__call__":[[57,3,2,"p-x","x","The input sequence $x$."]],"sdr.Channel.__init__":[[58,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.Channel.reset":[[61,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.Channelizer":[[63,2,1,"","__call__","Channelizes the input signal $x[n]$ with the polyphase FIR filter."],[64,2,1,"","__init__","Creates a polyphase FIR channelizing filter."],[65,4,1,"","channels","The number of channels $C$."],[66,4,1,"","method","The method used to design the polyphase channelizing filter."]],"sdr.Channelizer.__call__":[[63,3,2,"p-mode","mode","The non-streaming convolution mode."],[63,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.Channelizer.__init__":[[64,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[64,3,2,"p-channels","channels","The number of channels $C$."],[64,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[64,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[64,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.ClosedLoopPLL":[[68,4,1,"","Bn","The noise bandwidth $B_n$ of the PLL in Hz."],[69,4,1,"","BnT","The normalized noise bandwidth $B_n T$ of the PLL."],[70,4,1,"","K0","The NCO gain $K_0$."],[71,4,1,"","K1","The proportional gain $K_1$ of the loop filter."],[72,4,1,"","K2","The integral gain $K_2$ of the loop filter."],[73,4,1,"","Kp","The phase error detector (PED) gain $K_p$."],[74,2,1,"","__init__","Creates a closed-loop PLL analysis object."],[75,2,1,"","frequency_lock_time","Returns the frequency lock time of the PLL."],[76,4,1,"","iir","The IIR filter that represents the closed-loop transfer function of the PLL."],[77,2,1,"","lock_time","Returns the lock time of the PLL."],[78,4,1,"","omega_3dB","The 3-dB bandwidth $omega_{3textrm{dB}}$ of the PLL in radians/s."],[79,4,1,"","omega_n","The natural frequency $omega_n$ of the PLL in radians/s."],[80,2,1,"","phase_error_variance","Returns the variance of the phase error of the PLL in steady state."],[81,2,1,"","phase_lock_time","Returns the phase lock time of the PLL."],[82,4,1,"","sample_rate","The sample rate $f_s$ of the PLL in samples/s."],[83,4,1,"","zeta","The damping factor $zeta$ of the PLL."]],"sdr.ClosedLoopPLL.__init__":[[74,3,2,"p-K0","K0","The NCO gain $K_0$."],[74,3,2,"p-Kp","Kp","The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."],[74,3,2,"p-damping_factor","damping_factor","The damping factor $zeta$ of the loop filter."],[74,3,2,"p-noise_bandwidth","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."],[74,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the PLL in Hz."]],"sdr.ClosedLoopPLL.frequency_lock_time":[[75,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ of the input signal in Hz."]],"sdr.ClosedLoopPLL.lock_time":[[77,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ of the input signal in Hz."]],"sdr.ClosedLoopPLL.phase_error_variance":[[80,3,2,"p-cn0","cn0","The carrier-to-noise density ratio $C/N_0$ of the input signal in dB-Hz."]],"sdr.Decimator":[[85,2,1,"","__init__","Creates a polyphase FIR decimating filter."],[86,4,1,"","method","The method used to design the polyphase decimating filter."],[87,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."]],"sdr.Decimator.__init__":[[85,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[85,3,2,"p-decimation","decimation","The decimation rate $Q$."],[85,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[85,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[85,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.Differentiator":[[89,2,1,"","__init__","Creates a differentiator FIR filter."]],"sdr.Differentiator.__init__":[[89,3,2,"p-order","order","The order of the FIR differentiator $N$."],[89,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[89,3,2,"p-window","window","The SciPy window definition."]],"sdr.DiscreteMemorylessChannel":[[91,4,1,"","P","The transition probability matrix $P$ of the DMC channel."],[92,4,1,"","X","The input alphabet $mathcal{X}$ of the DMC channel."],[93,4,1,"","Y","The output alphabet $mathcal{Y}$ of the DMC channel."],[94,2,1,"","__call__","Passes the input sequence $x$ through the channel."],[95,2,1,"","__init__","Creates a new discrete memoryless channel (DMC)."]],"sdr.DiscreteMemorylessChannel.__call__":[[94,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X}$."]],"sdr.DiscreteMemorylessChannel.__init__":[[95,3,2,"p-P","P","The $m times n$ transition probability matrix $P$, where $P = Pr(Y = y_j | X = x_i)$."],[95,3,2,"p-X","X","The input alphabet $mathcal{X}$ of size $m$."],[95,3,2,"p-Y","Y","The output alphabet $mathcal{Y}$ of size $n$."],[95,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.EnergyDetector":[[97,2,1,"","p_d","Computes the probability of detection $P_d$."],[98,2,1,"","p_fa","Computes the probability of false alarm $P_{fa}$."],[99,2,1,"","roc","Computes the receiver operating characteristic (ROC) curve."],[100,2,1,"","threshold","Computes the threshold $gamma'$."]],"sdr.EnergyDetector.p_d":[[97,3,2,"p-N_nc","N_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[97,3,2,"p-complex","complex","Indicates whether the signal is real or complex."],[97,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[97,3,2,"p-snr","snr","The received signal-to-noise ratio $sigma_s^2 / sigma^2$ in dB."]],"sdr.EnergyDetector.p_fa":[[98,3,2,"p-N_nc","N_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[98,3,2,"p-complex","complex","Indicates whether the signal is complex."],[98,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."],[98,3,2,"p-threshold","threshold","The threshold $gamma'$."]],"sdr.EnergyDetector.roc":[[99,3,2,"p-N_nc","N_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[99,3,2,"p-complex","complex","Indicates whether the signal is complex."],[99,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[99,3,2,"p-snr","snr","The received signal-to-noise ratio $sigma_s^2 / sigma^2$ in dB."]],"sdr.EnergyDetector.threshold":[[100,3,2,"p-N_nc","N_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[100,3,2,"p-complex","complex","Indicates whether the signal is complex."],[100,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[100,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."]],"sdr.ErrorRate":[[102,2,1,"","__init__","Creates a new error rate tabulation object."],[103,2,1,"","add","Measures the number of bit or symbol errors at the given signal-to-noise ratio (SNR)."],[104,2,1,"","counts","Returns the number of counts at the specified signal-to-noise ratio (SNR)."],[105,2,1,"","error_rate","Returns the error rate at the specified signal-to-noise ratio (SNR)."],[106,2,1,"","error_rates","Returns all signal-to-noise ratios (SNRs) in ascending order and their corresponding error rates."],[107,2,1,"","errors","Returns the number of errors at the specified signal-to-noise ratio (SNR)."]],"sdr.ErrorRate.add":[[103,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."],[103,3,2,"p-x","x","The transmitted bits or symbols $x[k]$."],[103,3,2,"p-x_hat","x_hat","The received bits or symbols $hat{x}[k]$."]],"sdr.ErrorRate.counts":[[104,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.ErrorRate.error_rate":[[105,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.ErrorRate.errors":[[107,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.FIR":[[109,2,1,"","__call__","Filters the input signal $x[n]$ with the FIR filter."],[110,2,1,"","__init__","Creates an FIR filter."],[111,2,1,"","__len__","Returns the filter length $N + 1$."],[112,4,1,"","delay","The delay of the FIR filter $d = lfloor frac{N + 1}{2} rfloor$ in samples."],[113,2,1,"","flush","Flushes the filter state by passing zeros through the filter. Only useful when using streaming mode."],[114,2,1,"","frequency_response","Returns the frequency response $H(omega)$ of the FIR filter."],[115,2,1,"","group_delay","Returns the group delay $tau_g(omega)$ of the FIR filter."],[116,2,1,"","impulse_response","Returns the impulse response $h[n]$ of the FIR filter."],[117,2,1,"","noise_bandwidth","Returns the noise bandwidth $B_n$ of the FIR filter."],[118,4,1,"","order","The order of the FIR filter $N$."],[119,2,1,"","phase_delay","Returns the phase delay $tau_{phi}(omega)$ of the FIR filter."],[120,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[121,4,1,"","state","The filter state consisting of the previous $N$ inputs."],[122,2,1,"","step_response","Returns the step response $s[n]$ of the FIR filter."],[123,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[124,4,1,"","taps","The feedforward taps $h[n]$ with length $N + 1$."]],"sdr.FIR.__call__":[[109,3,2,"p-mode","mode","The non-streaming convolution mode."],[109,3,2,"p-x","x","The input signal $x[n]$ with length $L$."]],"sdr.FIR.__init__":[[110,3,2,"p-h","h","The feedforward coefficients $h[n]$."],[110,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.FIR.frequency_response":[[114,3,2,"p-decades","decades","Only used if freqs is an integer."],[114,3,2,"p-freqs","freqs","The frequency specification."],[114,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."],[114,3,2,"p-whole","whole","Only used if freqs is an integer."]],"sdr.FIR.group_delay":[[115,3,2,"p-N","N","The number of samples in the group delay."],[115,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.impulse_response":[[116,3,2,"p-N","N","The number of samples to return."]],"sdr.FIR.noise_bandwidth":[[117,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.phase_delay":[[119,3,2,"p-N","N","The number of samples in the phase delay."],[119,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.step_response":[[122,3,2,"p-N","N","The number of samples to return."]],"sdr.FLFSR":[[126,2,1,"","Taps","Creates a Fibonacci LFSR from its taps."],[127,2,1,"","__call__","Processes the input symbols $x[n]$ through the Fibonacci LFSR."],[128,2,1,"","__init__","Creates a new Fibonacci LFSR."],[129,4,1,"","characteristic_poly","The characteristic polynomial $c(x)$ that defines the linear recurrent sequence."],[130,4,1,"","feedback_poly","The feedback polynomial $f(x)$ that defines the feedback arithmetic."],[131,4,1,"","field","The FieldArray subclass for the finite field that defines the linear arithmetic."],[132,4,1,"","initial_state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[133,4,1,"","order","The order of the linear recurrence/linear recurrent sequence."],[134,2,1,"","reset","Resets the Fibonacci LFSR state to the specified state."],[135,4,1,"","state","The current state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[136,2,1,"","step","Produces the next steps output symbols."],[137,4,1,"","taps","The shift register taps $T = [c_{n-1}, c_{n-2}, dots, c_1, c_0]$."],[138,2,1,"","to_galois_lfsr","Converts the Fibonacci LFSR to a Galois LFSR that produces the same output."]],"sdr.FLFSR.Taps":[[126,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[126,3,2,"p-taps","taps","The shift register taps $T = [c_{n-1}, c_{n-2}, dots, c_1, c_0]$."]],"sdr.FLFSR.__call__":[[127,3,2,"p-x","x","The input symbols $x[n]$."]],"sdr.FLFSR.__init__":[[128,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[128,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[128,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.FLFSR.reset":[[134,3,2,"p-state","state","The state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.FLFSR.step":[[136,3,2,"p-steps","steps","The direction and number of output symbols to produce."]],"sdr.FarrowResampler":[[140,2,1,"","__call__","Resamples the input signal $x[n]$ by the given arbitrary rate $r$."],[141,2,1,"","__init__","Creates a new Farrow arbitrary resampler."],[142,4,1,"","delay","The delay $d$ of the Farrow FIR filters in samples."],[143,2,1,"","flush","Flushes the filter state by passing zeros through the filter. Only useful when using streaming mode."],[144,4,1,"","order","The order of the piecewise polynomial."],[145,2,1,"","reset","Resets the filter state and fractional sample index."],[146,4,1,"","state","The filter state consisting of the previous $N$ inputs."],[147,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[148,4,1,"","taps","The Farrow filter taps."]],"sdr.FarrowResampler.__call__":[[140,3,2,"p-rate","rate","The resampling rate $r$."],[140,3,2,"p-x","x","The input signal $x[n] = x(n T_s)$."]],"sdr.FarrowResampler.__init__":[[141,3,2,"p-order","order","The order of the piecewise polynomial, which must be between 1 and 4."],[141,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.FarrowResampler.flush":[[143,3,2,"p-rate","rate","The resampling rate $r$."]],"sdr.FarrowResampler.reset":[[145,3,2,"p-state","state","The filter state to reset to."]],"sdr.FractionalDelay":[[150,2,1,"","__init__","Creates a fractional delay FIR filter."]],"sdr.FractionalDelay.__init__":[[150,3,2,"p-delay","delay","The fractional delay $0 le Delta n le 1$."],[150,3,2,"p-length","length","The filter length $L$."]],"sdr.GLFSR":[[152,2,1,"","Taps","Creates a Galois LFSR from its taps."],[153,2,1,"","__init__","Creates a new Galois LFSR."],[154,4,1,"","characteristic_poly","The characteristic polynomial $c(x)$ that defines the linear recurrent sequence."],[155,4,1,"","feedback_poly","The feedback polynomial $f(x)$ that defines the feedback arithmetic."],[156,4,1,"","field","The FieldArray subclass for the finite field that defines the linear arithmetic."],[157,4,1,"","initial_state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[158,4,1,"","order","The order of the linear recurrence/linear recurrent sequence."],[159,2,1,"","reset","Resets the Galois LFSR state to the specified state."],[160,4,1,"","state","The current state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[161,2,1,"","step","Produces the next steps output symbols."],[162,4,1,"","taps","The shift register taps $T = [c_0, c_1, dots, c_{n-2}, c_{n-1}]$."],[163,2,1,"","to_fibonacci_lfsr","Converts the Galois LFSR to a Fibonacci LFSR that produces the same output."]],"sdr.GLFSR.Taps":[[152,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[152,3,2,"p-taps","taps","The shift register taps $T = [c_0, c_1, dots, c_{n-2}, c_{n-1}]$."]],"sdr.GLFSR.__init__":[[153,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[153,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[153,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.GLFSR.reset":[[159,3,2,"p-state","state","The state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.GLFSR.step":[[161,3,2,"p-steps","steps","The direction and number of output symbols to produce."]],"sdr.IIR":[[165,2,1,"","ZerosPoles","Creates an IIR filter from its zeros, poles, and gain."],[166,2,1,"","__call__","Filters the input signal $x[n]$ with the IIR filter."],[167,2,1,"","__init__","Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."],[168,4,1,"","a_taps","The feedback taps $a_j$ for $j = 0,...,N$."],[169,4,1,"","b_taps","The feedforward taps $b_i$ for $i = 0,...,M$."],[170,2,1,"","frequency_response","Returns the frequency response $H(omega)$ of the IIR filter."],[171,4,1,"","gain","The gain of the IIR filter."],[172,2,1,"","impulse_response","Returns the impulse response $h[n]$ of the IIR filter."],[173,2,1,"","noise_bandwidth","Returns the noise bandwidth $B_n$ of the IIR filter."],[174,4,1,"","order","The order of the IIR filter $N$."],[175,4,1,"","poles","The poles of the IIR filter."],[176,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[177,4,1,"","state","The filter state."],[178,2,1,"","step_response","Returns the step response $s[n]$ of the IIR filter."],[179,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[180,4,1,"","zeros","The zeros of the IIR filter."]],"sdr.IIR.ZerosPoles":[[165,3,2,"p-gain","gain","The gain of the transfer function."],[165,3,2,"p-poles","poles","The poles of the transfer function."],[165,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[165,3,2,"p-zeros","zeros","The zeros of the transfer function."]],"sdr.IIR.__call__":[[166,3,2,"p-x","x","The input signal $x[n]$ with length $L$."]],"sdr.IIR.__init__":[[167,3,2,"p-a","a","The feedback coefficients $a_j$ for $j = 0,...,N$."],[167,3,2,"p-b","b","The feedforward coefficients $b_i$ for $i = 0,...,M$."],[167,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.IIR.frequency_response":[[170,3,2,"p-decades","decades","Only used if freqs is an integer."],[170,3,2,"p-freqs","freqs","The frequency specification."],[170,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."],[170,3,2,"p-whole","whole","Only used if freqs is an integer."]],"sdr.IIR.impulse_response":[[172,3,2,"p-N","N","The number of samples to return."]],"sdr.IIR.noise_bandwidth":[[173,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.IIR.step_response":[[178,3,2,"p-N","N","The number of samples to return."]],"sdr.Integrator":[[182,2,1,"","__init__","Creates an integrating IIR filter."]],"sdr.Integrator.__init__":[[182,3,2,"p-method","method","The integration method."],[182,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.Interleaver":[[184,2,1,"","__init__","Creates an arbitrary interleaver."],[185,2,1,"","__len__","The size of the interleaver."],[186,2,1,"","deinterleave","Deinterleaves the input sequence $y[n]$."],[187,2,1,"","interleave","Interleaves the input sequence $x[n]$."],[188,4,1,"","inverse_map","The deinterleaver permutation map $pi^{-1}$."],[189,4,1,"","map","The interleaver permutation map $pi$."]],"sdr.Interleaver.__init__":[[184,3,2,"p-map","map","The interleaver permutation map $pi : i mapsto j$, containing the values $[0, N)$. The $i$-th input element will be placed at the $pi(i)$-th output position."]],"sdr.Interleaver.deinterleave":[[186,3,2,"p-y","y","The input sequence $y[n]$."]],"sdr.Interleaver.interleave":[[187,3,2,"p-x","x","The input sequence $x[n]$."]],"sdr.Interpolator":[[191,2,1,"","__init__","Creates a polyphase FIR interpolating filter."],[192,4,1,"","method","The method used to design the polyphase interpolating filter."]],"sdr.Interpolator.__init__":[[191,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[191,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[191,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[191,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[191,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.LeakyIntegrator":[[194,2,1,"","__init__","Creates a leaky integrator IIR filter."]],"sdr.LeakyIntegrator.__init__":[[194,3,2,"p-alpha","alpha","The leaky factor $alpha$."],[194,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.LinearModulation":[[196,2,1,"","__init__","Creates a new linear phase/amplitude modulation object."],[197,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[198,4,1,"","bps","The number of coded bits per symbol $k = log_2 M$."],[199,2,1,"","decide_symbols","Converts the received complex symbols into MLE symbol decisions."],[200,2,1,"","demodulate","Demodulates the pulse-shaped complex samples."],[201,2,1,"","map_symbols","Converts the decimal symbols into complex symbols."],[202,2,1,"","modulate","Modulates the decimal symbols into pulse-shaped complex samples."],[203,4,1,"","order","The modulation order $M = 2^k$."],[204,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[205,4,1,"","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[206,4,1,"","rx_filter","The receive decimating matched filter."],[207,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[208,4,1,"","sps","The number of samples per symbol $f_s / f_{sym}$."],[209,4,1,"","symbol_map","The symbol map ${0, dots, M-1} mapsto mathbb{C}$."],[210,4,1,"","tx_filter","The transmit interpolating pulse shaping filter."]],"sdr.LinearModulation.__init__":[[196,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[196,3,2,"p-phase_offset","phase_offset","A phase offset $phi$ in degrees to apply to symbol_map."],[196,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[196,3,2,"p-span","span","The span of the pulse shape in symbols."],[196,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[196,3,2,"p-symbol_map","symbol_map","The symbol mapping ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.LinearModulation.ber":[[197,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.LinearModulation.decide_symbols":[[199,3,2,"p-a_tilde","a_tilde","The received complex symbols $tilde{a}[k]$."]],"sdr.LinearModulation.demodulate":[[200,3,2,"p-x_tilde","x_tilde","The received pulse-shaped complex samples $tilde{x}[n]$ to demodulate, with sps samples per symbol and length sps * s_hat.size + pulse_shape.size - 1."]],"sdr.LinearModulation.map_symbols":[[201,3,2,"p-s","s","The decimal symbols $s[k]$ to map, $0$ to $M-1$."]],"sdr.LinearModulation.modulate":[[202,3,2,"p-s","s","The decimal symbols $s[k]$ to modulate, $0$ to $M-1$."]],"sdr.LinearModulation.ser":[[207,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.LoopFilter":[[212,2,1,"","__call__","Filters the input signal $x[n]$."],[213,2,1,"","__init__","Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."],[214,4,1,"","damping_factor","The damping factor $zeta$ of the loop filter."],[215,4,1,"","iir","The underlying IIR filter used to implement the loop filter."],[216,4,1,"","integral_gain","The integral gain $K_2$ of the loop filter."],[217,4,1,"","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter."],[218,4,1,"","proportional_gain","The proportional gain $K_1$ of the loop filter."],[219,2,1,"","reset","Resets the loop filter."]],"sdr.LoopFilter.__call__":[[212,3,2,"p-x","x","The input signal $x[n]$."]],"sdr.LoopFilter.__init__":[[213,3,2,"p-K0","K0","The NCO gain $K_0$."],[213,3,2,"p-Kp","Kp","The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."],[213,3,2,"p-damping_factor","damping_factor","The damping factor $zeta$ of the loop filter."],[213,3,2,"p-noise_bandwidth","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]],"sdr.MLPED":[[221,4,1,"","A_received","(Settable) The received signal RMS amplitude $A_{rx,rms}$."],[222,4,1,"","A_reference","(Settable) The reference signal RMS amplitude $A_{ref,rms}$."],[223,2,1,"","__call__","Detects the phase error."],[224,2,1,"","__init__","Initializes the ML-PED."],[225,2,1,"","data_aided_error","Simulates the average phase error of the data-aided PED using the specified modulation scheme."],[226,2,1,"","decision_directed_error","Simulates the average phase error of the decision-directed PED using the specified modulation scheme."],[227,4,1,"","gain","The gain of the phase error detector $K_p$."]],"sdr.MLPED.__call__":[[223,3,2,"p-received","received","The received complex symbols $tilde{a}[k]$."],[223,3,2,"p-reference","reference","The reference complex symbols, either the known transmitted complex symbols $a[k]$ or the complex symbols decisions $hat{a}[k]$."]],"sdr.MLPED.__init__":[[224,3,2,"p-A_received","A_received","The received signal RMS amplitude $A_{rx,rms}$."],[224,3,2,"p-A_reference","A_reference","The reference signal RMS amplitude $A_{ref,rms}$."]],"sdr.MLPED.data_aided_error":[[225,3,2,"p-modem","modem","The linear modulation scheme."],[225,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.MLPED.decision_directed_error":[[226,3,2,"p-modem","modem","The linear modulation scheme."],[226,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.MSK":[[229,2,1,"","__init__","Creates a new MSK object."]],"sdr.MSK.__init__":[[229,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[229,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[229,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.MovingAverager":[[231,2,1,"","__init__","Creates a moving average FIR filter."]],"sdr.MovingAverager.__init__":[[231,3,2,"p-length","length","The length of the moving average filter $L$."],[231,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.NCO":[[233,2,1,"","__call__","Steps the NCO with variable frequency and/or phase signals."],[234,2,1,"","__init__","Creates a numerically controlled oscillator (NCO)."],[235,4,1,"","gain","(Settable) The NCO gain $K_0$."],[236,4,1,"","increment","(Settable) The constant phase accumulation $omega$ of the NCO in radians/sample."],[237,4,1,"","offset","(Settable) The absolute phase offset $theta$ of the NCO in radians."],[238,2,1,"","reset","Resets the NCO."],[239,2,1,"","step","Steps the NCO forward by $N$ samples."]],"sdr.NCO.__call__":[[233,5,2,"","_ScalarType_co","Steps the NCO with variable frequency and/or phase signals."],[233,3,2,"p-freq","freq","The variable frequency signal $f[n]$ in radians/sample."],[233,3,2,"p-output","output","The format of the output signal $y[n]$."],[233,3,2,"p-phase","phase","The variable phase signal $p[n]$ in radians."]],"sdr.NCO.__init__":[[234,3,2,"p-gain","gain","The NCO gain $K_0$."],[234,3,2,"p-increment","increment","The constant accumulation $omega$ of the NCO in radians/sample."],[234,3,2,"p-offset","offset","The absolute offset $theta$ of the NCO in radians."]],"sdr.NCO.step":[[239,3,2,"p-N","N","The number of samples $N$ to step the NCO forward."]],"sdr.OQPSK":[[241,2,1,"","__init__","Creates a new OQPSK object."]],"sdr.OQPSK.__init__":[[241,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[241,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[241,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[241,3,2,"p-span","span","The span of the pulse shape in symbols."],[241,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[241,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PED":[[243,2,1,"","__call__","Detects the phase error."],[244,2,1,"","__init__","Initializes the PED."],[245,2,1,"","data_aided_error","Simulates the average phase error of the data-aided PED using the specified modulation scheme."],[246,2,1,"","decision_directed_error","Simulates the average phase error of the decision-directed PED using the specified modulation scheme."],[247,4,1,"","gain","The gain of the phase error detector $K_p$."]],"sdr.PED.__call__":[[243,3,2,"p-received","received","The received complex symbols $tilde{a}[k]$."],[243,3,2,"p-reference","reference","The reference complex symbols, either the known transmitted complex symbols $a[k]$ or the complex symbols decisions $hat{a}[k]$."]],"sdr.PED.data_aided_error":[[245,3,2,"p-modem","modem","The linear modulation scheme."],[245,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.PED.decision_directed_error":[[246,3,2,"p-modem","modem","The linear modulation scheme."],[246,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.PSK":[[249,2,1,"","__init__","Creates a new PSK object."],[250,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[251,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[252,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[253,4,1,"","symbol_map","The symbol map ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.PSK.__init__":[[249,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[249,3,2,"p-order","order","The modulation order $M = 2^k$, where $k ge 1$ is the coded bits per symbol."],[249,3,2,"p-phase_offset","phase_offset","The phase offset $phi$ in degrees."],[249,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[249,3,2,"p-span","span","The span of the pulse shape in symbols."],[249,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[249,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PSK.ber":[[250,3,2,"p-diff_encoded","diff_encoded","Indicates whether the input symbols were differentially encoded."],[250,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.PSK.ser":[[252,3,2,"p-diff_encoded","diff_encoded","Indicates whether the input symbols were differentially encoded."],[252,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.PiMPSK":[[255,2,1,"","__init__","Creates a new $pi/M$ PSK object."]],"sdr.PiMPSK.__init__":[[255,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[255,3,2,"p-order","order","The modulation order $M = 2^k$, where $k ge 1$ is the coded bits per symbol."],[255,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[255,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[255,3,2,"p-span","span","The span of the pulse shape in symbols."],[255,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[255,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PolyphaseFIR":[[257,2,1,"","__call__","Filters the input signal $x[n]$ with the polyphase FIR filter."],[258,2,1,"","__init__","Creates a polyphase FIR filter."],[259,4,1,"","branches","The number of polyphase branches $B$."],[260,4,1,"","decimation","The integer decimation rate $Q$."],[261,4,1,"","delay","The delay of polyphase FIR filter in samples."],[262,4,1,"","input","The input connection method."],[263,4,1,"","interpolation","The integer interpolation rate $P$."],[264,4,1,"","order","The order $N = (M + 1)B - 1$ of the FIR prototype filter $h[n]$."],[265,4,1,"","output","The output connection method."],[266,4,1,"","polyphase_order","The order $M = (N + 1)/B - 1$ of each FIR polyphase filter $h_i[n]$."],[267,4,1,"","polyphase_taps","The polyphase feedforward taps $h_i[n]$."],[268,4,1,"","rate","The fractional resampling rate $r = P/Q$. The output sample rate is $f_{s,out} = f_{s,in} cdot r$."],[269,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[270,4,1,"","taps","The prototype feedforward taps $h[n]$."]],"sdr.PolyphaseFIR.__call__":[[257,3,2,"p-mode","mode","The non-streaming convolution mode."],[257,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.PolyphaseFIR.__init__":[[258,3,2,"p-branches","branches","The number of polyphase branches $B$."],[258,3,2,"p-input","input","The input connection method."],[258,3,2,"p-output","output","The output connection method."],[258,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[258,3,2,"p-taps","taps","The prototype filter feedforward coefficients $h[n]$."]],"sdr.Q":[[271,3,2,"p-x","x","The real-valued input $x$."]],"sdr.Qinv":[[272,3,2,"p-p","p","The probability $p$ of exceeding the returned value $x$."]],"sdr.ReplicaCorrelator":[[274,2,1,"","p_d","Computes the probability of detection $P_d$."],[275,2,1,"","p_fa","Computes the probability of false alarm $P_{fa}$."],[276,2,1,"","roc","Computes the receiver operating characteristic (ROC) curve."],[277,2,1,"","threshold","Computes the threshold $gamma'$."]],"sdr.ReplicaCorrelator.p_d":[[274,3,2,"p-complex","complex","Indicates whether the signal is complex."],[274,3,2,"p-enr","enr","The received energy-to-noise ratio $mathcal{E}/sigma^2$ in dB."],[274,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."]],"sdr.ReplicaCorrelator.p_fa":[[275,3,2,"p-complex","complex","Indicates whether the signal is complex."],[275,3,2,"p-energy","energy","The received energy $mathcal{E} = sum_{i=0}^{N-1} left| s[n] right|^2$."],[275,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."],[275,3,2,"p-threshold","threshold","The threshold $gamma'$."]],"sdr.ReplicaCorrelator.roc":[[276,3,2,"p-complex","complex","Indicates whether the signal is complex."],[276,3,2,"p-enr","enr","The received energy-to-noise ratio $mathcal{E}/sigma^2$ in dB."],[276,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."]],"sdr.ReplicaCorrelator.threshold":[[277,3,2,"p-complex","complex","Indicates whether the signal is complex."],[277,3,2,"p-energy","energy","The received energy $mathcal{E} = sum_{i=0}^{N-1} left| s[n] right|^2$."],[277,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[277,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."]],"sdr.Resampler":[[279,2,1,"","__call__","Filters the input signal $x[n]$ with the polyphase FIR filter."],[280,2,1,"","__init__","Creates a polyphase FIR rational resampling filter."],[281,4,1,"","method","The method used to design the polyphase resampling filter."]],"sdr.Resampler.__call__":[[279,3,2,"p-mode","mode","The non-streaming convolution mode."],[279,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.Resampler.__init__":[[280,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[280,3,2,"p-decimation","decimation","The decimation rate $Q$."],[280,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[280,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[280,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[280,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.add_iid_rvs":[[282,3,2,"p-X","X","The distribution of the i.i.d."],[282,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[282,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.add_rvs":[[283,3,2,"p-X","X","The distribution of the random variable $X$."],[283,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[283,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.albersheim":[[284,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[284,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[284,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.average_power":[[285,3,2,"p-axis","axis","Axis or axes along which to compute the average power."],[285,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[285,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.awgn":[[286,3,2,"p-noise","noise","The noise power (variance) in linear units."],[286,3,2,"p-seed","seed","The seed for the random number generator."],[286,3,2,"p-snr","snr","The desired signal-to-noise ratio (SNR) in dB."],[286,3,2,"p-x","x","The time-domain signal $x[n]$ to which AWGN is added."]],"sdr.awgn_capacity":[[287,3,2,"p-bandwidth","bandwidth","The bandwidth $B$ of the channel in Hz."],[287,3,2,"p-snr","snr","The signal-to-noise ratio $S / N$ in dB of the channel."]],"sdr.bandpass_fir":[[288,3,2,"p-bandwidth","bandwidth","The two-sided bandwidth about $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[288,3,2,"p-center_freq","center_freq","The center frequency $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[288,3,2,"p-order","order","The filter order $N$."],[288,3,2,"p-window","window","The SciPy window definition."]],"sdr.bandstop_fir":[[289,3,2,"p-bandwidth","bandwidth","The two-sided bandwidth about $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[289,3,2,"p-center_freq","center_freq","The center frequency $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[289,3,2,"p-order","order","The filter order $N$."],[289,3,2,"p-window","window","The SciPy window definition."]],"sdr.barker_code":[[290,3,2,"p-length","length","The length $n$ of the Barker code/sequence."],[290,3,2,"p-output","output","The output format of the Barker code/sequence."]],"sdr.bec":[[291,3,2,"p-p","p","The probability $p$ of a bit erasure."],[291,3,2,"p-seed","seed","The seed for the random number generator."],[291,3,2,"p-x","x","The input sequence $x$ with $x_i in {0, 1}$."]],"sdr.bec_capacity":[[292,3,2,"p-p","p","The erasure probability $p$ of the BEC channel."]],"sdr.berlekamp_massey":[[293,3,2,"p-output","output","The output object type."],[293,3,2,"p-sequence","sequence","A linear recurrent sequence $y$ in $mathrm{GF}(p^m)$."]],"sdr.biawgn_capacity":[[294,3,2,"p-snr","snr","The signal-to-noise ratio $S / N = A^2 / sigma^2$ at the output of the channel in dB."]],"sdr.binary_code":[[295,3,2,"p-length","length","The length $n = 2^m$ of the binary code."]],"sdr.bsc":[[296,3,2,"p-p","p","The probability $p$ of a bit flip."],[296,3,2,"p-seed","seed","The seed for the random number generator."],[296,3,2,"p-x","x","The input sequence $x$ with $x_i in {0, 1}$."]],"sdr.bsc_capacity":[[297,3,2,"p-p","p","The transition probability $p$ of the BSC channel."]],"sdr.coherent_gain":[[298,3,2,"p-time_bandwidth","time_bandwidth","The time-bandwidth product $T_c B_n$ in seconds-Hz (unitless)."]],"sdr.coherent_gain_loss":[[299,3,2,"p-freq","freq","The frequency offset $Delta f$ or signal bandwidth $B_c$ in Hz."],[299,3,2,"p-time","time","The coherent integration time $T_c$ or time offset in $Delta t$ in seconds."]],"sdr.composite_snr":[[300,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1$ in dB."],[300,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2$ in dB."]],"sdr.crest_factor":[[301,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.db":[[302,3,2,"p-type","type","The type of input value or signal."],[302,3,2,"p-x","x","The input value or signal."]],"sdr.diff_decode":[[303,3,2,"p-y","y","The input encoded data $y[k]$."],[303,3,2,"p-y_prev","y_prev","The previous value of the encoded data $y[k-1]$."]],"sdr.diff_encode":[[304,3,2,"p-x","x","The input uncoded data $x[k]$."],[304,3,2,"p-y_prev","y_prev","The previous value of the output encoded data $y[k-1]$."]],"sdr.dmc":[[305,3,2,"p-P","P","The $m times n$ transition probability matrix $P$, where $P_{i,j} = Pr(Y = y_j | X = x_i)$."],[305,3,2,"p-X","X","The input alphabet $mathcal{X}$ of size $m$."],[305,3,2,"p-Y","Y","The output alphabet $mathcal{Y}$ of size $n$."],[305,3,2,"p-seed","seed","The seed for the random number generator."],[305,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X}$."]],"sdr.downsample":[[306,3,2,"p-rate","rate","The downsampling factor $r$."],[306,3,2,"p-x","x","The time-domain signal $x[n]$ with sample rate $f_s$."]],"sdr.ebn0_to_esn0":[[307,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[307,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."],[307,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."]],"sdr.ebn0_to_snr":[[308,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[308,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."],[308,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."],[308,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.energy":[[309,3,2,"p-axis","axis","Axis or axes along which to compute the energy."],[309,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[309,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.esn0_to_ebn0":[[310,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[310,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."],[310,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."]],"sdr.esn0_to_snr":[[311,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."],[311,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.euclidean":[[312,3,2,"p-axis","axis","Axis or axes along which to compute the distance."],[312,3,2,"p-x","x","The time-domain signal $x[n]$."],[312,3,2,"p-y","y","The time-domain signal $y[n]$."]],"sdr.evm":[[313,3,2,"p-norm","norm","The normalization source used in the EVM calculation."],[313,3,2,"p-output","output","The output type of the EVM calculation."],[313,3,2,"p-ref","ref","The complex reference symbols $x[k]$."],[313,3,2,"p-x_hat","x_hat","The complex symbols $hat{x}[k]$ to be measured."]],"sdr.fdoa_crlb":[[314,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[314,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[314,3,2,"p-rms_integration_time","rms_integration_time","The root-mean-square (RMS) integration time $T_{text{rms}}$ in Hz."],[314,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1 = S_1 / (N_0 B_n)$ in dB."],[314,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2 = S_2 / (N_0 B_n)$ in dB."],[314,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.foa_crlb":[[315,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[315,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[315,3,2,"p-rms_integration_time","rms_integration_time","The root-mean-square (RMS) integration time $T_{text{rms}}$ in Hz."],[315,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) of the signal $gamma = S / (N_0 B_n)$ in dB."],[315,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.fractional_delay_fir":[[316,3,2,"p-delay","delay","The fractional delay $0 le Delta n le 1$."],[316,3,2,"p-length","length","The filter length $L$."]],"sdr.free_space_path_loss":[[317,3,2,"p-distance","distance","The distance $d$ in meters between the transmitter and receiver."],[317,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.frequency_offset":[[318,3,2,"p-offset","offset","The frequency offset $Delta f_c = f_{c,text{new}} - f_{c,text{old}}$ in Hz."],[318,3,2,"p-offset_rate","offset_rate","The frequency offset rate $Delta f_c / Delta t$ in Hz/s."],[318,3,2,"p-phase","phase","The phase offset $phi$ in degrees."],[318,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[318,3,2,"p-x","x","The time-domain signal $x[n]$ to which the frequency offset is applied."]],"sdr.gaussian":[[319,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[319,3,2,"p-span","span","The length of the filter in symbols."],[319,3,2,"p-sps","sps","The number of samples per symbol."],[319,3,2,"p-time_bandwidth","time_bandwidth","The time-bandwidth product $B T_{sym}$ of the filter, where $B$ is the one-sided 3-dB bandwidth in Hz and $T_{sym}$ is the symbol time in seconds."]],"sdr.gold_code":[[320,3,2,"p-index","index","The index $i$ in $[-2, n)$ of the Gold code."],[320,3,2,"p-length","length","The length $n = 2^m - 1$ of the Gold code/sequence."],[320,3,2,"p-output","output","The output format of the Gold code/sequence."],[320,3,2,"p-poly1","poly1","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$ for the first $m$-sequence."],[320,3,2,"p-poly2","poly2","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$ for the second $m$-sequence."],[320,3,2,"p-verify","verify","Indicates whether to verify that the provided polynomials are a preferred pair using sdr.is_preferred_pair()."]],"sdr.gray_code":[[321,3,2,"p-length","length","The length $n = 2^m$ of the Gray code."]],"sdr.h0":[[322,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[322,3,2,"p-detector","detector","The detector type."],[322,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[322,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[322,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."]],"sdr.h1":[[323,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[323,3,2,"p-detector","detector","The detector type."],[323,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[323,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[323,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."],[323,3,2,"p-snr","snr","The signal-to-noise ratio $S / sigma^2$ in dB."]],"sdr.hadamard_code":[[324,3,2,"p-index","index","The index $i$ in $[0, n)$ of the Hadamard code."],[324,3,2,"p-length","length","The length $n = 2^m$ of the Hadamard code/sequence."],[324,3,2,"p-output","output","The output format of the Hadamard code/sequence."]],"sdr.half_sine":[[325,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[325,3,2,"p-span","span","The length of the filter in symbols."],[325,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.hamming":[[326,3,2,"p-axis","axis","Axis or axes along which to compute the distance."],[326,3,2,"p-x","x","The time-domain signal $x[n]$."],[326,3,2,"p-y","y","The time-domain signal $y[n]$."]],"sdr.hexdump":[[327,3,2,"p-data","data","The data to display."],[327,3,2,"p-width","width","The number of bytes per line."]],"sdr.highpass_fir":[[328,3,2,"p-cutoff_freq","cutoff_freq","The cutoff frequency $f_c$, normalized to the Nyquist frequency $f_s / 2$."],[328,3,2,"p-order","order","The filter order $N$."],[328,3,2,"p-window","window","The SciPy window definition."]],"sdr.iq_imbalance":[[329,3,2,"p-amplitude","amplitude","The amplitude imbalance $A$ in dB."],[329,3,2,"p-phase","phase","The phase imbalance $phi$ in degrees."],[329,3,2,"p-x","x","The complex time-domain signal $x[n]$ to which IQ imbalance is applied."]],"sdr.is_preferred_pair":[[330,3,2,"p-poly1","poly1","The first primitive polynomial $f(x)$."],[330,3,2,"p-poly2","poly2","The second primitive polynomial $g(x)$."]],"sdr.kasami_code":[[331,3,2,"p-index","index","The index of the Kasami code."],[331,3,2,"p-length","length","The length $n = 2^m - 1$ of the Kasami code/sequence."],[331,3,2,"p-output","output","The output format of the Kasami code/sequence."],[331,3,2,"p-poly","poly","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$."]],"sdr.linear":[[332,3,2,"p-type","type","The type of output value or signal."],[332,3,2,"p-x","x","The input value or signal in dB."]],"sdr.lowpass_fir":[[333,3,2,"p-cutoff_freq","cutoff_freq","The cutoff frequency $f_c$, normalized to the Nyquist frequency $f_s / 2$."],[333,3,2,"p-order","order","The filter order $N$."],[333,3,2,"p-window","window","The SciPy window definition."]],"sdr.m_sequence":[[334,3,2,"p-degree","degree","The degree $m$ of the LFSR."],[334,3,2,"p-index","index","The index $i$ in $[1, q^m)$ of the $m$-sequence."],[334,3,2,"p-output","output","The output format of the $m$-sequence."],[334,3,2,"p-poly","poly","The characteristic polynomial of the LFSR over $mathrm{GF}(q)$."]],"sdr.max_frequency_offset":[[335,3,2,"p-cgl","cgl","The coherent gain loss (CGL) in dB."],[335,3,2,"p-integration_time","integration_time","The coherent integration time $T_c$ in seconds."]],"sdr.max_iid_rvs":[[336,3,2,"p-X","X","The distribution of the i.i.d."],[336,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[336,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.max_integration_time":[[337,3,2,"p-cgl","cgl","The coherent gain loss (CGL) in dB."],[337,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ in Hz."]],"sdr.max_rvs":[[338,3,2,"p-X","X","The distribution of the random variable $X$."],[338,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[338,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_iid_rvs":[[339,3,2,"p-X","X","The distribution of the i.i.d."],[339,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[339,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_rvs":[[340,3,2,"p-X","X","The distribution of the random variable $X$."],[340,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[340,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_snr":[[341,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[341,3,2,"p-detector","detector","The detector type."],[341,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[341,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[341,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[341,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.mix":[[342,3,2,"p-complex","complex","Indicates whether to mix by a complex exponential or real sinusoid."],[342,3,2,"p-freq","freq","The frequency $f$ of the sinusoid in Hz (or 1/samples if sample_rate=1). The frequency must satisfy $-f_s/2 le f le f_s/2$."],[342,3,2,"p-phase","phase","The phase $phi$ of the sinusoid in degrees."],[342,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal."],[342,3,2,"p-x","x","The time-domain signal $x[n]$."]],"sdr.multiply_rvs":[[343,3,2,"p-X","X","The distribution of the random variable $X$."],[343,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[343,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."],[343,3,2,"p-z","z","The $z$ values at which to evaluate the PDF of $Z$."]],"sdr.multirate_fir":[[344,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[344,3,2,"p-decimation","decimation","The decimation rate $Q$."],[344,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[344,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."]],"sdr.non_coherent_gain":[[345,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[345,3,2,"p-detector","detector","The detector type."],[345,3,2,"p-extrapolate","extrapolate","Indicates whether to extrapolate $G_{nc}$ using smaller values of $N_{nc}$."],[345,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[345,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$."],[345,3,2,"p-snr","snr","The reference SNR in dB."],[345,3,2,"p-snr_ref","snr_ref","The SNR reference."]],"sdr.p_d":[[346,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[346,3,2,"p-detector","detector","The detector type."],[346,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[346,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[346,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$ in $(0, 1)$."],[346,3,2,"p-snr","snr","The signal-to-noise ratio $S / sigma^2$ in dB."]],"sdr.p_fa":[[347,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[347,3,2,"p-detector","detector","The detector type."],[347,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[347,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[347,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."],[347,3,2,"p-threshold","threshold","The detection threshold $gamma$ in linear units."]],"sdr.pack":[[348,3,2,"p-bpe","bpe","The number of bits per element in the output array."],[348,3,2,"p-dtype","dtype","The data type of the output array."],[348,3,2,"p-x","x","The input binary array with 1 bit per element."]],"sdr.papr":[[349,3,2,"p-axis","axis","Axis or axes along which to compute the PAPR."],[349,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.parabolic_antenna":[[350,3,2,"p-diameter","diameter","The diameter $d$ in meters of the parabolic reflector."],[350,3,2,"p-efficiency","efficiency","The efficiency $0 le eta le 1$ of the parabolic reflector."],[350,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.peak_power":[[351,3,2,"p-axis","axis","Axis or axes along which to compute the peak power."],[351,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[351,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.peak_voltage":[[352,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[352,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.peebles":[[353,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[353,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[353,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.plot":[[354,6,1,"","ber","Plots the bit error rate (BER) as a function of $E_b/N_0$."],[355,6,1,"","constellation","Plots the constellation of the complex symbols $hat{x}[k]$."],[356,6,1,"","correlation","Plots the correlation between two time-domain signals $x[n]$ and $y[n]$."],[357,6,1,"","detector_pdfs","Plots the probability density functions (PDFs) of the detector under $mathcal{H}_0$ and $mathcal{H}_1$."],[358,6,1,"","dft","Plots the discrete Fourier transform (DFT) of the time-domain signal $x[n]$."],[359,6,1,"","dtft","Plots the discrete-time Fourier transform (DTFT) of the time-domain signal $x[n]$."],[360,6,1,"","eye","Plots the eye diagram of the baseband modulated signal $x[n]$."],[361,6,1,"","filter","Plots the magnitude response $|H(omega)|^2$, impulse response $h[n]$, and zeros and poles of the filter."],[362,6,1,"","group_delay","Plots the group delay $tau_g(omega)$ of the IIR filter."],[363,6,1,"","impulse_response","Plots the impulse response $h[n]$ of a filter."],[364,6,1,"","magnitude_response","Plots the magnitude response $|H(omega)|^2$ of the filter."],[365,6,1,"","p_d","Plots the probability of detection $P_d$ as a function of received SNR or ENR."],[366,6,1,"","periodogram","Plots the estimated power spectral density $P_{xx}$ of a time-domain signal $x[n]$ using Welch's method."],[367,6,1,"","phase_delay","Plots the phase delay $tau_{phi}(omega)$ of the filter."],[368,6,1,"","phase_response","Plots the phase response $angle H(omega)$ of the filter."],[369,6,1,"","phase_tree","Plots the phase tree of a continuous-phase modulated (CPM) signal signal $x[n]$."],[370,6,1,"","raster","Plots a raster of the time-domain signal $x[n]$."],[371,6,1,"","roc","Plots the receiver operating characteristic (ROC) curve as a function of $P_{fa}$."],[372,6,1,"","ser","Plots the symbol error rate (SER) as a function of $E_s/N_0$."],[373,6,1,"","shannon_limit_ebn0","Plots the Shannon limit for the bit energy-to-noise PSD ratio $E_b/N_0$."],[374,6,1,"","spectrogram","Plots the spectrogram of a time-domain signal $x[n]$ using Welch's method."],[375,6,1,"","stem","Wraps matplotlib.pyplot.stem() to style the plot more like MATLAB."],[376,6,1,"","step_response","Plots the step response $s[n]$ of a filter."],[377,6,1,"","symbol_map","Plots the symbol map of the complex symbols $hat{x}[k]$."],[378,6,1,"","time_domain","Plots a time-domain signal $x[n]$."],[379,6,1,"","use_style","Applies sdr's default matplotlib rcParams."],[380,6,1,"","zeros_poles","Plots the zeros and poles of the filter."]],"sdr.plot.ber":[[354,3,2,"p-ax","ax","The axis to plot on."],[354,3,2,"p-ber","ber","The bit error rate $P_{be}$."],[354,3,2,"p-ebn0","ebn0","The bit energy $E_b$ to noise PSD $N_0$ ratio (dB)."],[354,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.semilogy()."]],"sdr.plot.constellation":[[355,3,2,"p-ax","ax","The axis to plot on."],[355,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[355,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to Matplotlib functions."],[355,3,2,"p-limits","limits","The axis limits, which apply to both the x- and y-axis."],[355,3,2,"p-persistence","persistence","Indicates whether to plot the points as a persistence plot."],[355,3,2,"p-x_hat","x_hat","The complex symbols $hat{x}[k]$."]],"sdr.plot.correlation":[[356,3,2,"p-ax","ax","The axis to plot on."],[356,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[356,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[356,3,2,"p-mode","mode","The numpy.correlate() correlation mode."],[356,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[356,3,2,"p-x","x","The first time-domain signal $x[n]$."],[356,3,2,"p-y","y","The second time-domain signal $y[n]$."],[356,3,2,"p-y_axis","y_axis","Indicates how to plot the y-axis."]],"sdr.plot.detector_pdfs":[[357,3,2,"p-annotate","annotate","Indicates whether to annotate the plot with the probabilities of false alarm and detection."],[357,3,2,"p-ax","ax","The axis to plot on."],[357,3,2,"p-h0","h0","The statistical distribution under $mathcal{H}_0$."],[357,3,2,"p-h1","h1","The statistical distribution under $mathcal{H}_1$."],[357,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[357,3,2,"p-p_h0","p_h0","The probability of the $mathcal{H}_0$ tails to plot."],[357,3,2,"p-p_h1","p_h1","The probability of the $mathcal{H}_1$ tails to plot."],[357,3,2,"p-points","points","The number of points to use for the x-axis."],[357,3,2,"p-shade","shade","Indicates whether to shade the tails of the PDFs."],[357,3,2,"p-threshold","threshold","The detection threshold $gamma$."],[357,3,2,"p-x","x","The x-axis values to use for the plot."]],"sdr.plot.dft":[[358,3,2,"p-ax","ax","The axis to plot on."],[358,3,2,"p-centered","centered","Indicates whether to center the DFT about 0."],[358,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[358,3,2,"p-fast","fast","Indicates whether to use the fast Fourier transform (FFT) algorithm."],[358,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[358,3,2,"p-oversample","oversample","The factor to oversample the DFT."],[358,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[358,3,2,"p-size","size","The number of points to use for the DFT."],[358,3,2,"p-type","type","The type of plot to use."],[358,3,2,"p-window","window","The SciPy window definition."],[358,3,2,"p-x","x","The time-domain signal $x[n]$."],[358,3,2,"p-x_axis","x_axis","The x-axis scaling."],[358,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.dtft":[[359,3,2,"p-ax","ax","The axis to plot on."],[359,3,2,"p-centered","centered","Indicates whether to center the DTFT about 0."],[359,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[359,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[359,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[359,3,2,"p-size","size","The number of points to use for the DTFT."],[359,3,2,"p-window","window","The SciPy window definition."],[359,3,2,"p-x","x","The time-domain signal $x[n]$."],[359,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.eye":[[360,3,2,"p-ax","ax","The axis to plot on."],[360,3,2,"p-color","color","Indicates how to color the rasters."],[360,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[360,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to sdr.plot.raster()."],[360,3,2,"p-persistence","persistence","Indicates whether to plot the raster as a persistence plot."],[360,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[360,3,2,"p-span","span","The number of symbols per raster."],[360,3,2,"p-sps","sps","The number of samples per symbol."],[360,3,2,"p-x","x","The baseband modulated signal $x[n]$."]],"sdr.plot.filter":[[361,3,2,"p-N_freq","N_freq","The number of samples $N_f$ in the frequency response."],[361,3,2,"p-N_time","N_time","The number of samples $N_t$ in the time domain."],[361,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[361,3,2,"p-filter","filter","The filter definition."],[361,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[361,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.group_delay":[[362,3,2,"p-N","N","The number of samples $N$ in the frequency response."],[362,3,2,"p-ax","ax","The axis to plot on."],[362,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[362,3,2,"p-filter","filter","The filter definition."],[362,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[362,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[362,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.impulse_response":[[363,3,2,"p-N","N","The number of samples $N$ to plot."],[363,3,2,"p-ax","ax","The axis to plot on."],[363,3,2,"p-filter","filter","The filter definition."],[363,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[363,3,2,"p-offset","offset","The x-axis offset to apply to the first sample."],[363,3,2,"p-type","type","The type of plot to use."]],"sdr.plot.magnitude_response":[[364,3,2,"p-N","N","The number of samples $N$ in the frequency response."],[364,3,2,"p-ax","ax","The axis to plot on."],[364,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[364,3,2,"p-filter","filter","The filter definition."],[364,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[364,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[364,3,2,"p-x_axis","x_axis","The x-axis scaling."],[364,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.p_d":[[365,3,2,"p-ax","ax","The axis to plot on."],[365,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[365,3,2,"p-p_d","p_d","The probability of detection $P_d$."],[365,3,2,"p-x","x","The SNR or ENR in dB."],[365,3,2,"p-x_label","x_label","The x-axis label to use."]],"sdr.plot.periodogram":[[366,3,2,"p-average","average","The type of averaging to use."],[366,3,2,"p-ax","ax","The axis to plot on."],[366,3,2,"p-detrend","detrend","The type of detrending to apply."],[366,3,2,"p-fft","fft","The number of points to use in the FFT."],[366,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[366,3,2,"p-length","length","The length of each segment in samples."],[366,3,2,"p-overlap","overlap","The number of samples to overlap between segments."],[366,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[366,3,2,"p-window","window","The SciPy window definition."],[366,3,2,"p-x","x","The time-domain signal $x[n]$."],[366,3,2,"p-x_axis","x_axis","The x-axis scaling."],[366,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.phase_delay":[[367,3,2,"p-N","N","The number of samples $N$ in the phase delay."],[367,3,2,"p-ax","ax","The axis to plot on."],[367,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[367,3,2,"p-filter","filter","The filter definition."],[367,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[367,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[367,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.phase_response":[[368,3,2,"p-N","N","The number of samples $N$ in the phase response."],[368,3,2,"p-ax","ax","The axis to plot on."],[368,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[368,3,2,"p-filter","filter","The filter definition."],[368,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[368,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[368,3,2,"p-unwrap","unwrap","Indicates whether to unwrap the phase response."],[368,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.phase_tree":[[369,3,2,"p-ax","ax","The axis to plot on."],[369,3,2,"p-color","color","Indicates how to color the rasters."],[369,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to sdr.plot.raster()."],[369,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[369,3,2,"p-span","span","The number of symbols per raster."],[369,3,2,"p-sps","sps","The number of samples per symbol."],[369,3,2,"p-x","x","The baseband CPM signal $x[n]$."]],"sdr.plot.raster":[[370,3,2,"p-ax","ax","The axis to plot on."],[370,3,2,"p-color","color","Indicates how to color the rasters."],[370,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[370,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to Matplotlib functions."],[370,3,2,"p-length","length","The length of each raster in samples."],[370,3,2,"p-persistence","persistence","Indicates whether to plot the raster as a persistence plot."],[370,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[370,3,2,"p-stride","stride","The stride between each raster in samples."],[370,3,2,"p-x","x","The real time-domain signal $x[n]$."]],"sdr.plot.roc":[[371,3,2,"p-ax","ax","The axis to plot on."],[371,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function defined by type."],[371,3,2,"p-p_d","p_d","The probability of detection $P_d$."],[371,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[371,3,2,"p-type","type","The type of plot to generate."]],"sdr.plot.ser":[[372,3,2,"p-ax","ax","The axis to plot on."],[372,3,2,"p-esn0","esn0","The symbol energy $E_s$ to noise PSD $N_0$ ratio (dB)."],[372,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.semilogy()."],[372,3,2,"p-ser","ser","The symbol error rate $P_{se}$."]],"sdr.plot.shannon_limit_ebn0":[[373,3,2,"p-ax","ax","The axis to plot on."],[373,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.plot.spectrogram":[[374,3,2,"p-ax","ax","The axis to plot on."],[374,3,2,"p-detrend","detrend","The type of detrending to apply."],[374,3,2,"p-fft","fft","The number of points to use in the FFT."],[374,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.pcolormesh(). The following keyword arguments are set by default."],[374,3,2,"p-length","length","The length of each segment in samples."],[374,3,2,"p-overlap","overlap","The number of samples to overlap between segments."],[374,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[374,3,2,"p-window","window","The SciPy window definition."],[374,3,2,"p-x","x","The time-domain signal $x[n]$."],[374,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.stem":[[375,5,2,"","_ScalarType_co","Wraps matplotlib.pyplot.stem() to style the plot more like MATLAB."],[375,3,2,"p-ax","ax","The axis to plot on."],[375,3,2,"p-color","color","The color of the stem line and marker."],[375,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.stem()."],[375,3,2,"p-x","x","The x-coordinates of the stem plot."],[375,3,2,"p-y","y","The y-coordinates of the stem plot."]],"sdr.plot.step_response":[[376,3,2,"p-N","N","The number of samples $N$ to plot."],[376,3,2,"p-ax","ax","The axis to plot on."],[376,3,2,"p-filter","filter","The filter definition."],[376,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[376,3,2,"p-type","type","The type of plot to use."]],"sdr.plot.symbol_map":[[377,3,2,"p-annotate","annotate","If True, the symbols are annotated with their index. If \"bin\", the symbols are annotated with their binary representation."],[377,3,2,"p-ax","ax","The axis to plot on."],[377,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot(). The following keyword arguments are set by default."],[377,3,2,"p-limits","limits","The axis limits, which apply to both the x- and y-axis. If None, the axis limits are set to 50% larger than the maximum value."],[377,3,2,"p-modulation","modulation","The linear modulation or symbol map ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.plot.time_domain":[[378,5,2,"","_ScalarType_co","Plots a time-domain signal $x[n]$."],[378,3,2,"p-ax","ax","The axis to plot on."],[378,3,2,"p-centered","centered","Indicates whether to center the x-axis about 0."],[378,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[378,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[378,3,2,"p-offset","offset","The x-axis offset to apply to the first sample."],[378,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[378,3,2,"p-t","t","The time signal $t[n]$."],[378,3,2,"p-x","x","The time-domain signal $x[n]$."]],"sdr.plot.zeros_poles":[[380,3,2,"p-ax","ax","The axis to plot on."],[380,3,2,"p-filter","filter","The filter definition."],[380,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."]],"sdr.polyphase_decompose":[[381,3,2,"p-branches","branches","The number of polyphase branches $B$."],[381,3,2,"p-taps","taps","The prototype filter feedforward coefficients $h[n]$."]],"sdr.power":[[382,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[382,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.preferred_pairs":[[383,3,2,"p-degree","degree","The degree $m$ of the $m$-sequences."],[383,3,2,"p-poly","poly","The first polynomial $f(x)$ in the preferred pair."]],"sdr.raised_cosine":[[384,3,2,"p-alpha","alpha","The excess bandwidth $0 le alpha le 1$ of the filter."],[384,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[384,3,2,"p-span","span","The length of the filter in symbols."],[384,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.rectangular":[[385,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[385,3,2,"p-span","span","The length of the filter in symbols."],[385,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.rms_bandwidth":[[386,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[386,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.rms_integration_time":[[387,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[387,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.rms_voltage":[[388,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[388,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.root_raised_cosine":[[389,3,2,"p-alpha","alpha","The excess bandwidth $0 le alpha le 1$ of the filter."],[389,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[389,3,2,"p-span","span","The length of the filter in symbols."],[389,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.sample_rate_offset":[[390,3,2,"p-offset","offset","The sample rate offset $Delta f_s = f_{s,text{new}} - f_{s,text{old}}$ in samples/s."],[390,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[390,3,2,"p-x","x","The time-domain signal $x[n]$ to which the sample rate offset is applied."]],"sdr.shannon_limit_ebn0":[[391,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.shannon_limit_snr":[[392,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.shnidman":[[393,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[393,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[393,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."],[393,3,2,"p-swerling","swerling","The Swerling target model."]],"sdr.sinusoid":[[394,3,2,"p-complex","complex","Indicates whether to generate a complex exponential or real sinusoid."],[394,3,2,"p-duration","duration","The duration of the signal in seconds (or samples if sample_rate=1)."],[394,3,2,"p-freq","freq","The frequency $f$ of the sinusoid in Hz (or 1/samples if sample_rate=1). The frequency must satisfy $-f_s/2 le f le f_s/2$."],[394,3,2,"p-freq_rate","freq_rate","The frequency rate $frac{df}{dt}$ of the sinusoid in Hz/s (or 1/samples$^2$ if sample_rate=1)."],[394,3,2,"p-phase","phase","The phase $phi$ of the sinusoid in degrees."],[394,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal."]],"sdr.snr_to_ebn0":[[395,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[395,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."],[395,3,2,"p-snr","snr","Signal-to-noise ratio $S/N$ in dB."],[395,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.snr_to_esn0":[[396,3,2,"p-snr","snr","Signal-to-noise ratio $S/N$ in dB."],[396,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.subtract_rvs":[[397,3,2,"p-X","X","The distribution of the random variable $X$."],[397,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[397,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.tdoa_crlb":[[398,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[398,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[398,3,2,"p-rms_bandwidth","rms_bandwidth","The root-mean-square (RMS) bandwidth $B_{s,text{rms}}$ in Hz."],[398,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1 = S_1 / (N_0 B_n)$ in dB."],[398,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2 = S_2 / (N_0 B_n)$ in dB."],[398,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.threshold":[[399,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[399,3,2,"p-detector","detector","The detector type."],[399,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[399,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[399,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."],[399,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."]],"sdr.threshold_factor":[[400,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[400,3,2,"p-db","db","Indicates whether to return the detection threshold $alpha$ in dB."],[400,3,2,"p-detector","detector","The detector type."],[400,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[400,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[400,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.to_complex_baseband":[[401,3,2,"p-x_r","x_r","The real passband signal $x_r[n]$ centered at $f_{s,r}/4$ with sample rate $f_{s,r}$. If the length is odd, one zero is appended to the end."]],"sdr.to_real_passband":[[402,3,2,"p-x_c","x_c","The complex baseband signal $x_c[n]$ centered at $0$ with sample rate $f_{s,c}$."]],"sdr.toa_crlb":[[403,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[403,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[403,3,2,"p-rms_bandwidth","rms_bandwidth","The root-mean-square (RMS) bandwidth $B_{s,text{rms}}$ in Hz."],[403,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) of the signal $gamma = S / (N_0 B_n)$ in dB."],[403,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.unpack":[[404,3,2,"p-bpe","bpe","The number of bits per element in the input array."],[404,3,2,"p-dtype","dtype","The data type of the output array."],[404,3,2,"p-x","x","The input array with bpe bits per element."]],"sdr.upsample":[[405,3,2,"p-rate","rate","The upsampling factor $r$."],[405,3,2,"p-x","x","The time-domain signal $x[n]$ with sample rate $f_s$."]],"sdr.walsh_code":[[406,3,2,"p-index","index","The index $i$ in $[0, n)$ of the Walsh code."],[406,3,2,"p-length","length","The length $n = 2^m$ of the Walsh code/sequence."],[406,3,2,"p-output","output","The output format of the Walsh code/sequence."]],"sdr.wavelength":[[407,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.zadoff_chu_sequence":[[408,3,2,"p-length","length","The length $N$ of the Zadoff-Chu sequence."],[408,3,2,"p-root","root","The root $0 < u < N$ of the Zadoff-Chu sequence."],[408,3,2,"p-shift","shift","The shift $q in mathbb{Z}$ of the Zadoff-Chu sequence."]]},"objnames":{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","parameter","Python parameter"],"4":["py","property","Python property"],"5":["py","typeParameter","Python type parameter"],"6":["py","function","Python function"]},"objtypes":{"0":"py:module","1":"py:class","2":"py:method","3":"py:parameter","4":"py:property","5":"py:typeParameter","6":"py:function"},"terms":{"":[1,5,9,19,20,42,46,48,62,67,75,77,78,79,81,82,84,88,96,103,104,105,106,107,108,114,115,117,119,122,125,126,128,132,134,135,149,151,152,153,157,159,160,164,170,173,178,181,190,193,195,196,199,200,201,202,220,228,230,240,248,254,256,268,273,275,277,278,284,286,287,294,299,300,308,311,313,314,315,318,323,329,346,353,355,356,358,359,360,361,362,364,366,367,368,369,370,374,375,376,378,379,386,387,390,391,392,393,394,395,396,398,401,402,403,415,416,419,423,424,426,429,430],"0":[2,3,6,7,8,10,12,17,19,20,24,25,26,27,32,33,34,35,40,42,43,46,48,62,63,74,84,88,90,95,96,99,101,108,109,114,115,117,119,125,126,128,129,130,132,135,136,137,138,139,149,150,151,152,153,154,155,157,159,160,161,162,163,164,165,167,168,169,170,173,181,183,184,190,191,193,195,196,199,200,201,202,209,213,220,224,228,229,230,232,234,240,241,248,249,251,253,254,255,256,257,264,266,267,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,316,317,318,319,320,321,322,323,324,326,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,350,353,355,357,358,359,360,361,362,363,364,367,368,369,373,375,376,377,378,379,380,381,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,412,413,414,416,419,420,421,423,424,425,426,427,431],"00":[114,170,253,254,416,421,423],"000":[99,360],"00000000":327,"0000000000000002":114,"00000000e":[114,170,253,254,421],"00000004":327,"00000008":327,"00000010":327,"00000020":327,"0000010494310452":[271,272],"0004368":420,"0005":425,"00088449":337,"00095883":420,"001":[10,357,425],"00110561":337,"00147414":337,"0017044":420,"00175012":420,"0018818867640235891":337,"00221122":337,"00254816":420,"00391660e":114,"0041658j":170,"00423921":420,"00442243":337,"00474595":420,"005":425,"0058825":420,"006151":420,"00721645":420,"00830241j":170,"00845058":420,"00851486":420,"00e":[416,423],"00j":[253,254],"01":[10,114,170,253,254,327,416,421,423,425],"010299956639812":298,"010299956639813":298,"01073669":420,"0112324":420,"01140214e":421,"01238051j":170,"0125":425,"01273202":420,"01342358":420,"015":425,"016796159999999997":421,"0175":425,"0183":353,"01j":[253,254],"02":[327,421,424,425],"020599913279624":302,"020599913279625":[307,396],"02372977":420,"02769991":420,"03":[114,170,327,416,421,423],"03355896":420,"03650247":420,"03715849e":114,"03953322e":421,"04":[114,170,327,421,423],"04436799":421,"04650654":420,"04734644":420,"05":[327,419,421,425],"05098525":420,"05e":[416,423],"06":[327,345,357],"07":327,"07106781e":[253,254],"07367348":420,"07864960352514258":347,"08":327,"09":327,"092337035029908":421,"0a":327,"0e":[345,346],"0j":[114,170,229,241,249,255],"0x7fba6739c450":425,"1":[2,3,6,7,8,10,12,13,14,17,19,20,24,25,26,27,32,33,34,35,40,43,46,48,62,64,67,74,77,81,83,84,85,88,89,90,95,96,97,99,100,101,108,111,112,114,115,117,119,124,125,126,128,129,130,131,132,134,135,136,137,138,139,141,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,170,173,181,182,183,188,190,191,193,194,195,196,199,200,201,202,209,211,213,214,220,224,228,229,230,232,234,240,241,242,248,249,250,251,252,253,254,255,256,264,266,267,270,271,272,273,274,275,276,277,278,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,353,354,355,356,357,358,359,360,361,362,363,364,367,368,369,370,372,373,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,412,416,419,420,421,423,424,425,426,427,431],"10":[10,40,62,88,90,97,99,101,125,132,134,135,136,138,139,149,151,157,159,160,161,163,181,183,190,196,228,240,241,248,249,250,252,254,255,264,266,267,270,274,276,278,282,283,284,285,286,288,289,293,295,298,299,300,302,305,307,308,309,310,311,314,315,317,319,321,322,323,325,327,328,329,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,349,350,351,352,353,354,355,358,359,361,362,363,364,367,368,372,373,375,376,378,380,381,382,384,385,386,387,388,389,390,393,394,395,396,397,398,399,403,406,416,420,423,424,425,426,427],"100":[10,88,99,114,164,170,172,178,181,193,230,232,250,252,284,286,288,289,292,297,299,302,306,313,314,315,318,328,332,333,336,337,339,342,353,354,355,361,363,369,372,376,387,390,393,394,398,401,402,403,405,419,425],"1000":[10,114,170,225,226,228,240,245,246,248,254,313,317,413,426],"10000":62,"1001":[62,298,299,322,323,335,337,357],"100_000":[282,283,322,323,336,338,339,340,343,355,397,416,423,426],"100e":390,"100th":374,"101":[24,32,97,99,274,276,282,283,287,288,289,300,314,315,322,323,328,333,336,338,339,340,343,345,346,391,392,397,398,400,403,416,423,424],"1024":[62,114,115,119,170,361,362,364,367,368,427],"10422993e":421,"1048576":359,"10714821346844":313,"10813095e":421,"10862468e":421,"1093092892":425,"10_000":[62,386,424],"10e":[335,390,416],"10e3":378,"10th":374,"10x":[125,151],"11":[19,40,62,90,125,134,136,139,151,159,161,183,190,228,240,248,254,282,283,290,293,295,299,317,321,322,323,324,334,336,338,339,340,344,345,346,347,381,386,387,397,399,406,416,421,424],"11e":416,"12":[40,62,125,134,136,139,151,159,161,183,190,228,240,248,254,275,277,282,283,284,295,314,315,320,321,322,323,330,334,336,338,339,340,341,345,346,381,383,386,387,393,397,398,403,420,424,426],"120":413,"12169481":335,"12240078e":421,"12323400e":[253,254],"1263714068241546":421,"12670446":420,"128":149,"12ab":284,"13":[125,136,139,151,161,183,190,228,240,248,254,273,274,275,277,290,295,298,321,322,323,341,346,378,381,387,412],"130":306,"13335164":421,"139":408,"14":[125,136,139,151,161,183,228,240,248,254,274,295,321,322,323,345,346,353,381,387,406],"140":[84,306],"14335017":299,"1455082":421,"14686183e":114,"147":335,"14721649e":421,"15":[125,136,139,151,161,183,220,228,240,248,254,276,295,321,322,323,331,338,340,343,346,381,387,405,416],"150":[401,402,426],"152932338":425,"15647504e":421,"158655":[271,272],"15865525393145707":[271,272],"16":[7,125,139,149,151,183,228,240,248,250,252,253,254,282,283,284,295,307,308,310,316,321,322,323,324,327,336,338,339,340,341,346,354,372,381,384,387,389,395,396,397,400,406,424],"1622776601683795":[322,323],"16j":[253,254],"17":[125,139,151,228,253,254,313,322,323,346,350,381,387],"1706839j":170,"179":139,"17j":114,"18":[125,139,151,282,322,323,324,346,381,387,406,412,426],"180":329,"18301321":420,"183490056794499":341,"18872187554086717":32,"189":32,"19":[125,139,151,322,323,346,381,387],"1909320767063554":421,"198":419,"1_000":[99,193,230,286,317,329,355,360,390,401,402,424],"1_001":[282,283,317,336,338,339,340,343,397],"1d":[294,370],"1e":[97,274,282,283,284,287,299,314,315,322,323,335,336,338,339,340,341,343,345,346,353,357,373,392,397,398,399,403,416,423,426],"1e0":[314,315,373,398,403,426],"1e3":[299,317,335,337,342,394,401],"1e5":[314,315,398,403],"1e6":[299,314,315,317,398,403,426],"1e7":[398,403],"1e8":[314,315,398,403],"1e9":[317,350,407],"1f":149,"1j":[10,62,170,322,323,361,362,363,364,367,368,376,380,416,419,421,423,425],"2":[9,10,19,20,24,32,40,42,43,49,62,63,67,75,77,80,84,88,90,96,97,98,99,100,101,108,112,114,115,119,125,126,128,129,130,131,132,134,135,136,137,138,139,149,151,152,153,154,155,156,157,159,160,161,162,163,170,181,183,190,193,194,195,196,203,220,228,230,232,240,241,242,248,249,250,251,252,253,254,255,256,264,266,267,270,271,272,273,274,275,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,372,373,374,375,376,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,408,409,412,413,414,415,416,419,420,421,423,424,425,426,427],"20":[19,24,32,88,89,90,97,99,125,139,151,190,232,274,278,283,287,291,294,296,298,302,305,313,322,323,327,329,332,338,340,345,346,352,381,387,388,392,405,426],"200":[114,170,299,306,337,370,424,426],"2000":10,"201":373,"2019":[125,151,293],"2023":[429,430],"2024":430,"2025":430,"2048":[306,401,402,405],"20e":423,"21":[125,151,284,322,323,341,345,346,350,378,393],"210":84,"21002545":391,"21565653e":421,"21719":149,"22":[125,151,322,323,346],"221":335,"22464680e":[253,254],"22961005941814036j":421,"23":[64,85,125,151,191,280,322,323,344,346,350],"235":[299,337],"23810898":420,"23851924e":421,"24":[125,151,322,323],"2433896262681":335,"24338963":335,"246204957035847":313,"249387366082999":[307,308],"25":[24,32,62,90,97,125,151,291,296,299,305,316,322,323,419,424,425,427],"250":[401,402,425],"253":353,"256":[366,374],"25e":299,"26":[151,322,323],"267486807285799":341,"27":[322,323,324],"27280811e":114,"28":[322,323,425,430],"280":84,"2815515655446004":[322,323],"28283804209787544j":421,"28727058":420,"28864626708135344":387,"28865329576550935":387,"2886751345948129":[386,387],"29":[322,323,412,420],"29088345066048465":386,"299792458":407,"2d":[56,59,60,90,287,355,360,370,373,391,392],"2e":[299,335,416,423],"2e3":[299,317],"2e9":317,"2f":[416,423,424],"2f_":402,"2m":254,"2n":[96,97,98,293],"2nd":[67,211,213,411,425,430],"2p":[191,280],"2q":408,"3":[10,19,24,32,40,62,67,75,77,78,81,84,88,90,96,97,101,114,125,126,129,130,131,132,134,135,136,137,138,139,141,149,151,152,154,155,156,157,159,160,161,162,163,170,181,183,190,193,220,228,230,232,240,242,248,250,251,252,253,254,256,264,266,267,270,273,274,278,282,283,284,286,288,289,290,291,293,294,295,296,298,299,300,302,305,306,307,308,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,353,355,356,357,358,359,360,361,362,363,364,367,368,373,375,376,378,380,381,383,384,385,386,387,389,390,391,393,394,395,397,398,399,401,402,403,404,405,406,407,408,412,413,416,421,423,425,427,429],"30":[139,190,193,228,230,240,248,254,278,287,294,306,322,323,324,334,345,361,363,376,392,393,401,402,421,430],"300":[114,170,299,337,401,402],"3000":10,"30202676j":114,"302585092994046":[322,323,346,399],"3044107145":425,"30533298":391,"3061467458920719j":421,"30614675j":421,"31":[284,322,323,353,420],"312":419,"32":[149,284,316,322,323,324,341,406,419,423],"32607991":420,"32626966":299,"33":[79,322,323],"3333421398098428j":421,"34":[78,322,323,378],"35":[193,230,322,323,425],"35093841":420,"35935288":421,"35949665":420,"36":[322,323],"36139242":421,"36272725":332,"36787944117144245":347,"3678794411714425":347,"36961426":170,"37":[322,323],"3763214":421,"377":427,"37868538208862":421,"38":77,"3806359704987265j":421,"3885743j":170,"39":75,"39261642":421,"396":419,"3e":335,"3rd":421,"3x":[84,125,126,129,130,131,132,134,135,136,137,138,151,152,154,155,156,157,159,160,161,162,163,190,293],"4":[10,19,24,32,40,62,75,77,84,88,90,97,101,114,125,126,129,130,131,132,134,135,136,137,138,139,141,149,151,152,154,155,156,157,159,160,161,162,163,170,181,183,190,193,220,228,229,230,232,240,241,242,248,250,251,252,253,254,256,264,266,267,270,273,274,275,277,278,282,283,284,286,288,289,290,293,294,295,298,299,300,305,306,307,308,310,311,313,314,315,316,317,318,320,321,322,323,324,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,350,353,354,355,357,358,359,360,361,362,363,364,367,368,372,375,376,377,378,379,380,381,383,384,386,387,389,390,391,393,394,395,396,397,399,401,402,404,405,406,408,412,414,419,421,424,425,426],"40":[81,88,139,190,278,300,306,345],"400":[114,170,299,306,337],"4000":10,"40270968":421,"40e9":317,"410342926869486":345,"41446321":335,"42007077":299,"42176895e":421,"4219690131724645":387,"42721858e":421,"43":80,"43085717":421,"437435887991374":350,"44":[284,287,392],"442":335,"44778322188337":317,"45":[228,229,240,241,248,251,286,313,329,342,355,360,377,378,390,394,424,425,426],"45557651":421,"46":353,"46154771":421,"46380627201816593":421,"468383135163":317,"46911955":421,"46917696":421,"47005584":421,"47193366e":421,"47199608":421,"472298696877605":170,"4722987":170,"47271105":170,"47338728e":421,"47394825":170,"47410241":421,"47510421":421,"47601067":170,"478":421,"47820725":421,"478207252018059":421,"47925143":421,"4839738":421,"48566716":421,"48840102":421,"49090568":421,"49124786":421,"4988817673791569":421,"499445060713011":345,"4x":[358,359],"5":[10,19,24,32,40,42,43,62,84,88,90,96,97,98,99,100,101,114,125,126,129,130,131,132,134,135,136,137,138,139,149,151,152,154,155,156,157,159,160,161,162,163,181,183,190,193,220,228,230,232,240,248,254,256,264,266,267,270,274,276,278,282,283,284,286,288,289,290,291,293,294,295,296,297,298,299,300,305,306,307,308,310,311,313,314,315,316,317,318,319,320,321,322,323,324,327,328,329,330,331,333,334,335,336,337,338,339,340,341,343,345,346,347,350,353,357,358,359,360,361,362,363,364,367,368,375,376,378,380,381,383,384,386,387,389,390,391,393,395,396,397,399,401,402,405,406,408,412,420,421,424,425,427],"50":[228,240,248,254,302,332,337,377,378,387,401,402,419,424],"500":[299,337,401,402,425],"5000":10,"50118723":332,"50e6":302,"51":[294,345],"51520024":170,"5174271293851465":[322,323,346,399],"52496713":170,"5291527586123693":421,"529544741425365":350,"52e":423,"53081763e":114,"53637958":421,"54":[284,327],"541421484556116":346,"5414214845561176":346,"54974021":391,"55":[299,350,378,430],"5533811909871471":[322,323],"5533811909871473":[322,323],"5543277195052645":421,"56859734":391,"56e":423,"57":232,"5719707":421,"57286400e":421,"57338213":170,"5759632j":114,"57922366":299,"58172329e":421,"59":391,"591745389548616":391,"5_000":99,"5e":[299,335],"5x":[125,126,130,138,151,152,155,163,293],"6":[10,19,24,32,40,62,84,88,90,101,125,126,132,134,135,136,137,138,139,149,151,152,157,159,160,161,162,163,170,181,183,190,193,220,228,230,232,240,248,253,254,256,264,266,267,270,274,275,277,278,282,283,284,293,294,295,298,299,300,302,305,306,307,308,313,314,315,316,317,318,320,321,322,323,324,327,331,332,334,335,336,337,338,339,340,341,345,346,347,350,353,355,356,358,360,361,362,363,364,367,368,373,375,376,377,378,380,381,384,386,387,389,390,391,397,398,399,401,402,403,406,408,412,415,420,421,425,426],"60":[232,287,288,289,300,328,333,392,427,430],"6058636":114,"61":[327,430],"62":[284,327],"62720131e":114,"63":[320,327,331,334,356],"63882791e":421,"64":[84,149,316,327,421],"6400000000000001":421,"6448536269514744":[322,323],"65":327,"6560":334,"66":327,"666092814306324":345,"67":327,"67772160e":421,"68":327,"684365018955985":421,"69":327,"6903095079298097":[322,323],"69685122e":421,"6a":327,"6b":327,"6c":327,"6d":327,"6e":327,"6f":327,"7":[19,24,32,40,62,84,88,90,101,125,126,129,130,131,132,134,135,136,137,138,139,149,151,152,154,155,156,157,159,160,161,162,163,181,183,190,220,228,240,242,248,253,254,256,264,266,267,270,274,278,282,283,284,287,290,293,294,295,299,305,313,314,315,316,317,318,320,321,322,323,324,327,328,331,334,336,338,339,340,344,345,346,347,381,386,387,391,392,397,398,399,403,406,408,412,421,423,425,429],"70":[84,327],"70554345409542":[322,323],"70710678":[228,240,248],"70710678j":[228,240,248],"71":327,"71104892744724":421,"71930943":421,"72":327,"72236648e":421,"7229165664874556":[322,323],"7229165664874564":[322,323],"73":327,"732513192714245":341,"7391036260090295":421,"73910363":421,"74":327,"74077567e":421,"7446372175904691":386,"75":[24,90,289,327,425],"7506126339170005":[310,395],"76":[302,327,416],"7630284641923553":346,"76562500e":[114,170],"77":[302,327,332],"775659839720893":313,"77694738j":170,"78":327,"78207252e":421,"78877688e":421,"79":[327,353],"79630028j":114,"7a":327,"7b":284,"8":[40,43,62,84,88,90,101,114,125,134,136,139,149,151,159,161,170,181,183,190,196,228,229,240,241,248,249,250,252,253,254,255,256,264,266,267,270,278,282,283,284,287,293,294,295,299,305,313,314,315,316,317,321,322,323,324,327,334,336,338,339,340,341,345,346,347,350,353,354,360,361,362,363,364,367,368,372,375,376,378,379,380,381,383,384,386,387,389,391,392,393,397,398,399,403,406,412,416,420,421,423,424,425,427],"80":[62,64,85,88,191,280,344,408],"800":370,"802":19,"8038919141626675":299,"8080":412,"8096":284,"810210290266568":350,"81474977e":421,"81610220678933":313,"8174569":391,"8178049":114,"83":350,"830810203546193":350,"83622458e":114,"83697020e":253,"84684395e":421,"85259041e":421,"85986396":391,"86109590e":421,"87820725":421,"88127210e":114,"88708159":421,"8912709229530473":[322,323],"89312837e":421,"9":[10,40,62,84,90,114,125,134,136,139,149,151,159,161,170,183,190,228,240,248,254,256,264,266,267,270,274,278,282,283,284,293,294,295,299,305,313,317,321,322,323,324,327,334,336,338,339,340,341,345,346,347,381,384,386,387,389,393,397,399,406,413,414,421,423,424,426,427],"9061938024368232":[322,323,346,399],"9120975839632417":299,"92":317,"92239754":299,"9223975406030527":299,"93chu_sequ":408,"94024315e":421,"94724205":421,"95":[284,313,353],"95312500e":[114,170],"95337172":114,"95th":313,"9678537j":170,"97070312e":[114,170],"979400086720376":[310,311],"98":317,"98046875e":[114,170],"98970004336019":302,"99":393,"99023438e":[114,170],"9952623149688795":332,"999":353,"9993519409971622":421,"A":[6,10,40,43,56,63,67,75,77,78,79,80,81,83,88,101,108,109,114,125,126,139,151,152,170,181,193,196,211,220,230,241,242,249,255,257,279,284,293,294,295,321,322,323,327,329,330,341,345,346,347,350,355,360,370,383,384,389,393,399,400,410,411,413,416,423,425,429],"But":317,"For":[97,98,100,274,275,277,282,286,293,300,306,317,386,387,397,400,405,412,420],"If":[43,89,95,99,136,145,161,196,233,241,249,255,276,278,282,285,286,287,288,289,298,299,300,305,309,314,315,320,328,333,343,345,348,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,382,383,388,398,401,403,404,416,423,429],"In":[10,12,18,19,24,32,40,62,63,64,84,85,88,89,90,97,99,101,109,110,114,123,125,126,129,130,131,132,134,135,136,137,138,139,141,147,149,151,152,154,155,156,157,159,160,161,162,163,165,167,170,179,181,182,183,190,191,193,194,220,228,230,231,232,240,242,248,250,251,252,253,254,257,258,264,266,267,270,271,272,274,276,278,279,280,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,353,354,355,356,357,358,359,360,361,362,363,364,367,368,369,372,373,375,376,377,378,379,380,381,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,416,419,423,426],"It":[43,108,164,190,196,211,220,241,249,255,286,317,345,375,416,423],"One":[228,240,254,427],"Or":[414,415],"The":[10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,412,413,414,415,416,420,421,423,425,426,427,429,431],"Then":232,"There":[320,330,331,383,431],"These":[164,240,248,254,299,358,379,414,425],"To":414,"_":[228,240,248,254,284,298,313,345,416,423],"_0":[2,9,96,273,322,347,357,400,416,423],"_1":[2,9,96,273,323,346,357,416,423],"____":278,"__call__":[10,11,12,18,24,27,32,35,56,57,62,63,64,84,85,88,89,90,94,108,109,110,123,125,127,139,140,141,147,149,164,165,166,167,179,181,182,190,191,193,194,211,212,220,223,230,231,232,233,242,243,256,257,258,278,279,280,430],"__init__":413,"__len__":[40,62,84,88,108,111,149,183,185,190,230,256,278],"_filter":427,"_filter_design":421,"_rc_param":379,"_scalartype_co":[9,232,233,375,378],"_version":413,"a1":[416,423],"a2":[322,323,416,423],"a_":[64,85,191,220,221,222,224,280,344],"a_0":164,"a_1":[416,423],"a_2":416,"a_hat":[425,426],"a_j":[164,167,168,181,193,361,362,363,364,367,368,376,380,421],"a_receiv":[220,221,224],"a_ref":220,"a_refer":[220,222,224],"a_rx":220,"a_tap":[164,168,181,193,421],"a_tild":[195,199,228,240,248,254,425,426],"ab":[88,136,161,181,322,323,416,423,427],"abil":430,"about":[149,288,289,358,359,378,386,387,415],"abov":[306,405,430],"absent":347,"absolut":[229,232,234,237,241,255,318,373,391,416,423],"abstractmethod":[42,44,53,195,197,207],"acceler":429,"accept":430,"access":412,"accomplish":[419,426],"accord":[10,314,315,398,403],"accordingli":181,"accumul":[101,181,232,233,234,236,425,430],"accur":[282,283,336,338,339,340,343,397],"acf":430,"achiev":[2,284,294,341,345,346,347,387,391,393,399,416,423,426,427,430],"across":[40,62,88,258,284,312,317,326,341,345,393,400],"activ":414,"actual":359,"ad":[286,355,360,370,413,429,430],"add":[101,103,106,228,240,248,254,286,318,325,355,360,370,385,390,410,426,431],"add_iid_rv":[7,282,430],"add_rv":[7,283,430],"adder":[10,19,84,125,151,211,232,303,304,425],"addit":[0,5,19,20,286,287,294,320,354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,380,405,410,416,423,429,430],"addition":[125,429],"additivescrambl":[0,19,20,21,22,23,430],"addopt":415,"adjac":[43,229,241,249,253,255,426,427],"adjust":343,"advanc":[191,280,393],"affect":[322,323,341,345,346,347,384,389,399,400],"after":[12,13,14,267,270,294,345,413],"against":[284,353,358],"agc":[10,11,12,13,14,15,16,17,18,220,411,429,430],"aid":[220,225,242,245],"aim":429,"alarm":[2,96,97,98,99,100,273,274,275,276,277,284,322,323,341,345,346,347,353,357,371,393,399,400,416,423,429,430],"albersheim":[2,284,341,430],"algorithm":[293,300,358,430],"alias":[306,405,430],"align":[63,109,191,240,257,279,280,294,324,358,406,416,419,423],"all":[20,62,84,101,106,126,128,152,153,190,233,256,258,265,278,313,336,339,358,360,369,370,383,413,415,429,430],"allow":[322,323,341,346,347,386,387,399,400,414,415,429,430],"along":[285,293,309,312,326,349,351,430],"alouini":[250,252],"alpha":[2,8,10,12,13,62,193,194,196,241,249,255,319,379,384,389,400,424,427],"alphabet":[24,25,26,32,33,34,90,92,93,95,305],"also":[10,62,136,161,220,228,242,316,317,319,375,429],"altern":[2,96,273,284,323,416,421,423],"although":228,"amalia":393,"ambigu":300,"amplifi":[10,12,14],"amplitud":[8,62,195,196,220,221,222,224,294,329,416,423,425],"an":[0,2,3,5,7,10,12,19,20,32,43,62,84,88,96,108,110,114,116,134,136,138,150,159,161,163,164,165,167,170,172,181,182,183,184,190,193,194,196,229,230,232,241,249,250,252,255,273,278,282,287,299,316,335,337,348,354,358,359,363,372,378,383,404,407,411,414,425,429,430],"analysi":[67,74,282,283,336,338,339,340,343,397,413,425,429,430],"analyz":429,"analyze_psk":426,"angl":[9,242,318,368,425],"angular":139,"ani":[62,84,88,108,114,149,164,170,181,190,193,230,232,233,256,278,290,302,306,320,324,331,332,334,345,375,378,405,406,409,415],"annot":[253,287,357,377,392,413,430],"answer":317,"antenna":[317,350,429],"anti":[306,405,430],"apa":429,"apart":240,"api":[429,430,431],"apm":393,"appear":[10,419],"append":[150,316,401,424],"appendix":[67,211,319,384,389],"appli":[9,46,62,84,89,190,196,228,240,248,254,278,288,289,318,328,329,333,355,358,359,360,363,366,374,377,378,379,387,390,410,429],"applic":[125,151,293],"approach":[10,24,32,67,75,77,78,79,80,81,88,139,211,220,242,292,297,343,384,389,391,425],"appropri":32,"approx":[12,13,14,149],"approxim":[193,194,282,284,300,353,429,430],"ar":[24,26,27,32,42,43,52,55,62,63,64,84,85,89,90,96,101,103,104,105,107,109,110,125,136,138,141,150,151,163,165,167,182,190,191,194,196,206,210,228,229,231,233,240,241,248,249,254,255,256,257,258,265,267,270,273,278,279,280,282,287,291,292,293,296,297,299,300,314,315,316,317,320,324,325,330,331,334,336,338,339,340,343,344,348,355,356,358,360,361,362,364,366,367,368,369,370,374,375,377,378,379,381,383,385,393,398,401,402,403,406,412,414,416,419,421,423,425,427,429,431],"arang":[10,40,62,84,139,149,183,190,264,266,267,270,278,286,300,345,381,419,425],"arbitrari":[0,8,139,140,141,142,143,144,145,146,147,148,183,184,195,418,429,430],"arcsin":350,"aren":412,"arg":413,"argument":[63,64,85,109,191,257,279,280,298,354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,380,413,420,421,430],"arithmet":[125,130,131,151,155,156],"around":[149,229,241,249,255,375],"arrai":[7,19,24,32,40,43,63,90,101,114,136,161,170,183,191,196,228,229,232,240,241,248,249,253,254,255,264,266,267,270,280,285,290,291,295,296,299,303,304,305,309,312,320,321,324,326,331,334,335,337,348,349,351,378,381,391,393,404,406,421,425],"arrang":381,"array_equ":[19,228,240,248,254,293,324,406],"arraylik":[1,2,3,4,5,6,7,8,9,10,11,19,20,21,23,24,27,29,32,35,37,40,42,43,44,46,48,53,56,57,62,63,64,84,85,88,90,94,95,96,97,98,99,100,101,103,108,109,110,125,126,128,134,139,140,145,149,151,152,153,159,164,165,166,167,181,183,184,186,187,190,191,193,195,196,197,199,200,201,202,207,211,212,220,223,228,229,230,240,241,242,243,248,249,250,252,254,255,256,257,258,271,272,273,274,275,276,277,278,279,280,284,285,286,287,291,292,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,327,329,332,335,337,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,376,377,380,381,382,386,387,388,390,391,392,393,395,396,398,399,400,401,402,403,404,405,407,410],"arriv":[4,314,315,398,403],"ascend":[101,106],"assum":[95,96,273,286,305,314,315,317,348,378,391,398,403,404],"astral":413,"astyp":[284,345,353],"asymmetr":402,"attack":[10,12,13],"atten":[64,85,191,280,344,430],"attenu":[12,13,64,85,191,280,317,344,384,389],"august":430,"author":429,"auto":[290,320,324,331,334,356,362,364,366,367,368,374,406,408,430],"automat":[10,11,12,220,357,411,429,430],"avail":[425,426,429],"averag":[3,6,101,193,194,220,225,226,228,230,231,240,242,245,246,254,285,286,287,313,349,366,386,422,429,430],"average_pow":[6,285,349,430],"avg":[285,286,349],"awgn":[5,228,240,248,250,252,254,286,287,294,313,354,355,372,373,391,392,401,402,410,426,429,430],"awgn_capac":[5,287,391,392,430],"ax":[9,284,285,309,312,326,349,351,353,354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,393,430],"axi":[282,283,285,309,312,326,336,338,339,340,343,349,351,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,397,416,419,423,430],"axvlin":[287,392,416,423],"b":[3,62,84,164,167,190,256,258,259,264,266,267,270,278,284,287,314,315,319,327,361,363,376,381,412,413,421,427],"b_":[6,314,315,386,398,403],"b_c":299,"b_i":[164,167,169,181,193,361,362,363,364,367,368,376,380,421],"b_n":[62,67,68,69,74,75,77,80,81,84,88,108,117,149,164,173,181,190,193,211,213,217,230,256,278,298,314,315,398,403],"b_nt":425,"b_tap":[164,169,181,193,421],"backward":[136,161,181,182,430,431],"band":149,"bandpass":[3,288],"bandpass_fir":[3,288,430],"bandstop":[3,289],"bandstop_fir":[3,289,430],"bandwidth":[6,62,67,68,69,74,78,84,88,89,108,117,149,164,173,181,190,193,211,213,217,230,256,278,287,288,289,298,299,314,315,319,384,386,389,392,398,403,425,427,429,430],"barker":[290,409,429,430],"barker_cod":[290,409,430],"barrio":393,"base":[56,343,356,358,359,360,369,370,375,378,410,430],"baseband":[3,9,67,228,240,248,254,342,360,369,401,402,424,425,430],"bb":[67,424,425],"bb_papr":424,"bch":293,"beamwidth":[5,350],"bec":[5,24,25,26,28,29,31,90,291,292,305,410,429,430],"bec_capac":[5,292,430],"becaus":[220,324,341,400,406,430],"befor":[267,270,341,345,358,425,431],"begin":[240,254,273,294,320,330,360,383,384,389,416,423],"being":427,"below":[293,391,412,420,421],"benchmark":414,"benefici":414,"benefit":358,"ber":[6,9,42,44,101,195,197,228,240,248,250,254,354,373,426,429,430],"berlekamp":[293,430],"berlekamp_massei":[125,151,293,409,430],"best":[150,316,386,387],"beta":[10,12,14],"better":[345,387],"between":[3,6,9,12,18,64,84,85,89,90,110,123,141,147,165,167,179,182,190,191,194,231,242,258,278,280,284,294,299,312,317,326,343,356,358,366,370,374,405,425,429],"bi":[5,294,429,430],"biawgn_capac":[5,294,430],"bibtex":429,"big":[338,340],"bin":[43,229,241,249,253,255,282,283,299,313,322,323,336,338,339,340,343,355,358,370,377,397,416,423,426],"binari":[5,7,19,21,23,24,27,28,32,35,36,43,90,229,241,249,253,255,290,291,292,294,295,296,297,305,320,324,331,348,377,391,404,406,409,410,426,429,430],"binary_cod":[295,409,430],"binaryerasurechannel":[24,25,26,27,28,29,30,31,410,430],"binarysymmetricchannel":[32,33,34,35,36,37,38,39,410,430],"bipolar":[290,320,324,331,334,356,406,430],"bit":[5,6,7,9,24,29,30,32,37,38,42,43,44,45,56,59,60,90,101,103,106,195,197,198,228,229,240,241,248,249,250,253,254,255,287,291,292,294,296,297,307,308,310,327,348,354,373,391,392,395,404,429,430],"black":430,"blackman":[89,288,289,328,333],"blackmanharri":[288,289,328,333],"blank":413,"block":[0,10,19,40,41,62,67,84,108,190,193,211,232,278,303,304,429],"blockinterleav":[0,40,41,430],"bn":[67,68],"bnt":[67,69,425],"bold":379,"bool":[6,10,12,18,62,64,84,85,88,89,97,98,99,100,108,110,114,123,139,141,147,149,164,165,167,170,179,181,182,190,191,193,194,228,230,231,240,248,250,252,254,256,258,274,275,276,277,278,280,285,309,320,322,323,330,341,342,345,346,347,351,352,355,357,358,359,360,368,370,377,378,382,388,394,399,400,409],"boolean":330,"both":[20,128,138,153,163,220,242,298,300,314,317,338,345,355,356,358,359,377,378,379,398],"bottom":[62,84,190,256,258,262,265,278],"bound":[4,282,283,294,314,315,336,338,339,340,343,397,398,403,429,430],"boundari":[62,228],"bp":[1,42,45,195,198,228,240,248,254,307,308,310,395,426],"bpe":[7,348,404],"bpsk":[232,250,252,294,354,372,373,386,387,424],"bpsk_bb_papr":424,"bpsk_ber":426,"bpsk_pb_papr":424,"bpsk_ser":426,"branch":[3,62,84,190,256,258,259,267,270,278,381,413,414],"brown":327,"browser":412,"bsc":[5,32,33,34,36,37,39,90,294,296,297,305,410,429,430],"bsc_capac":[5,294,297,430],"budget":[429,430],"bug":[430,431],"bugbear":413,"build":[413,429],"built":412,"bursti":10,"byte":[7,327],"c":[19,20,24,29,30,32,37,38,40,41,56,59,60,62,63,64,65,67,75,77,78,79,80,81,90,103,104,105,106,107,125,126,128,129,130,131,132,134,135,136,137,138,151,152,153,154,155,156,157,159,160,161,162,163,195,196,209,211,228,240,248,253,254,287,292,293,294,297,317,318,320,334,350,377,391,392,401,402,407,409,425],"c_":[20,125,126,128,129,130,137,151,152,153,154,155,162,293,294,408],"c_0":[19,125,126,137,151,152,162],"c_1":[19,125,126,137,151,152,162],"c_2":151,"c_hard":294,"c_n":[19,125,151],"c_soft":294,"c_ub":294,"calcul":[4,5,7,24,29,32,37,282,283,287,292,294,297,300,313,314,315,317,335,336,337,338,339,340,343,350,386,387,391,392,397,398,403,407,416,423,429,430],"call":[12,18,63,64,84,85,89,109,110,123,136,141,147,161,165,167,179,182,190,191,194,231,257,258,278,279,280],"can":[101,103,104,105,107,211,228,256,282,283,286,313,319,324,343,348,360,363,387,391,397,406,414,416,420,421,423,426,429,431],"cannot":[211,345],"capac":[24,29,30,32,37,38,56,59,60,90,287,292,294,297,391,392,429,430],"carrier":[80,248],"cascad":[240,248,254,360],"case":[84,190,254,273,278,294,299,317,320,330,383,384,389],"caution":[103,104,105,107],"ccdf":[7,271,272],"ccf":430,"cdf":[336,338,339,340,343],"cdot":[20,62,84,88,108,125,128,129,130,142,151,153,154,155,190,193,220,242,256,257,268,278,279,288,289,293,294,314,315,328,329,331,333,336,338,339,340,342,343,353,386,387,398,403],"center":[62,288,289,316,317,325,328,333,358,359,378,385,401,402,430],"center_freq":[3,288,289],"central":[282,416,423],"centroid":[314,315,386,387,398,403],"cf":301,"cgl":[2,299,335,337,429],"chang":[43,47,318,414,431],"channel":[3,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,56,57,58,59,60,61,62,63,64,65,66,90,91,92,93,94,95,228,240,250,252,256,258,265,287,291,292,294,296,297,305,354,372,391,392,429,430],"chapter":[24,32,62,84,90,190,250,252,278,294,320,330,344,381,383],"characterist":[9,20,96,99,125,128,129,130,151,153,154,155,273,276,293,334,346,371,429,430],"characteristic_poli":[19,20,125,126,128,129,130,138,151,152,153,154,155,163,293],"charlong":430,"chaudhari":[10,139],"chebwin":[288,289,328,333],"chebyshev":[288,289,328,333],"check":[413,430],"chi":[283,338,340,393,397,416,423],"chi2":[283,338,340,397,416,423],"chi_":[96,97,98,416,423],"chi_n":[96,97,98,100],"chirp":211,"chu":[408,409,429,430],"ci":412,"circl":[229,241,249,255,421],"circular":[290,320,324,331,334,356,406,408],"cite":429,"claim":[284,353,393],"clairvoy":[2,273],"class":[0,2,3,6,8,10,19,24,32,40,42,56,62,67,84,88,90,96,101,103,104,105,106,107,108,125,131,139,149,151,156,164,181,183,190,193,195,211,220,228,230,232,240,242,248,254,256,273,278,409,410,411,420,421,426,429,430],"classmethod":[125,126,151,152,164,165,181,193],"clockwis":[229,241,249,255],"clone":414,"close":[67,74,76,294,359,411,429,430],"closedlooppl":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,411,425,430],"closer":386,"cmap":[355,370],"cn":[273,286,416,423],"cn0":[67,80],"co":[84,139,190,232,278,342,384,389,394],"code":[42,43,45,195,198,228,229,240,241,248,249,253,254,255,290,295,307,308,310,320,321,324,331,355,377,391,395,406,409,414,426,429,430],"coeff":[126,137,152,162],"coeffici":[42,52,55,62,64,84,85,108,110,164,167,190,191,206,210,258,278,280,334,361,362,363,364,367,368,376,380,381,420,421],"coher":[97,98,99,100,284,294,298,299,314,315,322,323,335,337,341,345,346,347,353,393,398,399,400,403,417,429,430],"coherent_gain":[2,284,298,345,353,416,430],"coherent_gain_loss":[2,299,430],"col":[40,41],"collaps":413,"collect":370,"color":[62,88,181,284,287,345,353,356,358,359,360,369,370,375,378,392,416,423,424,427],"colorbar":[355,360,370],"column":[40,41,381],"com":[284,288,289,316,319,324,328,333,344,393,406,413,414,429],"combin":[284,320,341,353,393],"come":358,"comm":[324,406],"command":[412,413],"commit":414,"common":[416,423],"commonli":299,"commun":[10,24,32,62,67,75,77,78,79,80,81,84,88,90,139,190,211,220,242,250,252,278,320,330,344,381,383,384,389,425,429],"commut":[62,84,190,256,258,262,265,278],"compar":[139,181,193,220,230,242,250,252,284,288,289,298,316,322,323,328,333,334,341,345,346,353,358,363,373,375,386,387,393,416,423,427],"comparison":[139,220,242,284,353,413],"compat":431,"complement":340,"complementari":[271,272],"complex":[3,6,9,42,43,46,48,62,67,84,88,96,97,98,99,100,108,114,149,164,170,181,190,193,195,196,199,200,201,202,209,220,223,228,229,230,232,233,239,240,241,242,243,248,249,253,254,255,256,273,274,275,276,277,278,286,287,306,313,322,323,329,341,342,345,346,347,355,356,358,359,360,362,364,366,367,368,374,377,378,394,399,400,401,402,405,410,416,419,420,421,423,425,426,429,430],"complex128":[3,10,11,42,48,62,84,88,108,114,149,164,170,181,190,193,195,199,200,201,202,209,228,230,232,233,239,240,248,253,254,256,278,329,401,408,409,410],"complex_symbol":[228,240,248,254],"compon":[329,401,402,405],"composit":300,"composite_snr":[4,300,430],"comput":[2,7,42,44,53,56,59,84,90,96,97,98,99,100,114,170,195,197,207,220,228,240,242,248,250,252,254,271,272,273,274,275,276,277,282,283,285,286,298,299,309,312,317,322,323,326,335,336,337,338,339,340,341,343,345,346,347,349,351,356,358,397,399,400,420,421,425,427,429,430],"computation":429,"concaten":[139,421],"condit":[294,416,423],"config":[413,416,419,420,421,423,424,425,426,427],"configur":[56,59,90,125,151,425],"confus":317,"conj":[170,361,362,363,364,367,368,376,380,421,425],"conjug":[401,402,421],"connect":[62,84,190,256,258,262,265,278],"consecut":[41,43,229,241,249,255],"consid":[228,327,358],"consist":[62,84,88,103,104,105,106,107,108,121,139,146,149,190,230,256,278],"constant":[211,228,232,234,236,300,314,315,317,318,345,366,374,398,403,416,421,423,425],"constel":[9,228,240,248,251,254,286,313,329,355,390,408,429,430],"constrained_layout":379,"construct":19,"contain":[101,184,286,320,327],"content":306,"contigu":[416,423],"continu":[9,42,43,181,228,369,387,419,429,430],"contribut":343,"control":[10,11,12,67,220,232,234,384,389,425,429,430],"conveni":[294,420,421],"convent":[240,254,413],"convers":[425,429,430],"convert":[1,3,125,138,151,163,195,199,201,228,240,248,254,302,307,308,310,311,322,323,327,332,341,345,346,347,395,396,399,400,401,402],"convolut":[63,109,190,257,279,282,283,336,338,339,340,343,397],"convolv":108,"coordin":375,"copi":405,"correct":430,"correctli":[314,315,398,403],"correl":[2,9,273,290,314,315,320,324,330,331,334,356,383,393,398,403,406,408,429,430],"correspond":[20,101,106,126,128,134,142,152,153,159,261,334,358,370],"cosin":[8,88,181,196,233,241,249,255,360,378,384,386,387,389,420,429,430],"cost":358,"count":[101,104,313],"count_nonzero":[24,32,90],"counter":[229,241,249,255],"cov":414,"cp":232,"cpfsk":228,"cpm":[8,9,42,43,44,45,46,47,48,49,50,51,52,53,54,55,369,429,430],"cram\u00e9r":[4,314,315,398,403,429,430],"creat":[10,12,19,20,24,28,32,36,40,41,42,43,56,58,62,64,67,74,84,85,88,89,90,95,101,102,108,110,125,126,128,134,138,139,141,149,150,151,152,153,159,163,164,165,167,181,182,183,184,190,191,193,194,195,196,211,213,228,229,230,231,232,234,240,241,248,249,251,254,255,256,258,278,280,286,290,313,318,320,324,331,342,358,359,386,387,390,394,401,402,406,408,419,425,427],"create_x":[416,423],"crest":[6,301],"crest_factor":[6,301,349,430],"critic":[74,83,213,214,358,359,425],"crlb":[4,300,314,315,398,403,430],"cross":[320,324,330,331,334,383,406,408,430],"cryptographi":[125,151,293],"cubic":139,"cumsum":427,"cumul":[271,272],"current":[10,15,125,135,142,151,160,354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,414],"curv":[9,96,99,250,252,273,276,284,300,353,354,371,372,373,430],"custom":[43,62,66,84,86,183,190,192,196,241,249,255,278,281,430],"cutoff":[328,333],"cutoff_freq":[3,328,333],"cw":306,"cycl":[318,356,358,359,375,378],"cyclic":408,"d":[7,63,88,108,112,125,139,142,149,151,230,282,293,312,317,326,336,338,339,340,350,412,413,414,416,423,429,430],"d200":413,"d205":413,"d212":413,"d213":413,"d415":413,"da":[220,242],"da_error":[220,242],"damp":[67,74,83,211,213,214,425],"damping_factor":[67,74,211,213,214],"dash":[284,356,358,359,378],"data":[8,220,225,242,245,303,304,327,348,378,404,429],"data_aided_error":[220,225,242,245],"datetimez":413,"db":[1,5,6,44,53,62,64,67,78,80,85,97,99,101,103,104,105,107,181,191,197,207,228,240,248,250,252,254,274,276,280,284,285,286,287,288,289,294,298,299,300,302,307,308,309,310,311,313,314,315,316,317,319,322,323,328,329,332,333,335,337,341,344,345,346,349,350,351,352,353,354,355,356,357,358,359,365,372,382,388,391,392,393,395,396,398,400,403,416,423,424,426,427,430],"dbi":[317,350],"dbm":[302,332],"dbv":[302,332],"dc":[181,316,359],"dd":[242,425,430],"dd_error":[220,242],"de":[250,252,425,430],"debug":415,"decad":[114,170,361,362,364,367,368,420,425],"decai":[10,12,14,419,421],"decemb":430,"decibel":[285,302,309,332,351,352,382,388,429,430],"decide_symbol":[195,199,228,240,248,254,425,426,430],"decim":[3,42,43,46,48,52,62,84,85,86,87,190,195,196,199,200,201,202,206,209,228,229,240,241,248,249,253,254,255,256,258,260,262,265,278,280,306,334,344,426,429,430],"decis":[32,42,46,195,199,200,220,223,226,228,240,242,243,246,248,254,294,425],"decision_directed_error":[220,226,242,246],"decod":[8,293,303],"decompos":[3,62,84,190,278,381],"decomposit":[267,270,430],"decorrel":393,"decreas":[10,317,341],"def":[416,419,423,424,426],"default":[9,20,43,116,122,126,128,134,136,152,153,159,161,229,241,249,253,255,285,290,293,309,312,320,324,326,331,334,349,351,355,362,364,366,367,368,370,374,377,379,406,426,430],"default_rng":[28,36,58,61,95,286,291,296,305,416,423],"defin":[67,90,108,125,129,130,131,133,137,151,154,155,156,158,162,164,181,286,294,299,305,319,345,346,347,358,359,371,384,389,400,408,411,421,429],"definit":[89,288,289,328,333,358,359,361,362,363,364,366,367,368,374,376,380,430],"deg":[329,425],"degre":[19,42,43,50,125,133,151,158,195,196,204,228,229,240,241,248,249,251,254,255,293,318,320,329,330,331,334,342,350,383,393,394,409,416,423,425,430],"deinterleav":[40,183,186,188],"delai":[3,9,62,63,84,88,108,109,112,115,119,139,142,149,150,190,211,230,232,256,257,261,278,279,303,304,316,325,362,367,385,425,429,430],"delta":[43,47,75,77,116,149,150,172,299,316,318,335,337,363,390,420,421],"demodul":[8,42,46,195,200,228,240,248,254,430],"demonstr":381,"denomin":421,"denot":[282,283,336,338,339,340,343,397],"densiti":[5,9,80,282,283,294,322,323,336,338,339,340,343,346,347,357,360,366,386,391,397,398,399,403,416,423,424,427,429],"depend":[293,317,412,413,415,430],"deprec":425,"deprecationwarn":425,"deriv":[88,336,338,339,340,343],"descrambl":[19,21],"design":[3,43,62,64,66,84,85,86,149,190,191,192,196,241,249,255,278,280,281,288,289,316,328,333,344,412,429,430],"design_bandpass_fir":430,"design_bandstop_fir":430,"design_frac_delay_fir":430,"design_highpass_fir":430,"design_lowpass_fir":430,"design_multirate_fir":430,"design_multirate_tap":430,"designbandpassfir":288,"designbandstopfir":289,"designfracdelayfir":316,"designhighpassfir":328,"designlowpassfir":333,"designmultiratefir":344,"desir":[2,10,12,16,284,286,341,345,353,393,399,400,423,426],"detail":[89,288,289,328,333,358,359,366,374],"detect":[96,97,98,99,100,220,223,225,226,242,243,245,246,273,274,275,276,277,284,294,298,299,322,323,341,345,346,347,353,357,365,371,393,399,400,429,430],"detection_pdf":430,"detector":[9,32,67,73,74,96,213,220,227,242,247,273,284,322,323,341,345,346,347,353,357,399,400,425,429,430],"detector_pdf":[9,322,323,346,347,357,399],"determin":[41,282,283,293,330,336,338,339,340,343,370,397,409,416,423],"detrend":[366,374],"dev":[413,415],"develop":[413,414,415],"deviat":[43,47,314,315,398,403,416,423],"df":[386,394,398,403],"dft":[9,299,358,359,429,430],"diagram":[9,10,19,62,67,84,108,190,193,211,228,232,240,248,254,278,303,304,360,429,430],"diamet":[317,350],"dictat":[63,109,257,279,334],"diff":[356,358,359,378,424],"diff_decod":[8,303,304,430],"diff_encod":[8,228,240,248,250,252,254,303,304,430],"differ":[4,7,43,138,163,164,193,229,241,249,253,255,284,288,289,300,314,316,324,328,333,334,345,356,358,359,363,378,397,398,406,408,427,430],"differenti":[3,8,88,89,228,250,252,294,303,304,356,358,359,378,429,430],"digit":[10,24,32,67,75,77,78,79,80,81,88,90,139,211,220,242,250,252,320,330,383,384,389,425,429,430],"dipol":317,"direct":[136,161,220,226,242,246,430],"directori":[412,414],"dirhtml":412,"disabl":413,"discard":[3,62,84,278,306],"discret":[9,10,62,67,75,77,78,79,80,81,88,90,95,139,181,193,211,220,230,242,286,305,311,358,359,384,387,389,396,410,419,425,429,430],"discretememorylesschannel":[90,91,92,93,94,95,410,430],"dish":[317,350],"displai":[327,355,361,362,364,366,367,368,374,377],"displaystyl":[254,384,389],"dist":413,"distanc":[5,312,317,326,429,430],"distinct":[228,240,254],"distribut":[2,7,271,272,282,283,322,323,336,338,339,340,343,357,397,416,423,430],"divid":[421,427],"divis":[320,330,383],"dmc":[90,91,92,93,95,305,410,429,430],"do":419,"doc":413,"document":430,"doe":[306,358,405],"doesn":430,"dog":327,"dollar":412,"domain":[3,6,285,286,301,306,309,312,318,326,329,342,349,351,352,356,358,359,361,366,370,374,378,382,386,387,388,390,401,402,405,410,416,423,429,430],"domin":393,"done":[84,300,345,412],"dot":[20,95,125,126,128,129,130,132,134,135,137,151,152,153,154,155,157,159,160,162,195,196,209,228,240,248,253,254,282,293,305,334,336,339,377],"doubl":[317,350],"down":[40,381],"downsampl":[3,62,84,278,306,430],"dsp":[288,289,316,328,333,344,429],"dt":[314,315,387,394],"dtft":[9,358,359,429,430],"dtype":[62,84,88,108,114,149,164,170,181,190,193,228,230,232,233,240,248,254,256,278,290,320,324,331,334,348,375,378,404,406,409,425],"dtypelik":[348,404],"dtz":413,"due":[299,345,427],"durat":[3,387,394],"dure":299,"durisi":294,"dw":343,"dwell":393,"dx":[282,283,294,397],"dy":294,"dz":[336,338,339,340],"e":[12,13,14,24,26,27,106,220,242,273,274,275,276,277,285,291,292,294,309,314,315,331,358,359,398,403,408,413,414,420,421,426],"e2":408,"e501":413,"e713":413,"e714":413,"e_":[1,9,42,53,103,104,105,106,107,195,207,228,240,248,252,254,286,294,307,310,311,313,355,372,396,426,429],"e_b":[1,5,9,42,44,103,104,105,106,107,195,197,228,240,248,250,254,307,308,310,354,373,391,395,429,430],"each":[3,62,63,64,84,85,109,190,191,256,257,258,262,265,266,278,279,280,282,283,313,327,334,336,338,339,340,343,344,346,366,370,374,393,397,405,430],"easili":[412,413,415,420,421],"ebn0":[1,9,42,44,195,197,228,240,248,250,254,307,308,354,373,391,426],"ebn0_to_esn0":[1,53,207,252,307,426,430],"ebn0_to_snr":[1,228,240,248,254,308,430],"edg":387,"edit":[413,421],"effect":[149,300,314,398,430],"effici":[62,136,161,228,306,341,350,373,391,392,405],"either":[20,128,153,223,232,243,282,283,313,336,338,339,340,343,397],"electromagnet":[5,407],"element":[7,41,184,327,348,404,425],"els":[413,423,424],"empir":[282,283,336,338,339,340,343,397,416,423],"en":[19,301,331,334,349,408],"enabl":[413,430],"encod":[248,250,252,303,304,429],"encount":[421,427],"end":[136,161,240,254,273,294,317,320,330,360,383,384,389,401,413,416,423],"endpoint":[114,170,421],"energi":[2,5,9,44,53,96,197,207,250,252,273,274,275,276,277,294,307,308,309,310,311,317,319,325,354,372,373,384,385,386,387,389,391,395,396,429,430],"energydetector":[2,96,97,98,99,100,430],"enough":348,"enr":[9,273,274,276,365],"ensur":[314,315,398,403,425],"entir":[285,309,312,326,349,351,430],"entropi":294,"enumer":393,"envelop":[228,314,315,387,420,421],"equal":[62,125,145,228,294,298,300,320,416,423],"equat":[75,77,78,79,80,81,97,98,100,164,193,240,248,254,274,275,277,284,300,314,315,317,353,393,398,403],"equival":[62,84,138,150,163,190,278,286,287,293,311,314,315,316,324,360,396,398,403,406,414,416,419,423],"eras":[24,291],"erasur":[5,24,26,27,28,31,90,291,292,305,410,429],"error":[6,9,12,13,14,32,42,44,53,67,73,74,80,101,102,103,105,106,107,195,197,207,211,213,220,223,225,226,227,228,240,242,243,245,246,247,248,250,252,254,284,297,313,314,315,353,354,372,373,393,398,403,413,425,429,430],"error_r":[101,105,106,426],"errorr":[6,101,102,103,104,105,106,107,426,430],"esn0":[1,9,42,53,195,207,228,240,248,252,254,310,311,372,426],"esn0_to_ebn0":[1,44,197,250,310,430],"esn0_to_snr":[1,311,426,430],"estim":[2,46,67,199,200,284,314,315,353,366,374,393,398,403,425,429],"eta":350,"euclidean":[6,312,429,430],"evalu":[343,420,421],"even":[64,85,150,191,254,280,288,289,316,319,320,328,330,331,333,344,375,383,384,389],"evenli":[114,170],"event":[336,338,339,340],"everi":[3,62,84,101,278,306,419],"evm":[6,313,429,430],"exactli":[149,341],"examin":[149,228,240,248,254,320,331,345,416,423],"exampl":[10,19,24,32,40,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,190,193,194,211,212,213,214,215,216,217,218,219,220,228,230,231,232,233,234,235,236,237,238,239,240,242,248,250,251,252,253,254,264,266,267,269,270,271,272,274,276,278,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,353,354,355,356,357,358,359,360,361,362,363,364,367,368,369,372,373,375,376,377,378,379,380,381,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,416,423,425,430],"exce":[271,346,347],"exceed":[271,272,282,283,336,338,339,340,343,397],"excess":[384,389,427],"exclud":413,"exclus":378,"execut":415,"exist":290,"exp":[10,62,170,232,233,240,248,254,294,319,329,342,361,362,363,364,367,368,376,380,394,408,419,421,425],"expens":[384,389],"explicit":430,"explicitli":[286,345],"exponenti":[3,62,233,306,342,394,401,402,405,419,420,421,430],"express":343,"extend":413,"extens":413,"extract":425,"extrapol":345,"ey":[9,228,240,248,254,360,429,430],"f":[5,20,43,47,62,75,77,84,88,99,114,115,119,125,128,129,130,149,151,153,154,155,170,181,190,232,233,278,286,299,314,315,317,319,330,335,337,342,345,346,350,358,359,383,384,386,389,393,394,398,403,407,408,413,416,419,420,421,423,424,425,426,427],"f401":413,"f403":413,"f_":[42,43,47,54,62,63,67,74,82,84,114,115,117,119,170,173,190,195,196,208,228,229,240,241,248,249,254,255,256,257,268,278,279,282,288,289,294,306,308,311,318,319,328,333,342,356,358,359,360,361,362,364,366,367,368,369,370,374,378,386,387,390,394,395,396,401,402,405,419,420,421,425,427],"f_c":[318,328,333],"f_i":62,"f_start":62,"f_stop":62,"f_x":[282,283,294,336,338,339,340,343,397],"f_y":[283,294,338,340,343,397],"f_z":[282,283,336,338,339,340,343,397],"fa":[2,9,96,97,98,99,100,273,274,275,276,277,284,314,315,341,345,346,347,353,371,393,398,399,400,403,416,423],"face":375,"facecolor":[416,419,420,421,423,424,425,426,427],"fact":[324,406],"factor":[2,3,6,67,74,83,193,194,196,211,213,214,241,249,255,300,301,306,314,315,343,358,398,400,403,405,425],"fade":[250,252],"fals":[2,6,12,62,64,84,85,89,96,97,98,99,100,108,110,114,139,141,164,165,167,170,182,190,191,193,194,228,230,231,240,248,250,252,254,258,273,274,275,276,277,278,280,284,285,291,296,305,309,322,323,330,341,342,345,346,347,351,352,353,355,357,358,360,366,370,371,374,378,382,388,393,394,399,400,401,416,421,423,427,429,430],"far":317,"farrow":[3,139,140,141,142,143,144,145,146,147,148,418,429,430],"farrow1":139,"farrow2":139,"farrow3":139,"farrow4":139,"farrowresampl":[3,139,140,141,142,143,144,145,146,147,148,419,430],"fashion":414,"fast":358,"fdoa":[4,314,429,430],"fdoa_crlb":[4,314,387,430],"featur":431,"februari":430,"fec":391,"feed":40,"feedback":[20,125,128,129,130,151,153,154,155,164,167,168,181,193,293,334,361,362,363,364,367,368,376,380,409,421],"feedback_poli":[20,125,126,128,129,130,138,151,152,153,154,155,163,293],"feedforward":[62,64,84,85,88,108,110,124,149,164,167,169,181,190,191,193,230,256,258,267,270,278,280,361,362,363,364,367,368,376,380,381,420,421],"fft":[62,306,356,358,366,374,401,402,405],"fibonacci":[19,22,125,126,127,128,129,130,131,132,134,135,136,137,138,151,163,293,334,409,429,430],"fibonacci_lfsr":[138,163],"field":[19,125,126,131,136,138,151,152,156,161,163,290,293,317,320,324,331,334,406,409],"fieldarrai":[125,126,127,131,132,135,136,137,151,152,156,157,160,161,162,290,293,320,324,331,334,406,409,413],"fig":[284,353,393],"figsiz":[228,240,248,254,360,361,379,393,420,421,425],"figur":[10,24,32,62,84,88,97,99,139,149,181,190,193,220,228,230,232,240,242,248,250,251,252,253,254,274,276,278,282,283,284,286,287,288,289,290,292,294,297,298,299,300,306,313,314,315,316,317,318,319,320,322,323,324,325,328,329,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,354,355,356,357,358,359,360,361,362,363,364,367,368,369,372,373,375,376,377,378,379,380,384,385,386,387,389,390,391,392,394,397,398,399,400,401,402,403,405,406,408,416,419,420,421,423,424,425,426,427],"file":[413,415],"fill":348,"fill_betweenx":62,"filler":294,"fillstyl":419,"filter":[42,46,52,55,62,63,64,66,67,71,72,74,76,84,85,86,87,88,89,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,142,143,145,146,147,148,149,150,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,190,191,192,193,194,195,200,206,210,211,212,213,214,215,216,217,218,219,228,230,231,240,248,254,256,257,258,261,264,266,267,269,270,278,279,280,281,288,289,306,314,315,316,319,325,328,333,344,360,361,362,363,364,367,368,376,380,381,384,385,389,398,403,405,411,418,427,429,430],"final":[63,109,257,279],"find":[284,293,409],"finit":[3,19,108,125,131,151,156,429,430],"fir":[62,63,64,84,85,87,88,89,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,142,149,150,190,191,193,194,228,230,231,240,248,254,256,257,258,261,264,266,267,269,270,278,279,280,288,289,316,328,333,344,360,361,362,363,364,367,368,376,380,381,418,424,429,430],"fir_10":88,"fir_2":88,"fir_20":88,"fir_40":88,"fir_6":88,"fir_80":88,"firinterpol":430,"first":[62,84,101,136,142,190,191,228,240,261,278,280,300,314,320,330,348,356,363,378,383,398,404,413,415,416,423,430],"fit":413,"fix":[317,430,431],"fixer":413,"fl":[75,77],"flag":414,"flake8":413,"flat":[149,316],"flfsr":[19,20,22,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,163,293,409,430],"flip":[32,296,397],"float":[2,3,6,8,9,10,12,13,14,15,16,17,24,28,30,31,32,36,38,39,42,43,47,50,56,60,62,64,65,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,88,89,90,99,101,103,104,105,107,108,114,115,117,119,139,140,143,149,150,164,165,170,171,173,181,190,191,193,194,195,196,204,211,213,214,216,217,218,220,221,222,224,227,228,229,230,232,234,235,236,237,240,241,242,247,248,249,251,254,255,256,268,276,278,280,282,283,285,286,287,288,289,291,296,301,313,316,318,319,322,323,328,329,333,336,338,339,340,342,343,344,345,349,351,352,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,373,374,377,378,382,384,386,387,388,389,390,394,397,410],"float64":[1,2,3,4,5,6,7,8,24,29,32,37,62,84,88,90,91,96,97,98,99,100,101,106,108,114,149,164,170,181,190,193,195,197,205,207,220,225,226,228,230,232,233,240,242,243,245,246,248,250,252,254,256,271,272,273,274,275,276,277,278,284,287,288,289,290,292,294,297,298,299,300,302,307,308,309,310,311,312,313,314,315,316,317,319,320,324,325,328,331,332,333,334,335,337,341,344,345,346,347,350,353,357,384,385,386,387,389,391,392,393,395,396,398,399,400,402,403,406,407,409],"fluctuat":393,"flush":[62,63,84,88,108,109,113,139,143,149,190,230,256,257,278,279,430],"foa":[4,315,429,430],"foa_crlb":[4,315,387,430],"fold":[282,306],"follow":[96,101,282,283,329,336,338,339,340,343,355,370,374,377,379,381,397,416,423,425,429],"form":[284,294,430],"format":[233,290,320,324,331,334,406,430],"formula":[282,283,320,397],"forward":[181,182,232,239,430],"found":320,"four":[282,419],"fourier":[9,62,358,359,429,430],"fourth":419,"fox":327,"fpsl":430,"frac":[67,75,77,80,81,88,96,97,98,100,108,112,149,164,181,191,193,211,230,240,248,254,273,274,275,280,284,285,286,287,294,299,300,301,307,308,310,311,313,314,315,317,319,329,332,336,338,339,340,342,343,349,350,353,358,384,386,387,388,389,391,392,394,395,396,398,400,403,407,408,416,423,425],"fraction":[3,62,84,139,145,149,150,190,256,268,278,316,319,419,429,430],"fractional_delay_fir":[3,316,430],"fractionaldelai":[3,149,150,430],"fred":[62,84,190,278,344,381],"free":[5,228,240,248,254,317,429],"free_space_path_loss":[5,317,430],"freedom":[393,416,423],"freq":[2,3,5,62,84,88,108,114,149,164,170,181,190,193,230,232,233,256,278,299,306,317,318,342,350,358,359,394,401,402,405,407,419,425],"freq_estim":425,"freq_offset":[67,75,77,337],"freq_rat":[318,394],"frequenc":[2,5,42,43,47,51,62,67,75,77,79,84,88,108,114,115,119,139,149,164,170,181,190,193,211,228,230,232,233,256,278,288,289,299,306,314,315,316,317,318,328,333,335,337,342,350,358,359,361,362,364,366,367,368,374,394,398,401,402,403,405,407,410,427,429,430],"frequency_lock_tim":[67,75],"frequency_offset":[318,410,430],"frequency_respons":[62,84,88,108,114,149,164,170,181,190,193,230,256,278,430],"frequency_response_log":430,"freqz":427,"from":[1,62,101,115,119,125,126,151,152,164,165,181,191,193,209,253,256,258,262,265,280,284,300,302,307,308,310,311,314,315,331,332,334,353,358,366,374,393,395,396,398,403,409,412,416,420,421,423,425,429],"fsk":232,"fspl":[5,317,430],"full":[62,63,84,109,190,256,257,278,279,356],"function":[9,67,76,88,108,149,164,165,193,211,232,271,272,284,287,293,294,298,299,300,306,317,319,322,323,324,335,337,345,346,347,353,354,355,357,358,359,360,363,365,366,370,371,372,374,375,376,384,389,391,392,393,399,405,406,420,421,425,427,429,430],"fundament":[96,97,98,100,273,274,275,277],"furthermor":[317,358],"futur":425,"g":[5,106,330,350,383,414],"g_":[284,345,353,423],"g_c":[298,416],"g_i":329,"g_nc":[284,345,423],"g_q":329,"gain":[2,5,10,11,12,15,17,18,67,70,71,72,73,74,164,165,171,181,193,211,213,216,218,220,227,232,234,235,242,247,284,288,289,298,299,314,315,316,317,319,325,328,333,335,337,345,350,353,384,385,389,398,403,411,416,423,425,429,430],"galoi":[19,20,125,126,128,129,130,131,132,134,135,136,137,138,151,152,153,154,155,156,157,159,160,161,162,163,290,293,320,324,331,334,406,409,429,430],"galois_lfsr":[138,163],"gamma":[2,96,98,100,273,275,277,284,300,314,315,346,347,357,393,398,399,400,403],"gamma_1":[300,314,398],"gamma_2":[300,314,398],"gardner":[125,151,293],"gauss_0p1":427,"gauss_0p2":427,"gauss_0p3":427,"gaussdesign":319,"gaussian":[5,8,88,181,193,230,286,287,294,319,375,410,416,423,429,430],"gca":[284,322,323,416,419,423,426],"gcd":408,"ge":[249,255,284,353,384,389,393],"gener":[3,28,36,58,61,95,228,240,248,254,256,286,290,291,293,295,296,305,320,321,324,330,331,334,357,371,383,394,406,408,409,412,416,423,426,430],"get":412,"get_window":[89,288,289,328,333,358,359,366,374,430],"gf":[19,125,126,129,130,131,132,134,135,136,137,138,151,152,154,155,156,157,159,160,161,162,163,290,293,320,324,331,334,383,406],"ghz":[317,350,407],"git":[412,414],"github":[413,429],"giusepp":294,"given":[2,56,59,90,96,101,103,104,105,107,138,139,140,163,256,267,270,271,272,273,282,283,284,294,299,300,313,314,315,336,338,339,340,343,346,347,353,358,387,397,398,403,420,421],"glfsr":[125,138,151,152,153,154,155,156,157,158,159,160,161,162,163,293,409,430],"global":413,"gmsk":228,"go":[229,241,249,255],"goal":429,"gold":[320,409,429,430],"gold_cod":[320,330,383,409,430],"good":320,"googl":413,"gouraud":374,"grai":[43,228,229,240,241,248,249,253,254,255,321,355,377,409,426,429],"gray_cod":[321,409,430],"greater":[83,287,300,314,315,384,389,392,398,403],"grid":[220,242,379],"group":[9,62,84,88,108,115,149,190,230,256,278,316,362,429],"group_delai":[9,62,84,88,108,115,149,190,230,256,278,316,362,420,421,430],"guarante":[320,431],"h":[2,3,9,42,43,47,51,52,55,62,64,84,85,88,96,108,110,114,116,124,149,164,170,172,181,190,191,193,195,196,205,206,210,211,228,230,240,241,248,249,254,255,256,258,264,267,270,273,278,280,288,289,294,316,319,322,323,328,333,344,346,347,357,361,363,364,368,381,384,389,400,416,423,424,425,427],"h0":[2,322,323,346,347,357,399,416,423,430],"h0_theori":430,"h1":[2,322,323,346,357,416,423,430],"h1_theori":430,"h_":[67,88,425],"h_0p1":[319,384,389],"h_0p2":319,"h_0p3":319,"h_0p5":[384,389],"h_0p9":[384,389],"h_16":[316,384,389],"h_32":316,"h_4":[384,389],"h_64":316,"h_8":[316,384,389],"h_b":[32,297],"h_blackman":[288,289,328,333],"h_blackman_harri":[288,289,328,333],"h_chebyshev":[288,289,328,333],"h_half_sin":325,"h_ham":[288,289,328,333],"h_hann":[288,289,328,333],"h_i":[3,62,84,190,256,266,267,270,278,381,420],"h_kaiser":[288,289,328,333],"h_pad":379,"h_rc_0p1":427,"h_rc_0p5":427,"h_rc_0p9":427,"h_rect":[385,427],"h_srrc":[361,362,363,364,367,368,376,380,426],"h_srrc_0p1":427,"h_srrc_0p5":427,"h_srrc_0p9":427,"h_theori":181,"ha":[62,109,181,190,228,240,248,257,279,286,288,289,306,316,317,319,328,333,350,358,359,373,384,389,393,405,408,416,423,425,426,427],"hadamard":[324,406,409,429,430],"hadamard_cod":[324,406,409,430],"hadamardcod":324,"half":[8,228,240,325,350,429,430],"half_sin":[8,229,325,430],"ham":[6,114,288,289,326,328,333,358,429,430],"hann":[288,289,328,333,366,374],"hard":[32,294],"harri":[62,84,190,278,288,289,328,333,344,381],"hat":[6,9,42,46,103,195,199,200,220,223,228,240,242,243,248,254,313,355,377],"have":[63,150,282,290,298,306,316,324,330,348,356,358,359,378,383,404,405,406,416,423],"he":327,"height":182,"help":[284,288,289,316,319,324,328,333,344,393,406],"helper":430,"here":[420,421,429],"heurist":[242,411,425,430],"hexdump":[7,101,327,429,430],"high":[314,315,324,345,398,403,406],"higher":[317,384,389,427],"highpass":[3,328],"highpass_fir":[3,328,430],"hist":[282,283,313,322,323,336,338,339,340,343,397,416,423],"histogram":[313,355,360,370],"histogram2d":[355,370],"histtyp":[282,283,322,323,336,338,339,340,343,397,416,423],"hold":[62,84,190,191,256,258,262,278,280,314,315,348,398,403,430],"home":[412,421,427],"hook":413,"horizont":329,"hostett":[429,430],"hostetter_sdr_2023":429,"how":[10,319,322,323,325,341,345,346,347,356,358,359,360,369,370,378,384,385,389,399,400,406,415],"howev":[24,32,63,103,104,105,107,109,149,211,257,279,284,292,294,297,324,334,345,356,406,419],"html":[284,288,289,316,319,324,328,333,344,393,406,412],"http":[19,284,288,289,301,316,319,324,328,331,333,334,344,349,393,406,408,412,413,414,429],"hypothes":[96,273],"hypothesi":[2,322,323,400,416,423],"hz":[67,68,74,75,77,80,114,115,117,119,170,173,213,217,287,298,299,302,306,314,315,317,318,319,332,335,337,342,350,386,394,398,401,402,403,407,419],"i":[7,10,12,13,14,18,20,24,28,32,36,43,47,58,61,62,63,64,67,74,83,84,85,88,89,90,95,96,97,98,99,100,101,106,108,109,114,116,122,123,125,126,128,129,130,132,133,134,135,136,138,139,142,147,149,151,152,153,154,155,157,158,159,160,161,163,164,167,169,170,172,178,179,181,184,188,189,190,191,193,194,196,211,213,214,217,220,228,230,233,240,241,242,248,249,254,255,256,257,258,262,265,267,268,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,291,292,293,294,296,297,298,299,300,302,305,307,308,309,310,311,312,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,406,407,408,412,413,414,415,416,419,420,421,423,424,425,426,427,429,430,431],"id":413,"ideal":[290,386,387,426],"ident":[138,163,282,336,339],"identifi":[314,315,398,403],"idft":62,"ieee":19,"ignor":[360,413],"iir":[9,67,76,116,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,193,194,211,215,230,361,362,363,364,367,368,376,380,418,420,425,429,430],"iir_back":181,"iir_forw":181,"iir_trap":181,"im":220,"imaginari":[356,358,359,378],"imbal":[329,410,429],"immateri":412,"immedi":414,"impair":430,"implement":[0,2,3,8,10,19,24,32,40,42,62,84,88,90,96,108,125,139,149,151,164,181,183,190,193,195,211,215,220,228,230,232,240,242,248,254,256,273,278,284,293,353,393,409,410,411,419],"impli":317,"import":[43,196,220,241,249,255,414,416,419,420,421,423,424,425,426,427,429],"improv":[2,298,314,315,345,387,398,403,430],"impuls":[3,9,62,84,88,108,116,149,164,172,181,190,193,230,256,278,288,289,316,319,328,333,344,361,363,384,389,427,429,430],"impulse_respons":[9,62,84,88,108,116,149,164,172,181,190,193,230,256,278,288,289,316,319,325,328,333,344,363,384,385,389,420,421,427,430],"includ":[114,170,413,414,415,429,430],"incorpor":[300,314,315,398,403],"increas":[62,89,287,317,350,387,392,421,430],"increment":[232,233,234,236,425],"independ":[240,282,283,287,336,338,339,340,343,392,393,397],"index":[42,43,47,139,145,195,228,240,248,254,261,320,324,331,334,360,369,370,377,406,409,412],"indic":[10,12,18,43,62,64,84,85,88,89,97,98,99,100,108,110,123,139,141,147,149,164,165,167,179,181,182,188,189,190,191,193,194,196,229,230,231,240,241,248,249,250,252,254,255,256,258,261,274,275,276,277,278,280,285,309,319,320,322,323,325,329,330,334,341,342,345,346,347,351,352,355,356,357,358,359,360,368,369,370,378,382,384,385,388,389,394,399,400,406,416,423],"inf":337,"infinit":[3,164,181,429,430],"inform":[90,248,294,307,308,310,324,395,406],"infrastructur":415,"infti":[282,283,286,294,300,314,315,343,359,386,387,397,398,403],"ini_opt":415,"initi":[17,20,125,126,128,132,134,136,138,151,152,153,157,159,161,163,220,224,242,244,334,416,423,425],"initial_st":[125,126,132,138,151,152,157,163,293],"inlin":[416,419,420,421,423,424,425,426,427],"inlinebackend":[416,419,420,421,423,424,425,426,427],"input":[2,5,8,10,11,19,21,23,24,25,27,32,33,35,40,41,56,57,62,63,64,67,75,77,80,81,84,85,88,89,90,92,94,95,108,109,110,116,121,122,125,127,139,140,141,142,145,146,149,164,165,166,167,172,178,181,182,183,184,186,187,188,189,190,191,193,194,211,212,230,231,232,233,240,248,250,252,254,256,257,258,261,262,271,278,279,280,284,286,287,291,292,294,296,297,300,302,303,304,305,306,322,323,332,341,345,346,347,348,363,376,393,399,400,404,405,410,420,421,423,425,430],"insert":[3,190,278,405],"insid":421,"insight":360,"inst_evm":313,"instanc":[103,104,105,107,228],"instantan":[6,42,43,51,313,382,430],"instanti":[24,30,32,38,56,60,90],"instead":[62,84,190,278,318],"instruct":415,"int":[3,7,8,9,24,28,32,36,40,41,42,43,45,49,54,56,58,61,62,64,84,85,88,89,90,95,101,103,104,107,108,111,112,114,115,116,118,119,122,125,133,136,139,141,142,144,149,150,151,158,161,164,170,172,174,178,181,183,185,190,191,193,195,196,198,203,208,225,226,228,229,230,231,232,239,240,241,245,246,248,249,254,255,256,258,259,260,261,263,264,266,278,280,282,284,285,286,288,289,290,291,295,296,303,304,305,306,309,312,316,319,320,321,322,323,324,325,326,327,328,331,333,334,336,339,341,344,345,346,347,348,349,351,353,357,358,359,360,361,362,363,364,366,367,368,369,370,374,376,381,383,384,385,389,393,399,400,404,405,406,408,409,426],"int64":[101,290,320,324,331,334,406,409],"int_":[6,7,8,19,21,23,24,25,26,27,32,33,34,35,40,42,46,90,92,93,94,125,127,183,188,189,195,199,200,228,240,248,254,282,283,291,294,295,296,303,304,305,314,315,321,326,343,348,386,387,397,398,403,404,409,410],"integ":[62,84,114,170,190,256,260,263,278,334,348],"integr":[3,6,67,72,97,98,99,100,181,182,193,194,211,213,216,230,284,294,298,299,314,315,322,323,335,337,341,345,346,347,353,387,398,399,400,403,411,415,417,421,429,430],"integral_gain":[211,216],"integration_tim":335,"intens":429,"intercept":300,"interest":10,"interfer":360,"interleav":[40,41,183,184,185,186,187,188,189,429,430],"interoper":429,"interpol":[3,42,55,62,84,139,190,191,192,195,210,228,240,248,254,256,258,262,263,265,278,280,344,405,424,426,429,430],"interpret":334,"intersymbol":360,"introduc":431,"invalid":421,"invers":[7,62,272,314,315,335,337,398,403],"inverse_map":[40,183,188],"invok":415,"ipykernel":412,"ipykernel_6147":425,"ipynb":413,"iq":[329,410,429],"iq_imbal":[329,410,430],"irreducible_poli":[128,153],"is_preferred_pair":[320,330,383,409,430],"isf":[416,423],"isi":[240,248,254,360],"iso":317,"isort":413,"isotrop":317,"issu":429,"iter":[136,161,383,409],"its":[12,13,14,108,125,126,134,136,151,152,159,164,165,181,193,284,286,353,359,386,420,421,427],"itself":282,"j":[62,84,114,164,167,168,170,181,184,188,189,190,193,228,232,240,248,254,256,267,270,278,286,305,322,323,329,331,341,342,345,346,347,358,359,394,399,400,408,420,421],"jacobian":343,"jame":293,"januari":430,"jason":293,"jcharlong":430,"jn_c":[322,323,341,345,346,347,399,400],"john":[24,32,90,250,252,320,330,383],"joint":343,"jq":240,"json":[413,415],"juli":430,"jump":327,"june":430,"jupyt":430,"just":334,"justin":430,"k":[6,8,9,19,42,43,45,46,48,49,62,88,103,125,151,181,195,196,198,199,200,201,202,203,220,223,228,240,242,243,248,249,254,255,284,287,303,304,307,308,310,313,345,353,355,358,377,378,391,392,395,416,423,424,427],"k0":[67,70,74,213,232,425],"k1":[67,71,211,425],"k2":[67,72,211,425],"k_0":[67,70,74,213,232,234,235,425],"k_1":[67,71,211,218,425],"k_2":[67,72,211,216,425],"k_p":[67,73,74,213,220,227,242,247,425],"kai":[96,97,98,100,273,274,275,277],"kaiser":[3,62,64,66,84,85,86,190,191,192,278,280,281,288,289,316,328,333,344,430],"kasami":[331,409,429,430],"kasami_cod":[331,409,430],"kei":[8,228,240,248,250,251,252,253,254,422,429,430],"keyword":[354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,380,420,421,430],"khz":[299,398,403],"km":317,"knee":300,"knowledg":273,"known":[220,223,242,243,286,299,324,358,406],"kp":[67,73,74,213,425],"ksp":[401,402],"kwarg":[354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,380],"l":[63,109,149,150,166,194,230,231,257,279,316],"l_":316,"label":[43,62,84,88,97,99,139,149,181,190,193,220,229,230,241,242,249,250,252,255,274,276,278,282,283,284,286,288,289,294,299,300,313,314,315,316,317,318,319,328,329,333,335,336,337,338,339,340,341,343,345,346,353,354,356,358,359,360,361,362,364,365,366,367,368,369,370,372,373,374,378,384,386,387,389,390,393,397,398,400,403,416,419,423,424,425,426,427],"lack":345,"lag":[334,356],"lambda":[5,317,407,416,423],"lambda_":[416,423],"larg":[282,324,331,334,358,406,413],"larger":[289,325,329,355,377,385],"last":[228,240,348,412],"latest":[414,429],"law":[284,322,323,341,345,346,347,353,399,400,430],"lazi":327,"le":[88,150,230,284,316,342,350,353,384,389,393,394],"lead":[228,329,426],"leakag":358,"leaki":[3,193,194,230,429,430],"leakyintegr":[3,193,194,230,430],"least":[293,339],"left":[96,97,98,125,149,151,164,240,242,248,254,273,274,275,277,284,285,286,287,294,299,300,309,312,313,314,315,317,319,320,322,323,329,341,342,343,345,346,347,350,351,352,353,382,384,387,388,389,391,392,394,399,400,408,416,423],"legend":[62,88,149,181,220,242,282,283,284,294,299,300,314,315,317,335,336,337,338,339,340,341,343,345,346,353,393,397,398,400,403,416,423,424,425,427],"len":387,"length":[3,9,43,46,48,62,63,64,84,85,88,89,99,108,109,111,116,122,124,149,150,166,183,186,187,190,191,194,196,200,202,229,230,231,241,249,255,256,257,278,279,280,288,289,290,295,298,299,316,318,319,320,321,324,325,328,331,333,334,344,345,356,358,361,363,366,370,374,376,384,385,389,401,406,408,413,419,424,427,430],"leq":[284,294,336,338,339,340,353,393],"less":[83,284,287,300,314,315,320,341,353,392,393,398,403],"let":[343,345],"level":430,"lf":[67,425],"lfilter":164,"lfloor":[88,108,112,149,230],"lfsr":[19,22,125,126,127,128,129,130,131,132,134,135,136,137,138,151,152,153,154,155,156,157,159,160,161,162,163,293,334,409,429,430],"lib":[416,421,423],"librari":[413,414,415,419,426,429,431],"like":[9,228,294,375,414,429,430],"likelihood":[46,199,200,220,411,425,430],"limit":[5,9,282,287,355,373,377,391,392,426,429,430],"limits_":[96,108,164,273],"line":[327,356,358,359,375,378,379,413,424],"linear":[1,10,15,17,62,88,125,129,131,133,137,139,151,154,156,158,162,190,191,192,195,196,225,226,228,240,245,246,248,254,278,280,281,284,286,293,294,300,302,318,322,323,332,334,341,345,346,347,356,357,364,366,371,374,377,399,400,416,423,429,430],"linearli":[24,191,280,287,392],"linearmodul":[8,9,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,225,226,245,246,248,377,430],"linecollect":370,"linestyl":[88,181,220,228,240,242,248,254,284,287,294,353,355,370,377,379,392,408,416,419,423,426],"linewidth":[370,379,408],"link":[317,429,430],"linspac":[24,32,88,97,114,170,181,250,252,274,282,283,284,287,292,294,297,299,300,317,322,323,335,336,337,338,339,340,343,345,346,353,354,372,373,387,392,397,416,421,423,424,425,426],"lint":[413,414],"list":383,"ll":317,"ln":[284,319],"lo":[67,394,425],"lobe":[358,359,427],"loc":[149,282,283,317,336,338,339,340,343,345,346,397],"local":[67,412,425],"localhost":412,"locat":[300,412,415],"lock":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,211,212,213,214,215,216,217,218,219,232,233,234,235,236,237,238,239,428,429],"lock_tim":[67,77,425],"log":[10,294,361,362,364,366,367,368,370,420,421,425],"log10":[114,170,427],"log2":294,"log_":[284,285,298,299,302,309,317,349,351,352,353,382,388],"log_2":[42,45,195,198,228,240,248,254,287,307,308,310,391,392,395],"logarithm":[287,361,362,364,366,367,368,392,420,421],"loglog":[314,315,371,398,403],"logspac":[99,114,170,276,284,298,314,315,341,345,346,391,393,398,400,403],"long":[299,359,386,387,413],"longer":[357,360,384,389,401],"loop":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,211,212,213,214,215,216,217,218,219,232,233,234,235,236,237,238,239,428,429,430],"loop_filt":425,"loopfilt":[211,212,213,214,215,216,217,218,219,411,425,430],"loss":[2,299,317,335,337,358,429,430],"low":[334,345],"lower":[4,149,228,240,254,314,315,384,389,398,403,416,423,429,430],"lowpass":[3,333],"lowpass_fir":[3,114,333,430],"lyon":421,"m":[8,42,43,45,46,48,49,62,84,95,125,151,164,167,169,181,190,193,195,196,198,199,200,201,202,203,209,220,228,240,242,248,249,253,254,255,256,264,266,278,293,295,298,299,305,307,308,310,314,315,317,320,321,324,330,331,334,335,337,356,377,383,395,406,409,412,413,414,415,416,423,429,430],"m_sequenc":[334,356,409,430],"made":430,"mag":[356,358,359],"magic":413,"magnitud":[6,9,10,12,16,88,149,181,193,230,313,316,334,356,361,364,408,429,430],"magnitude_respons":[9,88,114,149,170,181,193,230,288,289,316,319,325,328,333,344,364,384,385,389,420,421,425,427,430],"mai":[43,229,241,249,253,255,282,313,355,370,374,377,379,421,430],"main":[358,359,414,427],"major":431,"make":[386,387,425,431],"mani":[393,406,413],"manual":[228,240,248,254,413,415],"map":[8,9,40,183,184,188,189,195,196,201,209,228,232,240,248,253,254,313,377,429,430],"map_symbol":[195,201,228,240,248,254,286,313,329,355,390,424,425,426,430],"mapsto":[184,188,189,195,196,209,228,240,248,253,254,377],"march":430,"margin":294,"mark":[284,353],"marker":[84,139,190,232,278,355,375,377,378,419,426],"markers":377,"massei":[293,430],"match":[42,43,46,52,195,196,200,206,228,240,241,248,249,254,255,314,315,360,398,403,430],"math":412,"mathbb":[195,196,209,228,240,248,253,254,287,294,377,408],"mathcal":[2,7,9,24,25,26,27,32,33,34,35,90,92,93,94,95,96,271,272,273,274,275,276,277,282,286,294,305,322,323,346,347,357,400,416,423],"mathrm":[125,151,273,290,293,320,322,323,324,331,334,341,345,346,347,399,400,406,416,423],"mathwork":[284,288,289,316,319,324,328,333,344,393,406],"matlab":[9,190,191,192,278,280,281,375,429,430],"matplotlib":[9,354,355,356,357,358,359,360,362,364,365,366,367,368,369,370,372,374,375,377,378,379,380,416,419,420,421,423,424,425,426,427,429],"matric":381,"matrix":[3,40,90,91,95,305,381],"matt":[421,427,429,430],"max":[300,313,336,338,351,352,416,423],"max_":[90,294],"max_f":[114,170],"max_frequency_offset":[2,335,430],"max_iid_rv":[7,336,430],"max_integration_tim":[2,337,430],"max_open_warn":379,"max_rv":[7,338],"maximum":[2,7,43,46,114,170,199,200,220,294,319,325,334,335,336,337,338,355,377,384,385,389,411,425,429,430],"maximum_length_sequ":334,"maxkb":413,"mean":[6,282,313,314,315,366,374,386,387,388,398,400,403,416,423,427],"meant":[12,13,14,67],"measur":[101,103,285,286,301,302,309,312,313,314,315,326,332,349,351,352,382,386,387,388,398,403,416,423,425,429,430],"median":366,"memoryless":[90,95,305,410,429],"meter":[317,350,407],"method":[3,9,46,66,86,182,191,192,199,200,258,262,265,280,281,288,289,294,316,328,333,344,366,374,420,421,430],"methodologi":393,"mf":[228,240,248,254,360],"mf_sampl":[228,240,248,254],"mhostett":[414,429,430],"mhz":[299,302,332,398,403],"michael":[10,67,75,77,78,79,80,81,88,139,211,220,242,384,389],"mid":[346,347,400],"min":[339,340,416,423],"min_iid_rv":[7,339,430],"min_rv":[7,340],"min_snr":[2,284,341,353,393,430],"minim":[133,158,284,290,293,409],"minimum":[2,7,8,228,284,339,340,341,393,429,430],"minor":[430,431],"minut":412,"minvers":415,"misalign":[324,406],"miscellan":429,"mix":[3,62,342,424,429,430],"ml":[220,224,411,425],"mle":[195,199,228,240,248,254],"mlped":[220,221,222,223,224,225,226,227,411,425,430],"mod":408,"mode":[12,17,18,63,64,85,87,89,109,110,113,120,123,141,143,147,165,167,176,179,182,191,194,231,257,258,269,279,280,290,320,324,331,334,356,360,406,408],"model":[2,24,32,90,125,151,293,393,430],"modem":[225,226,228,240,245,246,248,254],"modifi":[134,135,159,160,430],"modul":[32,42,43,47,48,49,195,196,202,203,205,220,225,226,228,232,240,241,242,245,246,248,249,250,252,254,255,307,308,310,313,354,360,369,372,373,377,378,386,387,391,392,395,412,415,426,429,430],"month":429,"more":[9,43,136,161,229,241,249,253,255,282,283,317,336,338,339,340,343,359,375,386,397,430],"most":[2,335,337,348,404],"move":[3,193,194,230,231,429,430],"movingaverag":[3,193,230,231,430],"msk":[8,228,229,369,429,430],"mu":282,"mu_f":[386,398,403],"mu_t":[314,315,387],"much":[300,427],"multi":413,"multipl":[7,114,170,186,187,348,375,404,426,430],"multipli":[10,67,88,190,278],"multiply_distribut":430,"multiply_rv":[7,343,430],"multir":[3,62,63,84,190,278,344,381,430],"multirate_fir":[3,64,85,191,280,344,430],"multirate_tap":430,"must":[20,64,85,128,141,153,186,187,191,280,286,288,289,294,314,319,328,331,333,342,344,370,384,389,394,398,408,416,423],"mutual":[90,294,378],"mw":[302,332],"myst":412,"n":[1,3,5,6,7,9,10,11,19,20,21,23,40,42,43,46,48,51,52,55,62,63,64,67,84,85,88,89,95,96,99,103,104,105,106,107,108,109,110,111,112,113,115,116,118,119,121,122,124,125,126,127,128,129,130,132,134,135,136,137,139,140,143,146,149,150,151,152,153,154,155,157,159,160,162,164,166,167,168,172,174,178,181,182,183,184,186,187,190,191,193,195,196,200,202,205,206,210,211,212,228,230,232,233,239,240,241,248,249,254,255,256,257,258,262,264,265,266,267,270,271,272,273,275,277,278,279,280,282,284,285,286,287,288,289,290,293,294,295,298,301,305,306,307,308,309,310,311,312,313,316,318,320,321,322,323,324,326,328,329,331,333,336,339,341,342,344,345,346,347,349,351,352,353,356,358,359,360,361,362,363,364,366,367,368,369,370,374,376,378,381,382,386,387,388,390,391,392,394,395,396,399,400,401,402,405,406,408,409,410,425,427,429,430],"n0":426,"n_":[2,97,98,99,100,284,322,323,341,345,346,347,353,393,399,400,423],"n_0":[1,5,9,12,13,14,42,44,53,80,103,104,105,106,107,195,197,207,228,240,248,250,252,254,286,294,307,308,310,311,313,314,315,354,355,372,373,391,395,396,398,403,426,429,430],"n_c":[298,322,323,341,345,346,347,399,400,416,430],"n_f":361,"n_freq":361,"n_nc":[2,96,97,98,99,100,284,322,323,341,345,346,347,353,393,399,400,423,430],"n_point":[225,226,245,246],"n_symbol":[387,424],"n_t":361,"n_time":[361,421],"n_var":[282,336,339],"name":125,"nan":[314,315,345,398,403],"nand":286,"narrow":[384,386,389],"natur":[67,79],"nb":412,"nc":[2,97,98,99,100,284,322,323,341,345,346,347,353,393,399,400,423],"nco":[67,70,74,213,232,233,234,235,236,237,238,239,411,425,429,430],"ncx2":[416,423],"ndarrai":[1,2,3,4,5,6,7,8,10,11,19,21,23,24,25,26,27,29,32,33,34,35,37,40,42,44,46,48,51,53,56,57,59,62,63,84,88,90,91,92,93,94,96,97,98,99,100,101,106,108,109,113,114,115,116,119,121,122,124,125,127,139,140,143,146,148,149,164,166,168,169,170,172,175,177,178,180,181,183,186,187,188,189,190,193,195,197,199,200,201,202,205,207,209,211,212,220,223,225,226,228,230,232,233,239,240,242,243,245,246,248,250,252,253,254,256,257,267,270,271,272,273,274,275,276,277,278,279,284,286,287,288,289,290,291,292,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,324,325,326,328,329,331,332,333,334,335,337,341,342,344,345,346,347,348,350,353,357,375,378,381,384,385,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,408,409,410],"ndim":425,"ne":408,"nearest":359,"nearli":427,"necessari":[345,412],"need":[84,190,278,412,413,415],"neg":[62,136,161,300,317,329],"new":[24,28,32,36,42,43,56,58,61,90,95,101,102,125,128,134,139,141,151,153,159,193,195,196,228,229,240,241,248,249,254,255,318,390],"new_sample_r":419,"next":[125,136,151,161,358,375,383,393,414],"nfrom":284,"nois":[2,5,9,10,44,53,62,67,68,69,74,80,84,88,96,97,98,99,100,101,103,104,105,106,107,108,117,149,164,173,181,190,193,197,207,211,213,217,228,230,240,248,250,252,254,256,273,274,275,276,277,278,284,286,287,294,298,300,307,308,310,311,314,315,322,323,341,345,346,347,354,357,372,373,391,392,393,395,396,398,399,400,403,410,416,423,425,429,430],"noise_bandwidth":[62,67,74,84,88,108,117,149,164,173,181,190,193,211,213,217,230,256,278,314,315,398,403,430],"noiseless":[228,240,248,254,313],"noisi":[42,195,228,240,248,254,286],"nomin":[373,391,392],"non":[63,97,98,99,100,109,257,279,284,322,323,325,334,341,345,346,347,353,356,358,378,385,393,399,400,413,416,417,429,430],"non_coherent_gain":[2,284,345,353,423,430],"none":[9,19,20,24,28,32,36,42,44,56,58,61,62,84,88,89,90,95,99,108,114,116,122,125,126,128,134,139,145,149,151,152,153,159,170,190,196,211,219,230,233,241,249,255,256,276,278,284,285,286,287,288,289,291,296,305,309,312,314,315,320,322,323,326,328,331,333,334,341,343,346,347,348,349,351,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,383,393,398,399,400,403,404,410,416,419,423,424,426],"norm":[282,283,313,319,325,336,338,339,340,343,370,384,385,389,397,416,423],"normal":[7,43,67,69,74,211,213,217,271,272,282,283,288,289,313,319,322,323,325,328,333,336,338,339,340,343,358,359,361,362,364,366,367,368,374,384,385,386,387,389,397,416,423,425,427],"northeast":329,"northwest":329,"note":[10,19,24,32,40,62,84,88,90,96,97,98,100,108,125,129,130,149,151,154,155,164,181,190,193,211,220,228,230,232,240,242,248,254,256,262,265,267,270,273,274,275,277,278,282,283,284,286,287,290,292,293,297,298,299,303,304,316,319,320,329,330,335,336,337,338,339,340,343,345,346,347,350,353,358,359,360,375,381,383,384,389,391,392,393,397,400,408],"notebook":430,"notic":[10,136,138,161,163,300,318,334,341,345,356,358,359,387,401,402,416,419,423,427],"notion":381,"novemb":430,"now":[318,341,401,402,419,430],"np":[10,19,24,25,26,32,33,34,40,62,84,88,90,91,92,93,97,99,101,114,139,149,170,181,183,188,189,190,193,195,205,209,228,230,232,240,248,250,252,253,254,264,266,267,270,274,276,278,282,283,284,286,287,291,292,293,294,296,297,298,299,300,305,313,314,315,317,318,322,323,324,329,335,336,337,338,339,340,341,343,345,346,353,354,355,360,361,362,363,364,367,368,369,370,372,373,376,378,380,381,386,387,390,391,392,393,397,398,400,403,406,416,419,420,421,423,424,425,426,427],"npp_polyv":421,"npt":[43,64,85,114,170,191,196,229,241,249,255,280,361,362,363,364,367,368,376,380],"npy":413,"nstandard":[314,315,398,403],"nu":[416,423],"nuisanc":430,"null":[2,96,273,322,359,400,416,423,427],"numba":[429,430],"number":[28,36,41,42,43,45,54,58,61,62,63,64,65,84,95,97,98,99,100,101,103,104,107,114,115,116,119,122,136,161,170,172,178,190,195,196,198,208,225,226,228,229,239,240,241,245,246,248,249,254,255,256,258,259,267,270,278,282,284,286,291,296,298,305,307,308,310,319,322,323,325,327,336,339,341,345,346,347,348,353,355,357,358,359,360,361,362,363,364,366,367,368,369,374,376,381,384,385,389,393,395,399,400,404],"numer":[7,67,232,234,282,283,294,335,336,337,338,339,340,343,397,411,421,425,429,430],"numpi":[28,36,43,58,61,62,64,84,85,88,95,108,115,119,149,190,191,196,229,230,241,249,255,256,278,280,286,291,296,305,355,356,404,413,416,419,420,421,423,424,425,426,427,429,430],"nyquist":[240,248,254,288,289,306,328,333,360,405,427],"o":[84,139,190,278,419],"object":[42,43,67,74,101,102,195,196,228,229,240,241,248,249,254,255,293,324,361,362,363,364,367,368,376,380,406,425,430],"observ":[220,242,316,346,347,350,360,399],"obtain":[101,282,283,397],"occur":[299,336,338,339,340],"odd":[64,85,150,191,254,280,316,320,330,344,383,401],"off":[196,241,249,255],"offset":[2,8,42,43,50,75,77,84,139,190,195,196,204,228,229,232,233,234,237,240,241,248,249,251,254,255,278,287,299,318,335,337,342,363,378,390,392,410,425,429,430],"offset_r":318,"often":419,"old":[318,390],"omega":[9,62,84,88,108,114,115,119,139,149,164,170,181,190,193,230,232,234,236,256,278,361,362,364,367,368,425],"omega_":[67,78],"omega_3db":[67,78],"omega_n":[67,79,425],"omnidirect":317,"one":[43,108,136,161,164,229,240,241,249,253,255,300,317,319,327,339,361,362,364,366,367,368,374,383,393,401,413,420,421,424,427],"ones":[20,126,128,152,153,191,280,416,423,425],"onli":[17,43,63,64,67,85,87,109,113,114,120,143,170,176,191,196,220,229,241,249,253,255,257,269,279,280,286,290,314,315,317,322,323,324,325,330,334,336,338,341,345,346,347,355,356,358,360,370,383,385,391,398,399,400,403,406,415,416,423,425,426],"onto":[75,77,81],"oo":430,"open":[360,429],"oper":[9,12,96,99,273,276,320,346,371,425,429,430],"oplu":[303,304,320,326],"optim":430,"optimum":[250,252],"option":[233,361,362,364,366,367,368,374,430],"oqpsk":[8,228,240,241,430],"order":[3,42,43,49,62,63,64,67,84,85,88,89,101,106,108,109,118,125,126,132,133,134,135,136,137,138,139,141,144,149,151,152,157,158,159,160,161,162,163,164,174,181,190,191,193,195,196,203,211,213,228,230,240,248,249,254,255,256,257,264,266,278,279,280,286,288,289,290,293,307,308,310,313,319,320,324,328,331,333,334,344,355,360,369,384,386,387,389,390,395,406,411,421,424,425,426,430],"org":[19,301,331,334,349,408],"origin":[12,13,14,136,161,240,254,300,314,315,336,338,339,340,398,403,405,419],"oscil":[67,232,234,411,425,429,430],"other":[103,104,105,107,300,334,393,419,431],"otherwis":320,"out":[19,24,32,40,62,84,90,101,114,125,126,129,130,131,132,134,135,136,137,138,149,151,152,154,155,156,157,159,160,161,162,163,170,183,190,220,228,240,248,251,253,254,256,264,266,267,268,270,271,272,278,290,291,293,295,296,298,299,302,303,304,305,307,308,310,311,313,317,320,321,322,323,324,330,331,332,334,335,337,341,345,346,347,348,350,379,381,383,386,387,391,395,396,399,404,406,407],"output":[10,11,12,16,19,21,23,24,26,27,32,34,35,40,41,57,62,63,84,90,93,94,95,109,116,122,125,127,136,138,139,142,151,161,163,165,167,172,178,182,184,188,189,190,191,193,194,200,211,212,230,232,233,239,256,257,258,261,265,268,278,279,280,284,286,287,290,291,292,293,294,296,297,298,304,305,313,314,315,320,324,331,332,334,345,346,347,348,353,356,363,376,398,400,403,404,406,409,412,419,420,421,423,425,430],"outsid":[149,421],"over":[10,125,129,130,131,132,134,135,136,137,151,154,155,156,157,159,160,161,162,250,252,290,293,298,320,324,327,331,334,406,430],"overdamp":[74,83,213,214],"overlai":62,"overlap":[366,374,424],"oversampl":[358,359,387],"overwritten":[355,370,374,377],"p":[5,7,24,28,29,31,32,36,37,39,62,84,90,91,95,125,151,190,191,232,233,256,263,268,271,272,278,280,282,283,291,292,293,294,296,297,305,336,338,339,340,343,344,346,347,382,397,410],"p_":[2,9,96,97,98,99,100,250,252,273,274,275,276,277,284,285,286,302,305,313,314,315,332,341,345,346,347,349,351,353,354,366,371,372,393,398,399,400,403,416,423],"p_b":[44,197],"p_d":[2,9,96,97,99,273,274,276,284,322,323,341,346,353,365,371,393,416,423,430],"p_d_mea":[416,423],"p_e":[53,207],"p_fa":[2,9,96,97,98,99,100,273,274,275,276,277,284,322,323,341,345,346,347,353,357,371,393,399,400,416,423,430],"p_fa_mea":[416,423],"p_h0":357,"p_h1":357,"p_rc_0p1":427,"p_rc_0p5":427,"p_rc_0p9":427,"p_rect":427,"p_srrc_0p1":427,"p_srrc_0p5":427,"p_srrc_0p9":427,"pacf":430,"pack":[7,101,103,228,240,248,254,327,348,429,430],"packag":[414,421,429],"pad":299,"page":412,"pair":[320,330,383,409,429,430],"papr":[6,228,240,254,349,424,430],"papr_bb_0p1":424,"papr_bb_0p5":424,"papr_bb_0p9":424,"papr_bb_rect":424,"papr_pb_0p1":424,"papr_pb_0p5":424,"papr_pb_0p9":424,"papr_pb_rect":424,"par":317,"parabol":[5,317,350,387],"parabolic_antenna":[5,317,350,430],"parallel":[62,84,190,256,258,265,278],"paramet":[11,12,17,20,21,23,27,28,35,36,41,43,44,46,48,53,57,58,61,63,64,74,75,77,80,85,89,94,95,97,98,99,100,103,104,105,107,109,110,114,115,116,117,119,122,126,127,128,134,136,140,141,143,145,150,152,153,159,161,165,166,167,170,172,173,178,182,184,186,187,191,194,196,197,199,200,201,202,207,212,213,223,224,225,226,229,231,233,234,239,241,243,245,246,249,250,252,255,257,258,271,272,274,275,276,277,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,416,423],"parameter":345,"parser":412,"part":[293,356,358,359,378,425],"partit":[256,258,262,265],"pass":[24,27,28,32,35,36,43,56,57,58,61,62,84,88,90,94,95,108,113,139,143,149,190,230,256,258,262,278,286,291,296,305,313,354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,380,410,412,414,420,421,430],"passband":[3,149,288,289,316,319,325,328,333,384,385,389,401,402,424,430],"patch":431,"path":[317,429],"pb":424,"pb_papr":424,"pccf":430,"pcolormesh":[355,370,374],"pdf":[9,282,283,294,336,338,339,340,343,346,347,357,393,397,399,416,423,429,430],"peak":[6,228,240,254,301,313,314,315,349,351,352,358,398,403,422],"peak_pow":[6,349,351,430],"peak_voltag":[6,301,352,430],"ped":[67,73,74,213,220,224,225,226,242,243,244,245,246,247,411,425,429,430],"peebl":[2,345,353,430],"pei":294,"pep585":413,"per":[7,42,43,45,46,47,48,54,63,109,195,196,198,200,202,208,228,229,233,240,241,248,249,254,255,257,279,286,287,294,307,308,310,311,318,319,325,327,348,355,360,369,384,385,389,395,396,404,413,424,427,430],"percent":430,"percentil":[313,374],"perf":413,"perfect":273,"perfectli":149,"perflint":413,"perform":[10,11,63,67,109,150,250,252,257,279,298,306,316,345,346,386,387,405,411,416,420,421,423,426,429,430],"period":[74,213,217,228,330,383,408,430],"periodogram":[9,62,306,366,386,401,402,405,424,429,430],"permut":[40,183,184,188,189],"persist":[240,248,254,355,360,370,426,430],"phase":[3,9,42,43,47,50,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,108,119,149,190,195,196,204,211,212,213,214,215,216,217,218,219,220,223,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,278,284,318,329,334,342,360,367,368,369,381,393,394,410,416,422,423,428,429,430],"phase_delai":[9,62,84,88,108,119,149,190,230,256,278,367,430],"phase_err":[67,425],"phase_error":425,"phase_error_vari":[67,80],"phase_est":[67,425],"phase_lock_tim":[67,81],"phase_offset":[42,43,50,195,196,204,228,229,240,241,248,249,251,254,255,286,313,329,355,360,377,378,390,424,425,426],"phase_respons":[9,114,170,368,430],"phase_tre":[9,228,369,430],"phi":[9,42,43,50,62,84,88,108,119,149,190,195,196,204,228,229,230,240,241,248,249,251,254,255,256,278,318,329,342,367,394],"physic":317,"pi":[8,10,40,43,47,62,84,88,139,170,181,183,184,188,189,190,220,232,240,242,248,254,255,278,286,294,299,314,315,317,318,319,329,342,350,358,359,361,362,363,364,367,368,376,380,384,389,394,398,403,408,419,420,421,425,429,430],"pi4_qpsk":254,"pickleshar":412,"piecewis":[3,139,141,144],"pimpsk":[8,254,255,430],"pin":430,"pip":[412,413,414,415,429],"pixel":[287,392],"pl":[77,81,413],"place":[184,188,189],"plane":421,"pleas":429,"pll":[67,68,69,74,75,76,77,78,79,80,81,82,83,411,429,430],"plot":[10,24,32,62,84,88,97,99,114,115,116,119,122,139,149,170,172,178,181,190,193,220,228,230,232,240,242,248,250,251,252,253,254,274,276,278,282,283,284,286,287,288,289,290,292,294,297,298,299,300,306,313,316,317,318,319,320,322,323,324,325,328,329,331,333,334,335,336,337,338,339,340,342,343,344,345,346,347,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,384,385,386,387,389,390,391,392,394,397,399,401,402,405,406,408,416,419,420,421,423,425,426,427,429,430],"plr0912":413,"plr0913":413,"plr0915":413,"plr2004":413,"plr5501":413,"plt":[10,24,32,62,84,88,97,99,139,149,181,190,193,220,228,230,232,240,242,248,250,251,252,253,254,274,276,278,282,283,284,286,287,288,289,290,292,294,297,298,299,300,306,313,314,315,316,317,318,319,320,322,323,324,325,328,329,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,353,354,355,356,357,358,359,360,361,362,363,364,367,368,369,372,373,375,376,377,378,380,384,385,386,387,389,390,391,392,393,394,397,398,399,400,401,402,403,405,406,408,416,419,420,421,423,424,425,426,427],"plu":[67,211,213,411,430],"plw0603":413,"pm":[359,427],"pn":[320,330,383],"point":[114,170,225,226,245,246,345,355,357,358,359,366,374],"pole":[9,164,165,170,175,181,193,361,362,363,364,367,368,376,380,420,429],"poli":[19,125,126,129,130,131,134,137,138,151,152,154,155,156,159,162,163,293,331,334,383,409],"poly1":[320,330,409],"poly2":[320,330,409],"polylik":[19,20,125,128,151,153,320,330,331,334,383,409],"polynomi":[3,20,128,129,130,133,139,141,144,153,154,155,158,293,320,330,331,334,383,409,430],"polyphas":[62,63,64,66,84,85,86,190,191,192,256,257,258,259,261,262,265,266,267,270,278,279,280,281,306,344,381,405,429,430],"polyphase_decompos":[3,381,430],"polyphase_matrix":430,"polyphase_ord":[62,64,84,85,190,191,256,264,266,278,280,344,430],"polyphase_tap":[62,84,190,256,264,266,267,270,278],"polyphasefir":[3,62,84,190,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,278,430],"posit":[62,184,188,189,300,320,329],"possibl":[317,429],"post":[284,353],"power":[5,9,228,240,248,254,285,286,287,294,302,313,314,315,319,322,323,325,332,349,350,351,358,359,366,382,384,385,386,389,391,392,398,403,416,422,423,427,429,430],"ppb":430,"ppi":[211,213,411],"ppm":[390,430],"pr":[95,305],"pre":414,"precis":[314,315,324,345,387,398,403,406],"prefer":[320,330,383,409,429,430],"preferred_pair":[320,330,383,409,430],"present":[240,248,254,346,416,423],"preserv":[12,18,64,84,85,89,110,123,141,147,165,167,179,182,190,191,194,231,258,278,280],"prevent":[84,190,240,254,278],"previou":[62,64,84,85,88,89,108,110,121,139,141,145,146,149,165,167,182,190,191,193,194,230,231,256,258,278,280,303,304],"prime":408,"primit":[125,151,320,330,331,334,383,409,430],"primitive_poli":[20,125,126,128,129,130,131,132,134,135,136,137,138,151,152,153,154,155,156,157,159,160,161,162,163,331,334],"print":[125,126,138,151,152,163,293,327,416,419,420,421,423,425],"print_figure_kwarg":[416,419,420,421,423,424,425,426,427],"proaki":[24,32,90,250,252,320,330,383],"probabl":[2,9,24,28,31,32,36,39,90,91,95,96,97,98,99,100,271,272,273,274,275,276,277,282,283,284,291,292,294,296,297,305,322,323,336,338,339,340,341,343,345,346,347,353,357,360,365,371,393,397,399,400,416,423,429,430],"process":[62,84,96,97,98,100,125,127,190,193,230,273,274,275,277,278,300,344,381,421,425,429],"prod_":[336,339],"produc":[2,62,63,109,125,133,136,138,151,158,161,163,190,256,257,258,265,278,279,293,298,319,334,335,337,356,383,409,427],"product":[4,7,298,300,314,315,319,343,398,403,427,429,430],"progress":429,"propag":393,"properti":[13,14,15,16,18,22,25,26,30,31,33,34,38,39,45,47,49,50,51,52,54,55,60,65,66,68,69,70,71,72,73,76,78,79,82,83,86,91,92,93,112,118,121,123,124,129,130,131,132,133,135,137,142,144,146,147,148,154,155,156,157,158,160,162,168,169,171,174,175,177,179,180,188,189,192,198,203,204,205,206,208,209,210,214,215,216,217,218,221,222,227,235,236,237,247,251,253,259,260,261,262,263,264,265,266,267,268,270,281,320,430],"proport":[63,67,71,211,213,218,257,279,314,315,317,350,398,403,411,430],"proportional_gain":[211,218],"prototyp":[3,62,64,84,85,190,191,256,257,258,264,267,270,278,279,280,381,430],"provid":[2,42,44,53,106,195,197,207,228,240,248,250,252,254,294,320,335,337,345,357,360,370,413,429],"psd":[9,44,53,197,207,250,252,307,308,310,311,354,372,373,386,391,395,396,398,403],"psk":[8,220,240,242,248,249,250,251,252,253,254,255,286,313,329,354,355,360,372,373,377,378,386,387,390,424,425,429,430],"psk16":[250,252,354,372,426],"psk16_bb_papr":424,"psk16_ber":426,"psk16_pb_papr":424,"psk16_ser":426,"psk8":[250,252,354,372,426],"psk8_bb_papr":424,"psk8_ber":426,"psk8_bin":426,"psk8_grai":426,"psk8_pb_papr":424,"psk8_ser":426,"public":430,"puls":[42,43,46,48,51,52,55,88,181,195,196,200,202,205,206,210,228,240,241,248,249,254,255,319,325,360,378,384,385,386,387,389,393,422,429,430],"pulse_shap":[42,43,46,48,51,195,196,200,202,205,228,240,241,248,249,254,255,360,378,386,387,424,426],"purpos":430,"py":[413,415,421,425,427],"pycodestyl":413,"pydocstyl":413,"pyflak":413,"pylint":[413,430],"pypi":429,"pyplot":[9,354,355,356,357,362,364,365,366,367,368,370,372,374,375,377,378,379,380,416,419,420,421,423,424,425,426,427],"pyproject":[413,415],"pytest":[414,415],"python":[412,429,430],"python3":[412,413,414,415,421,429],"pyupgrad":413,"q":[7,62,84,85,190,228,240,256,260,268,271,272,273,274,275,277,278,280,294,334,344,408,430],"q_":[96,97,98,100],"qam":[307,308,310,395],"qasim":[10,139],"qinv":[7,271,272,430],"qpsk":[220,240,242,248,250,251,252,254,286,313,354,355,360,372,377,378,390,425,429,430],"qpsk_bb_papr":424,"qpsk_ber":426,"qpsk_pb_papr":424,"qpsk_ser":426,"quad":[88,230],"quadrat":[139,318,430],"quadratur":[8,240,329,360],"quantiti":[103,104,105,106,107],"quartic":[139,430],"quick":327,"quickli":10,"quit":[324,406],"r":[3,10,40,41,62,84,139,140,142,143,190,256,257,268,278,279,294,300,306,307,308,310,313,314,315,319,336,338,339,340,342,343,384,389,394,395,398,400,401,402,403,405,412,413,414,415,421,424,425,427],"rad":[114,170],"rad2deg":425,"radar":393,"radian":[67,78,79,80,220,223,225,226,232,233,234,236,237,242,243,245,246,254,425],"radio":429,"rainbow":[355,370],"rais":[8,88,181,196,241,249,255,360,378,384,386,387,389,420,429],"raised_cosin":[8,196,241,249,255,375,384,427,430],"ramp":[191,211,280],"randint":[19,24,32,90,228,240,248,254,286,291,296,305,313,329,355,360,369,378,386,387,390,424,425,426],"randn":[10,62,193,230,378],"random":[10,19,24,28,32,36,58,61,62,90,95,96,193,228,230,240,248,254,271,282,283,286,291,296,305,313,329,336,338,339,340,343,355,360,369,378,386,387,390,397,416,423,424,425,426,429,430],"rang":[62,220,242,355,425,426],"rao":[4,314,315,398,403,429,430],"raster":[9,360,369,370,429,430],"rate":[3,6,9,10,12,13,14,42,43,44,47,53,62,63,64,67,74,82,84,85,101,102,103,105,106,114,115,117,119,139,140,142,143,170,173,190,191,195,197,207,228,240,248,250,252,254,256,257,260,263,268,278,279,280,298,306,307,308,310,318,342,344,345,354,356,358,359,360,361,362,364,366,367,368,369,370,372,373,374,378,386,387,390,391,394,395,400,401,402,405,410,416,423,429,430],"ratio":[2,5,6,9,43,44,47,53,80,97,99,101,103,104,105,106,107,197,207,228,240,250,252,254,274,276,284,286,287,294,300,307,308,310,311,314,315,322,323,341,345,346,349,354,357,372,373,391,392,393,395,396,398,400,403],"ration":[3,278,280,344,430],"rayleigh":[282,283,336,338,339,340,393,397],"rc":[8,196,240,241,248,249,254,255,360,384],"rc_0p1":427,"rc_0p5":427,"rc_0p9":427,"rc_param":379,"rcdefault":379,"rcparam":[9,379],"re":[220,273,322,323,341,345,346,347,399,400,416,423],"read":40,"real":[3,97,98,100,271,272,274,275,277,286,294,322,323,341,342,345,346,347,356,358,359,362,364,366,367,368,370,374,378,387,394,399,400,401,402,416,420,421,423,424,425,429,430],"rearrang":[300,314,315,398,403],"reason":[317,325,385,412],"receiv":[9,10,42,46,52,96,97,99,101,103,195,199,200,206,220,221,223,224,228,240,242,243,248,250,252,254,273,274,275,276,277,313,317,346,360,365,371,429,430],"reciproc":[125,129,130,151,154,155],"recommend":[190,429],"rect":[43,196,241,249,255,386,387,427],"rectangular":[8,43,182,196,241,249,255,314,315,385,386,387,398,403,424,427,429,430],"recurr":[125,129,133,137,151,154,158,162,293],"recurs":282,"reduc":[12,13,14,299,358],"reduct":[298,299,345,416,423],"ref":[6,220,222,224,284,288,289,313,316,319,324,328,333,344,393,406],"refactor":430,"refer":[10,12,16,19,24,32,62,67,75,77,78,79,80,81,84,88,90,96,97,98,100,101,125,139,151,190,211,220,222,223,224,242,243,250,252,273,274,275,277,278,284,286,288,289,293,294,299,300,301,313,316,318,319,320,324,328,330,331,333,334,344,345,349,353,381,383,384,389,390,393,406,408,421,423,427,429],"referenc":345,"reflector":[5,317,350],"regim":[287,392],"regist":[125,126,137,151,152,162,293,334,409],"rel":[254,408,427],"relat":[62,84,137,162,190,256,267,270,278,319],"relationship":343,"releas":[414,430],"relev":429,"reli":429,"remain":[113,143,306,348],"rememb":193,"remov":[240,248,254,300,314,315,342,366,374,375,398,403,430],"renam":430,"render":413,"repeat":232,"replac":430,"replic":429,"replica":[2,273],"replicacorrel":[2,273,274,275,276,277,430],"repo":[413,414,421,427],"repres":[24,26,27,67,76,291,292,334],"represent":[377,430],"reproduc":293,"requir":[2,63,109,257,279,282,283,284,293,336,338,339,340,341,343,345,393,397,400,412,413,414,415,430],"resampl":[62,84,139,140,141,142,143,144,145,146,147,148,190,256,257,268,278,279,280,281,344,381,418,429,430],"resample_sign":419,"research":429,"resembl":359,"reset":[10,17,24,32,56,61,62,84,87,88,90,108,120,125,134,139,145,149,151,159,164,176,181,190,193,211,219,230,232,238,256,269,278],"resolut":[358,412],"respons":[3,9,62,84,88,108,114,116,122,149,164,170,172,178,181,190,193,230,256,278,288,289,316,319,328,333,344,360,361,362,363,364,368,376,384,389,427,429,430],"result":[228,240,254,282,283,285,309,317,336,338,339,340,343,350,351,352,382,384,388,389,397,416,423,426],"return":[7,8,11,21,23,27,29,35,37,44,46,48,53,57,59,62,63,67,75,77,80,81,84,88,94,97,98,99,100,101,103,104,105,106,107,108,109,111,113,114,115,116,117,119,122,126,127,136,138,140,143,149,152,161,163,164,166,170,172,173,178,181,186,187,190,193,197,199,200,201,202,207,212,223,225,226,230,233,239,243,245,246,250,252,256,257,271,272,274,275,276,277,278,279,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,416,420,421,423,424,426,430],"rev":413,"revers":[125,129,130,136,154,155,161],"revert":379,"rework":430,"rf":[317,424,425],"rfloor":[88,108,112,149,230],"rho":[5,9,373,391,392],"rice":[10,67,75,77,78,79,80,81,88,139,211,220,242,282,283,336,338,339,340,384,389,397],"richard":[284,353],"rician":[282,283,336,338,339,340,397],"right":[96,97,98,125,151,164,240,242,248,254,273,274,275,277,284,285,286,287,294,299,300,309,312,313,314,315,317,319,322,323,329,341,342,343,345,346,347,350,351,352,353,382,384,387,388,389,391,392,394,399,400,408,416,423],"rm":[6,220,221,222,224,301,313,314,315,386,387,388,398,403,429,430],"rms_bandwidth":[6,386,398,403,430],"rms_integration_tim":[6,314,315,387,430],"rms_voltag":[6,301,388,430],"rng":[322,323,416,423],"roc":[9,96,99,273,276,346,371,429,430],"roll":[196,241,249,255,427],"root":[6,8,196,241,249,255,313,314,315,360,378,386,387,388,389,398,403,408,409,420,429],"root_raised_cosin":[8,88,181,196,241,249,255,361,362,363,364,367,368,376,380,389,420,424,426,427,430],"rotat":[254,287,318,342,392,425],"roughli":[24,32,291,296,317,419],"row":[40,41,370],"rrc":375,"ruf":413,"ruff":[413,414,430],"rule":413,"run":[139,412],"runtimewarn":[421,427],"rv":[282,283,336,338,339,340,343,397],"rv_continu":[2,7,282,283,322,323,336,338,339,340,343,357,397],"rv_histogram":[7,282,283,336,338,339,340,343,397],"rx":[220,221,224],"rx_complex_symbol":[228,240,248,254],"rx_filter":[42,52,195,206,228,240,248,254],"rx_sampl":[228,240,248,254,360],"rx_symbol":[228,240,248,254],"s_":[20,125,126,128,132,134,135,151,152,153,157,159,160],"s_0":[20,125,126,128,132,134,135,151,152,153,157,159,160],"s_1":[20,125,126,128,132,134,135,151,152,153,157,159,160,314,398,416,423],"s_2":[314,398],"s_hat":[46,200,425,426],"sach":293,"same":[88,109,125,136,138,151,161,163,220,242,298,314,345,356,358,359,360,375,378,386,387,393,398,420],"sampl":[2,3,12,13,14,42,43,46,48,54,62,63,67,74,82,84,88,97,98,99,100,108,109,112,114,115,116,117,119,122,139,142,145,149,170,172,173,178,190,191,195,196,200,202,208,213,217,228,229,230,232,233,234,236,239,240,241,248,249,254,255,256,257,261,268,278,279,280,284,286,298,306,308,311,318,319,322,323,325,336,339,341,342,345,346,347,353,356,358,359,360,361,362,363,364,366,367,368,369,370,374,376,378,384,385,386,387,389,390,394,395,396,399,400,401,402,405,410,416,419,423,424,425,427,429,430],"sample_r":[6,9,62,67,74,82,84,88,108,114,115,117,119,139,149,164,170,173,181,190,193,230,256,278,306,318,342,356,358,359,360,361,362,364,366,367,368,369,370,374,378,386,387,390,394,401,402,405,419,425,427],"sample_rate_offset":[390,410,430],"satisfi":[342,394],"scalar":425,"scale":[193,220,282,283,314,315,322,323,336,338,339,340,343,358,359,361,362,364,366,367,368,374,397,398,403,416,420,421,423],"scallop":[299,358],"scatter":[355,393],"scheme":[220,225,226,228,240,242,245,246,248,254,430],"scipi":[7,89,108,164,282,283,288,289,328,333,336,338,339,340,343,357,358,359,366,374,397,416,421,423,427,429,430],"scrambl":[19,22,23,430],"scrambler":[19,20,429,430],"sdr":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,419,420,421,423,424,425,426,427,430,431],"se":[252,372],"second":[74,75,77,81,101,211,213,217,298,299,300,314,315,319,320,330,335,337,356,387,394,398,403,413,416,423],"section":[10,88,96,103,104,105,106,107,139,220,242,273,421,425],"see":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,89,104,105,106,107,108,109,110,111,112,113,117,118,120,121,123,124,138,139,140,141,142,143,144,145,146,147,148,163,164,165,166,167,168,169,171,173,174,175,176,177,179,180,182,194,211,212,213,214,215,216,217,218,219,228,231,232,233,234,235,236,237,238,239,240,248,251,253,254,269,278,288,289,298,306,317,319,325,328,333,361,362,363,364,366,367,368,374,376,380,384,385,389,429],"seed":[24,28,32,36,56,58,61,90,95,286,291,296,305,430],"seen":414,"segment":[366,374],"select":[362,364,366,367,368,374,413],"self":[125,126,151,152,164,165,181,193],"semant":431,"semilogi":[287,354,371,372,391,392],"semilogx":[284,298,341,345,353,371,393,400],"sensibl":430,"separ":[41,228,356,360],"septemb":430,"sequenc":[19,21,23,24,27,32,35,40,56,57,90,94,125,129,133,136,138,151,154,158,161,163,183,186,187,290,291,293,296,305,320,324,330,331,334,356,383,406,408,410,429,430],"ser":[6,9,42,53,101,195,207,228,240,248,252,254,372,426,429,430],"server":412,"set":[286,314,315,317,320,324,331,355,358,366,370,374,375,377,379,393,398,403,406,413,415,421],"set_prop_cycl":[284,322,323,416,419,423,426],"set_titl":[284,353,393],"set_xlabel":[284,353,393],"set_ylabel":[284,353,393],"settabl":[10,13,14,16,220,221,222,232,235,236,237],"sever":[114,170,320,331],"seymour":300,"sf":[416,423],"sh":413,"shade":[357,374],"shannon":[5,9,373,391,392,429,430],"shannon_limit_ebn0":[5,9,373,391,430],"shannon_limit_snr":[5,287,392,430],"shape":[42,43,46,48,51,52,55,62,195,196,200,202,205,206,210,228,240,241,248,249,254,255,319,325,360,378,384,385,386,387,389,421,422,429,430],"share":[356,358,359,378],"sharei":[284,353],"shift":[8,125,126,137,151,152,162,228,240,248,250,251,252,253,254,293,320,334,408,409,420,421,422,429,430],"shnidman":[2,393,430],"should":[145,220,228,386,387,414],"show":[416,419,420,421,423,424,425,426,427],"show_zero":[355,370],"showloc":415,"shown":391,"side":[282,283,288,289,319,320,336,338,339,340,343,361,362,364,366,367,368,374,397,420,421,424,427],"sidelob":[290,324,334,356,358,384,389,406,408],"sigma":[96,97,98,99,100,273,274,275,276,277,282,286,287,294,322,323,346,347,399,416,423],"sigma1":[416,423],"sigma2":[2,98,100,275,277,322,323,346,347,357,399,416,423],"sigma_":[80,96,97,99,314,315,398,403],"sigma_1":[416,423],"sigma_2":416,"signal":[2,5,6,9,10,11,12,13,14,42,43,51,62,63,67,75,77,80,81,84,88,89,96,97,98,99,100,101,103,104,105,106,107,108,109,113,139,140,143,149,164,166,181,190,193,195,196,205,211,212,220,221,222,224,228,230,232,233,239,240,241,248,249,254,255,256,257,258,262,265,273,274,275,276,277,278,279,284,285,286,287,288,289,294,298,299,300,301,302,306,307,308,309,310,311,312,314,315,317,318,319,322,323,326,328,329,332,333,341,342,344,345,346,347,349,350,351,352,356,357,358,359,360,361,362,364,366,367,368,369,370,374,378,381,382,386,387,388,390,392,393,394,395,396,398,399,400,401,402,403,405,407,416,420,421,423,425,427,429,430],"signific":[348,404],"significantli":427,"sim":[96,273,282,286,294,413,416,423],"similar":[228,240,254,299,427],"similarli":416,"simon":[250,252],"simpl":294,"simpli":298,"simplifi":[294,413],"simul":[220,225,226,242,245,246,426,429],"sin":[232,286,299,384,389],"sinc":[294,299,335,336,337,338,339,340,343,350,386,412,426],"sine":[8,139,228,233,325,429,430],"sing":293,"singl":[99,114,170,250,252,358,360,425],"sinusoid":[3,248,286,306,318,342,358,359,394,401,402,405,421,430],"site":[412,421],"size":[10,40,41,46,48,95,136,161,183,185,186,187,200,202,293,305,317,322,323,334,358,359,378,419,425,426,427],"sliding_window_view":[416,423],"slightli":345,"slope":[220,242,300],"small":[331,427],"smaller":[282,283,300,319,336,338,339,340,343,345,357,384,389,397,427],"smallest":348,"snr":[1,2,4,5,9,96,97,99,101,103,104,105,106,107,228,240,248,254,284,286,287,294,298,299,300,314,315,322,323,341,345,346,347,353,357,365,392,393,395,396,398,399,400,401,402,403,410,416,423,426,430],"snr1":[4,300,314,398,416,423],"snr2":[4,300,314,398,416,423],"snr_ref":[284,345,353,423],"snr_to_ebn0":[1,44,197,250,395,430],"snr_to_esn0":[1,53,207,252,396,430],"so":[62,240,248,254,284,300,317,319,325,384,385,389,429],"soft":294,"softwar":429,"solid":[284,356,358,359,370,378],"solv":[294,345],"some":412,"someth":429,"sourc":313,"sp":[8,9,42,43,46,48,54,195,196,200,202,208,228,229,240,241,248,249,254,255,308,311,319,325,360,369,378,384,385,386,387,389,395,396,401,402,424,426,427],"space":[5,62,114,170,299,317,429],"span":[8,9,43,196,241,249,255,319,325,360,369,384,385,389,424,427,430],"specif":[64,85,106,114,170,191,280,282,415,427],"specifi":[7,20,101,104,105,107,125,128,134,151,153,159,220,225,226,242,245,246,286,287,305,327,345,412,420,421,430],"spectra":386,"spectral":[5,228,294,306,358,366,373,386,391,392,398,403,424,427],"spectrogram":[9,374,429,430],"spectrum":[306,361,362,364,366,367,368,374,386,398,401,402,403,405],"sphinx":412,"split":62,"spread":[62,324,358,386,387,406],"sqrt":[273,274,275,277,284,294,312,313,314,315,319,322,323,386,387,388,389,398,403,408,416,423,424,425,427],"squar":[6,8,196,241,249,255,283,284,313,314,315,317,322,323,338,340,341,345,346,347,350,353,360,378,386,387,388,389,393,397,398,399,400,403,420,430],"src":[413,427],"srrc":[8,196,240,241,248,249,254,255,360,378,386,387,389,424,426],"srrc_0p1":427,"srrc_0p5":427,"srrc_0p9":427,"standard":[7,271,272,314,315,375,398,403,416,423,429,430],"start":[229,241,249,255,412],"stat":[7,282,283,336,338,339,340,343,357,397,416,423],"state":[19,20,62,63,67,80,84,87,88,108,109,113,120,121,123,126,128,132,134,135,136,138,139,143,145,146,147,149,152,153,157,159,160,161,163,164,176,177,179,181,190,193,230,256,257,269,278,279,293,334,430],"statement":413,"static":[24,29,32,37,56,59,90,96,97,98,99,100,273,274,275,276,277,413],"statist":[2,96,97,98,100,273,274,275,277,322,323,357,430],"steadi":[67,80],"stein":[300,314,315,398,403],"stem":[9,358,359,363,375,376,429,430],"step":[9,62,84,88,108,122,125,132,134,135,136,138,149,151,157,159,160,161,163,164,178,181,190,193,230,232,233,239,256,278,282,283,293,322,323,336,338,339,340,343,376,397,416,423,429],"step_respons":[9,62,84,88,108,122,149,164,178,181,190,193,230,256,278,376,420,421,425,430],"steven":[96,97,98,100,273,274,275,277],"still":430,"stop":[64,85,191,280,344],"stopband":[64,85,191,280,344,384,389],"store":[412,414,415],"str":[7,89,288,289,327,328,333,358,359,360,366,369,370,374,375],"straddl":358,"stream":[12,17,18,63,64,85,87,89,109,110,113,120,123,141,143,147,165,167,176,179,182,191,194,228,231,240,248,254,257,258,269,279,280,421],"stretch":329,"stride":370,"stride_trick":[416,423],"string":[43,196,241,249,255,327,430],"strong":[12,13],"structur":139,"style":[9,375,379,430],"subclass":[125,131,151,156],"subplot":[284,329,353,360,393,425,426],"substitut":[336,338,339,340],"subtract_rv":[7,397,430],"suffici":[282,314,315,398,403],"sum":[7,62,84,96,108,164,190,256,258,265,273,278,282,283,336,339,416,423,427,429,430],"sum_":[108,164,275,277,285,286,287,298,309,312,313,322,323,326,341,345,346,347,358,359,388,399,400,416,423],"sum_distribut":430,"summari":413,"summat":[84,256],"superflu":430,"support":[108,164,430],"suppos":[299,341],"suppress":430,"suptitl":[228,240,248,254,360,393,425,426],"surround":10,"sweep_alpha":424,"swerl":[2,393],"switch":412,"sym":[42,43,47,54,195,196,208,228,229,240,241,248,249,254,255,308,311,319,384,389,395,396,427],"symbol":[6,9,42,43,45,46,47,48,53,54,101,103,106,125,127,136,151,161,190,195,196,198,199,200,201,202,207,208,209,220,223,228,229,240,241,242,243,248,249,250,252,253,254,255,286,293,294,307,308,310,311,313,319,325,355,360,369,372,377,378,384,385,386,387,389,395,396,424,425,427,429,430],"symbol_label":[43,228,229,240,241,248,249,253,254,255,426],"symbol_map":[9,195,196,209,228,240,248,251,253,254,313,377,426,430],"symbol_r":[386,387],"symmetr":[5,32,36,90,296,297,305,401,402,410,429],"symmetri":149,"synchron":429,"synthes":430,"synthesi":[293,429,430],"system":[62,84,190,278,311,317,324,344,381,396,406,413,415,425,429],"t":[9,19,67,69,74,96,125,126,137,151,152,162,211,213,217,273,293,299,314,315,318,319,320,322,323,327,330,335,341,345,346,347,359,378,383,384,387,389,394,398,399,400,403,412,419,430],"t_":[6,75,77,81,125,140,151,314,315,319,384,387,389,427],"t_0":[125,151],"t_1":[125,151],"t_c":[298,299,335,337],"t_lock":425,"tabul":[101,102],"tail":357,"take":[75,77,81,412],"taken":[240,248,254,256],"tap":[3,19,62,64,84,85,88,108,124,125,126,137,138,139,148,149,151,152,162,163,164,168,169,181,190,191,193,230,256,258,264,266,267,270,278,280,293,381,420,421],"target":[2,393],"tau":316,"tau_":[9,62,84,88,108,119,149,190,230,256,278,367],"tau_g":[9,62,84,88,108,115,149,190,230,256,278,362],"tdoa":[4,398,429,430],"tdoa_crlb":[4,386,398,430],"techniqu":[335,337],"ted":[74,213],"ten":[336,339],"tensor":421,"term":[300,314,315,398,403],"test":[96,273,413,414,429,430],"test_psk":415,"testpath":415,"text":[6,24,32,64,85,90,96,191,254,273,280,284,285,286,287,292,294,297,298,299,301,302,313,314,315,317,318,320,330,332,339,340,344,345,349,351,352,383,386,387,388,390,391,392,398,403],"textcoord":[287,392],"textrm":[67,78],"th":[184,188,189,358],"than":[43,83,136,161,228,229,241,249,253,255,284,287,300,314,315,320,325,329,341,353,355,377,385,392,393,398,403,416,423],"thei":[324,334,406,431],"them":[181,431],"theme":412,"theorem":282,"theoret":[99,250,252,284,341,346,347,353,354,372,373,393,399,400,416,423,426,429,430],"theori":[88,96,97,98,100,181,273,274,275,277,284,416,423],"therefor":[240,248,254,320,336,338,339,340,386,427],"theta":[5,232,234,237,350],"theta_":[80,220,223,242,243],"theta_0":425,"thi":[24,28,32,36,43,46,58,61,67,84,95,103,104,105,107,108,136,161,164,190,191,196,199,200,209,220,228,233,240,241,249,253,254,255,278,280,282,283,284,286,291,293,294,296,299,300,305,306,313,314,315,317,322,323,324,336,338,339,340,341,343,345,346,347,353,355,358,360,366,370,374,375,378,386,387,391,393,397,398,399,400,403,405,406,412,414,415,416,419,421,423,425,426,427,429],"think":317,"thought":[319,431],"three":[145,282,419,427],"threshold":[2,96,98,100,273,275,277,322,323,345,346,347,357,393,399,400,416,423,429,430],"threshold_factor":[2,400,430],"through":[24,27,32,35,56,57,62,84,88,90,94,108,113,125,127,139,143,149,190,230,240,254,256,278,291,296,305,318,410,420,421,425],"thu":359,"tild":[42,46,195,199,200,220,223,228,240,242,243,248,254],"time":[2,3,6,10,40,41,67,74,75,77,78,79,80,81,88,95,108,136,139,161,164,181,193,211,213,220,230,240,242,248,254,285,286,298,299,301,305,306,309,311,312,314,315,318,319,324,326,329,335,337,341,342,349,351,352,356,358,359,361,366,370,374,378,382,384,386,387,388,389,390,396,398,401,402,403,405,406,410,416,419,420,421,423,427,429,430],"time_bandwidth":[2,8,298,319],"time_domain":[9,10,84,88,139,181,190,193,228,230,232,240,248,254,278,286,306,318,320,324,331,342,378,387,394,401,402,405,406,416,419,423,424,425,426,427,430],"titl":[10,24,32,62,84,88,139,181,190,220,232,242,250,252,278,282,283,284,286,287,292,294,297,298,299,300,306,313,314,315,317,318,322,323,329,335,336,337,338,339,340,341,342,343,345,346,347,353,354,357,372,373,375,378,390,391,392,393,394,397,398,399,400,401,402,403,405,408,416,419,423,424,425,426,427,429],"titleweight":379,"tmp":425,"to_complex_baseband":[3,401,430],"to_complex_bb":430,"to_fibonacci_lfsr":[151,163],"to_galois_lfsr":[125,138],"to_real_passband":[3,402,430],"to_real_pb":430,"toa":[4,403,429,430],"toa_crlb":[4,386,403,430],"toml":[413,414,415],"tom\u00e1\u0161":294,"tone":[62,358,359],"too":413,"tool":[413,415,429],"toolbox":429,"top":[62,84,190,256,258,262,265,278],"total":[101,317,319,325,384,385,389,427],"track":211,"trail":413,"trajectori":228,"transfer":[67,76,108,164,165,193,211,319,384,389,420,421,425],"transform":[9,62,343,358,359,429,430],"transient":360,"transit":[32,36,39,90,91,95,240,254,296,297,305,406],"translat":430,"transmit":[42,55,103,195,210,220,223,228,240,242,243,248,254,313,360,387],"transmitt":317,"trapezoid":[181,182,430],"tree":[9,369,429,430],"trend":[366,374],"true":[19,84,97,98,99,100,114,129,130,139,154,155,170,190,220,225,226,228,240,242,245,246,248,250,252,254,274,275,276,277,278,282,283,284,285,291,293,296,305,309,320,322,323,324,330,336,338,339,340,341,342,343,345,346,347,351,352,353,355,357,358,359,360,368,370,377,378,379,382,388,394,397,399,400,406,416,423,425,426],"truncat":88,"tupl":[5,62,84,88,89,96,99,101,103,106,108,114,115,119,149,164,170,181,190,193,195,199,200,220,225,226,228,230,240,242,245,246,248,254,256,273,276,278,285,288,289,309,312,326,328,331,333,349,350,351,355,358,359,361,362,363,364,366,367,368,374,376,377,380,383,409],"turn":317,"twice":299,"two":[4,6,7,9,10,193,230,240,248,254,282,283,288,289,299,300,312,320,326,330,334,336,338,340,343,356,358,361,362,364,366,367,368,374,383,397,408,409,416,419,420,421,423,430],"tx":419,"tx_filter":[42,55,195,210,228,240,248,254],"tx_mf":426,"tx_sampl":[228,240,248,254,360],"txt":[412,413,414,415],"ty":419,"type":[43,62,64,84,85,88,108,115,119,125,131,136,149,151,156,161,190,191,196,229,230,241,249,255,256,278,280,293,302,313,322,323,332,341,345,346,347,348,358,359,363,366,371,374,376,399,400,404,413,425,430],"typealiasforwardref":[43,62,64,84,85,88,108,115,119,149,190,191,196,229,230,241,249,255,256,278,280],"u":[122,178,320,376,408,409,420,421,429],"ub":294,"uint8":[228,240,248,254,348,404],"unaffect":[132,157],"unalias":306,"unambigu":[220,242],"uncod":304,"under":[2,9,96,273,322,323,357,400,416,423],"underdamp":[74,83,213,214],"underli":[211,215],"understand":421,"uniform":[324,406],"uniformli":378,"uniniti":293,"uninstal":413,"unit":[1,122,178,211,229,232,241,249,255,286,287,294,302,303,304,322,323,332,347,376,378,399,414,420,421,425,429,430],"unitless":298,"unknown":[416,423],"unpack":[7,101,103,327,404,426,429,430],"unread":375,"unsign":348,"unstabl":421,"unsupport":430,"unwindow":299,"unwrap":[318,368,425],"up":[317,413],"up006":413,"updat":[412,430],"upgrad":430,"upon":414,"upper":[294,345,346],"upsampl":[3,190,278,405,430],"url":429,"us":[3,9,10,17,19,22,24,29,30,32,37,38,43,62,64,66,84,85,86,87,88,89,90,108,110,113,114,120,139,141,143,149,164,165,167,170,176,181,182,190,191,192,193,194,196,199,200,211,215,220,225,226,230,231,240,241,242,245,246,248,249,254,255,256,258,262,265,269,278,280,281,282,283,284,287,288,289,292,293,294,297,313,316,317,320,324,327,328,331,333,334,335,336,337,338,339,340,341,343,344,345,348,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,393,397,404,406,412,413,414,415,420,421,423,425,426,427,429,430,431],"use_styl":[9,379,416,419,420,421,423,424,425,426,427],"user":[103,104,105,107,420,421],"v":[19,84,125,151,232,256,302,320,332,412],"v0":413,"v2":[413,430],"v_":[301,302,332,352,388],"valid":[109,317,334,356,360,369,370],"valu":[12,13,14,42,43,44,53,96,184,195,196,197,207,228,229,240,241,248,249,250,252,254,255,271,272,282,283,290,293,302,303,304,314,315,319,320,324,329,330,331,332,334,336,338,339,340,343,345,355,357,362,364,366,367,368,374,377,383,397,398,403,406,413,421,430],"vari":[139,233],"variabl":[232,233,271,282,283,327,336,338,339,340,343,397,425,429,430],"varianc":[67,80,96,98,100,275,277,282,286,322,323,341,345,346,347,357,399,400,416,423],"variou":[99,149,284,298,299,335,337,345,346,353,391,413,427],"vector":[6,19,20,101,114,125,126,128,132,134,135,145,151,152,153,157,159,160,170,313,429,430],"venv":421,"veri":[220,334,386,387,429],"verif":430,"verifi":320,"version":[358,359,412,414,429,430],"vertic":329,"vi":293,"view":[134,159,413,429],"vmax":374,"vmin":374,"voltag":[302,332,352,388,416,423,429],"vsat":317,"vscode":[413,415],"w":[96,273,286,294,343,413,416,419,420,421,423,424,425,426,427],"w_1":[416,423],"w_pad":379,"wa":[106,287,300,314,315,317,387,398,403,429],"wai":[190,414],"walsh":[324,406,409,429,430],"walsh_cod":[324,406,409,430],"walshcod":406,"warn":[413,430],"wave":[5,139,228,407],"wavelength":[5,407,430],"we":[282,283,336,338,339,340,343,350,360,397,416,423,429],"weak":[12,14],"web":412,"webpag":412,"webserv":412,"welch":[9,366,374],"well":[299,317],"were":[250,252,300,314,315,398,403],"what":317,"whatev":106,"when":[10,17,24,32,62,64,84,85,87,88,108,113,116,120,122,139,143,149,164,172,176,178,181,190,191,193,194,230,256,269,278,280,286,287,291,292,294,296,297,300,311,324,345,358,361,362,363,364,367,368,375,376,391,392,396,406,408,416,419,420,421,423],"where":[63,74,90,95,109,142,196,213,249,255,257,273,279,282,286,287,294,299,305,307,308,310,314,315,319,320,336,338,339,340,358,359,386,387,395,398,403,408,420,421,429],"wherev":414,"whether":[10,12,18,62,64,84,85,88,89,97,98,99,100,108,110,123,139,141,147,149,164,165,167,179,181,182,190,191,193,194,230,231,250,252,256,258,274,275,276,277,278,280,285,309,320,322,323,341,342,345,346,347,351,352,355,357,358,359,360,368,370,378,382,388,394,399,400],"which":[20,126,128,134,141,152,153,159,228,240,254,285,286,287,309,312,314,315,318,326,329,331,334,343,349,350,351,355,360,362,364,366,367,368,373,374,377,379,390,398,403,416,423,427],"while":[329,427],"white":[5,286,287,294,410,416,423,429,430],"whitespac":413,"whole":[114,170,427],"whose":[43,196,229,241,248,249,255,334,358],"why":317,"wide":284,"widen":358,"wider":[319,358],"widget":[416,419,420,421,423,424,425,426,427],"width":[7,149,316,327,359],"wiki":[19,301,331,334,349,408],"wikipedia":[19,301,331,334,349,408],"win":88,"window":[3,84,88,89,114,190,278,288,289,316,328,333,344,358,359,366,374,430],"wireless":[56,410],"within":[393,427],"without":[240,248,254,314,315,398,403,430],"work":10,"worn":427,"wors":426,"worst":[149,299],"wrap":[9,62,375],"wrapper":[108,164,375],"wrong":413,"www":[284,288,289,316,319,324,328,333,344,393,406],"x":[1,3,6,7,8,9,10,11,19,20,21,23,24,25,27,32,33,35,40,42,46,48,56,57,62,63,67,84,88,90,92,94,95,96,101,103,108,109,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,149,151,152,153,154,155,156,157,159,160,161,162,163,164,166,181,182,183,186,187,190,193,195,200,202,211,212,228,230,240,248,254,256,257,258,262,271,272,273,278,279,282,283,285,286,290,291,293,294,296,298,299,301,302,303,304,305,306,309,312,313,314,315,318,322,323,326,329,330,332,334,336,338,339,340,341,342,343,345,346,347,348,349,351,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,374,375,377,378,382,383,386,387,388,390,394,397,399,400,404,405,409,410,414,416,423,424,425,426,430,431],"x1":[306,320,324,331,406],"x1_h0":[416,423],"x1_h0_real_theori":[416,423],"x1_h1":[416,423],"x1_h1_real_theori":[416,423],"x2":[306,320,324,331,406],"x2_h0":[416,423],"x2_h0_real_theori":[416,423],"x2_h1":[416,423],"x2_h1_real_theori":[416,423],"x3":[306,320,324,331,406,408],"x5":408,"x_":[302,332,336,339],"x_1":[282,336,339],"x_2":[282,336,339],"x_3":[282,336,339,408],"x_4":282,"x_5":408,"x_axi":[358,361,362,364,366,367,368,420,421,424,425,430],"x_bb_0p1":424,"x_bb_0p5":424,"x_bb_0p9":424,"x_bb_rect":424,"x_c":[3,401,402],"x_h0":[322,323,416,423],"x_h1":[322,323,416,423],"x_hat":[6,9,101,103,313,355,426],"x_i":[7,24,27,32,35,90,94,95,282,287,291,292,294,296,297,305,329,336,339],"x_label":365,"x_n":[282,336,339],"x_pb_0p1":424,"x_pb_0p5":424,"x_pb_0p9":424,"x_pb_rect":424,"x_q":329,"x_r":[3,401,402],"x_rect":[386,387],"x_srrc":[386,387],"x_srrc_env":387,"x_tild":[42,46,200],"x_u":408,"xdist":414,"xlabel":[24,32,220,242,282,283,284,287,292,294,297,298,299,300,313,314,315,317,335,336,337,338,339,340,341,343,345,391,392,397,398,400,403,416,423,424,425,427],"xlim":[139,300,306,314,315,322,323,338,340,397,398,403,405,424,425,427],"xor":320,"xtick":62,"xx":[9,19,366],"xytext":[287,392],"y":[6,7,8,9,10,11,19,21,23,24,26,27,32,34,35,40,57,62,84,88,90,93,94,95,108,109,113,125,127,139,140,143,151,164,166,181,183,186,187,190,193,211,212,232,233,239,256,257,258,265,278,279,283,286,291,293,294,296,298,303,304,305,306,312,318,326,329,334,338,340,342,343,355,356,358,359,364,366,374,375,377,390,397,405,409,425,426],"y1":[84,139,190,278,329],"y2":[84,139,190,278,329],"y2_h0":416,"y2_h0_real_theori":416,"y2_h1":416,"y2_h1_real_theori":416,"y3":[84,139,190,278],"y4":[84,139,190,278],"y5":[84,139,190,278],"y_":[125,151,293],"y_1":[84,190,278,329],"y_2":[84,190,278,329,416],"y_3":[84,190,278],"y_4":[84,190,278],"y_5":[84,190,278],"y_axi":[88,356,358,359,364,366,374,430],"y_back":181,"y_fir":[193,230],"y_forw":181,"y_i":[24,27,32,35,62,63,90,94,256,287,291,292,294,296,297,305],"y_iir":[193,230],"y_j":[95,305],"y_prev":[8,303,304],"y_t":[125,151,293],"y_trap":181,"yaml":413,"yang":294,"year":429,"yield":[336,338,339,340,383],"ylabel":[24,32,220,242,282,283,284,287,292,294,297,298,299,300,313,314,315,317,318,335,336,337,338,339,340,341,343,345,391,392,397,398,400,403,416,423,424,425,427],"ylim":[10,139,149,193,230,288,289,299,300,306,314,315,316,320,322,323,324,328,331,333,334,335,337,345,373,398,403,405,406,408,420,425,426,427],"you":[317,413,414,415,425,429],"your":[413,415,425,429],"z":[10,67,108,164,181,193,211,232,282,283,293,303,304,336,338,339,340,343,397,408,420,421,425],"z1_h0":[416,423],"z1_h0_theori":[416,423],"z1_h1":[416,423],"z1_h1_theori":[416,423],"z2_h0":[416,423],"z2_h0_theori":[416,423],"z2_h1":[416,423],"z2_h1_theori":[416,423],"z_":282,"z_1":[416,423],"z_2":[416,423],"z_h0":[322,323],"z_h1":[322,323],"zadoff":[408,409,429,430],"zadoff_chu":430,"zadoff_chu_sequ":[408,409,430],"zero":[3,9,62,84,88,108,113,139,143,145,149,150,164,165,170,180,181,190,191,193,211,230,233,256,278,280,299,316,324,325,334,348,356,358,361,362,363,364,367,368,376,380,385,400,401,405,406,420,424,425,427,429,430],"zeros_pol":[9,380,421,430],"zerospol":[164,165,170,181,193,361,362,363,364,367,368,376,380,421],"zeta":[67,74,83,211,213,214],"zm1":421,"zoh":[190,191,192,278,280,281],"zorder":[286,390],"\u03b1":193,"\u03bc":[299,314,315]},"titles":["Coding","Conversions","Detection","Digital signal processing","Estimation","Link budgets","Measurement","Miscellaneous","Modulation","Plotting","sdr.AGC","sdr.AGC.__call__","sdr.AGC.__init__","sdr.AGC.attack","sdr.AGC.decay","sdr.AGC.gain","sdr.AGC.reference","sdr.AGC.reset","sdr.AGC.streaming","sdr.AdditiveScrambler","sdr.AdditiveScrambler.__init__","sdr.AdditiveScrambler.descramble","sdr.AdditiveScrambler.lfsr","sdr.AdditiveScrambler.scramble","sdr.BinaryErasureChannel","sdr.BinaryErasureChannel.X","sdr.BinaryErasureChannel.Y","sdr.BinaryErasureChannel.__call__","sdr.BinaryErasureChannel.__init__","sdr.BinaryErasureChannel.capacities","sdr.BinaryErasureChannel.capacity","sdr.BinaryErasureChannel.p","sdr.BinarySymmetricChannel","sdr.BinarySymmetricChannel.X","sdr.BinarySymmetricChannel.Y","sdr.BinarySymmetricChannel.__call__","sdr.BinarySymmetricChannel.__init__","sdr.BinarySymmetricChannel.capacities","sdr.BinarySymmetricChannel.capacity","sdr.BinarySymmetricChannel.p","sdr.BlockInterleaver","sdr.BlockInterleaver.__init__","sdr.CPM","sdr.CPM.__init__","sdr.CPM.ber","sdr.CPM.bps","sdr.CPM.demodulate","sdr.CPM.index","sdr.CPM.modulate","sdr.CPM.order","sdr.CPM.phase_offset","sdr.CPM.pulse_shape","sdr.CPM.rx_filter","sdr.CPM.ser","sdr.CPM.sps","sdr.CPM.tx_filter","sdr.Channel","sdr.Channel.__call__","sdr.Channel.__init__","sdr.Channel.capacities","sdr.Channel.capacity","sdr.Channel.reset","sdr.Channelizer","sdr.Channelizer.__call__","sdr.Channelizer.__init__","sdr.Channelizer.channels","sdr.Channelizer.method","sdr.ClosedLoopPLL","sdr.ClosedLoopPLL.Bn","sdr.ClosedLoopPLL.BnT","sdr.ClosedLoopPLL.K0","sdr.ClosedLoopPLL.K1","sdr.ClosedLoopPLL.K2","sdr.ClosedLoopPLL.Kp","sdr.ClosedLoopPLL.__init__","sdr.ClosedLoopPLL.frequency_lock_time","sdr.ClosedLoopPLL.iir","sdr.ClosedLoopPLL.lock_time","sdr.ClosedLoopPLL.omega_3dB","sdr.ClosedLoopPLL.omega_n","sdr.ClosedLoopPLL.phase_error_variance","sdr.ClosedLoopPLL.phase_lock_time","sdr.ClosedLoopPLL.sample_rate","sdr.ClosedLoopPLL.zeta","sdr.Decimator","sdr.Decimator.__init__","sdr.Decimator.method","sdr.Decimator.reset","sdr.Differentiator","sdr.Differentiator.__init__","sdr.DiscreteMemorylessChannel","sdr.DiscreteMemorylessChannel.P","sdr.DiscreteMemorylessChannel.X","sdr.DiscreteMemorylessChannel.Y","sdr.DiscreteMemorylessChannel.__call__","sdr.DiscreteMemorylessChannel.__init__","sdr.EnergyDetector","sdr.EnergyDetector.p_d","sdr.EnergyDetector.p_fa","sdr.EnergyDetector.roc","sdr.EnergyDetector.threshold","sdr.ErrorRate","sdr.ErrorRate.__init__","sdr.ErrorRate.add","sdr.ErrorRate.counts","sdr.ErrorRate.error_rate","sdr.ErrorRate.error_rates","sdr.ErrorRate.errors","sdr.FIR","sdr.FIR.__call__","sdr.FIR.__init__","sdr.FIR.__len__","sdr.FIR.delay","sdr.FIR.flush","sdr.FIR.frequency_response","sdr.FIR.group_delay","sdr.FIR.impulse_response","sdr.FIR.noise_bandwidth","sdr.FIR.order","sdr.FIR.phase_delay","sdr.FIR.reset","sdr.FIR.state","sdr.FIR.step_response","sdr.FIR.streaming","sdr.FIR.taps","sdr.FLFSR","sdr.FLFSR.Taps","sdr.FLFSR.__call__","sdr.FLFSR.__init__","sdr.FLFSR.characteristic_poly","sdr.FLFSR.feedback_poly","sdr.FLFSR.field","sdr.FLFSR.initial_state","sdr.FLFSR.order","sdr.FLFSR.reset","sdr.FLFSR.state","sdr.FLFSR.step","sdr.FLFSR.taps","sdr.FLFSR.to_galois_lfsr","sdr.FarrowResampler","sdr.FarrowResampler.__call__","sdr.FarrowResampler.__init__","sdr.FarrowResampler.delay","sdr.FarrowResampler.flush","sdr.FarrowResampler.order","sdr.FarrowResampler.reset","sdr.FarrowResampler.state","sdr.FarrowResampler.streaming","sdr.FarrowResampler.taps","sdr.FractionalDelay","sdr.FractionalDelay.__init__","sdr.GLFSR","sdr.GLFSR.Taps","sdr.GLFSR.__init__","sdr.GLFSR.characteristic_poly","sdr.GLFSR.feedback_poly","sdr.GLFSR.field","sdr.GLFSR.initial_state","sdr.GLFSR.order","sdr.GLFSR.reset","sdr.GLFSR.state","sdr.GLFSR.step","sdr.GLFSR.taps","sdr.GLFSR.to_fibonacci_lfsr","sdr.IIR","sdr.IIR.ZerosPoles","sdr.IIR.__call__","sdr.IIR.__init__","sdr.IIR.a_taps","sdr.IIR.b_taps","sdr.IIR.frequency_response","sdr.IIR.gain","sdr.IIR.impulse_response","sdr.IIR.noise_bandwidth","sdr.IIR.order","sdr.IIR.poles","sdr.IIR.reset","sdr.IIR.state","sdr.IIR.step_response","sdr.IIR.streaming","sdr.IIR.zeros","sdr.Integrator","sdr.Integrator.__init__","sdr.Interleaver","sdr.Interleaver.__init__","sdr.Interleaver.__len__","sdr.Interleaver.deinterleave","sdr.Interleaver.interleave","sdr.Interleaver.inverse_map","sdr.Interleaver.map","sdr.Interpolator","sdr.Interpolator.__init__","sdr.Interpolator.method","sdr.LeakyIntegrator","sdr.LeakyIntegrator.__init__","sdr.LinearModulation","sdr.LinearModulation.__init__","sdr.LinearModulation.ber","sdr.LinearModulation.bps","sdr.LinearModulation.decide_symbols","sdr.LinearModulation.demodulate","sdr.LinearModulation.map_symbols","sdr.LinearModulation.modulate","sdr.LinearModulation.order","sdr.LinearModulation.phase_offset","sdr.LinearModulation.pulse_shape","sdr.LinearModulation.rx_filter","sdr.LinearModulation.ser","sdr.LinearModulation.sps","sdr.LinearModulation.symbol_map","sdr.LinearModulation.tx_filter","sdr.LoopFilter","sdr.LoopFilter.__call__","sdr.LoopFilter.__init__","sdr.LoopFilter.damping_factor","sdr.LoopFilter.iir","sdr.LoopFilter.integral_gain","sdr.LoopFilter.noise_bandwidth","sdr.LoopFilter.proportional_gain","sdr.LoopFilter.reset","sdr.MLPED","sdr.MLPED.A_received","sdr.MLPED.A_reference","sdr.MLPED.__call__","sdr.MLPED.__init__","sdr.MLPED.data_aided_error","sdr.MLPED.decision_directed_error","sdr.MLPED.gain","sdr.MSK","sdr.MSK.__init__","sdr.MovingAverager","sdr.MovingAverager.__init__","sdr.NCO","sdr.NCO.__call__","sdr.NCO.__init__","sdr.NCO.gain","sdr.NCO.increment","sdr.NCO.offset","sdr.NCO.reset","sdr.NCO.step","sdr.OQPSK","sdr.OQPSK.__init__","sdr.PED","sdr.PED.__call__","sdr.PED.__init__","sdr.PED.data_aided_error","sdr.PED.decision_directed_error","sdr.PED.gain","sdr.PSK","sdr.PSK.__init__","sdr.PSK.ber","sdr.PSK.phase_offset","sdr.PSK.ser","sdr.PSK.symbol_map","sdr.PiMPSK","sdr.PiMPSK.__init__","sdr.PolyphaseFIR","sdr.PolyphaseFIR.__call__","sdr.PolyphaseFIR.__init__","sdr.PolyphaseFIR.branches","sdr.PolyphaseFIR.decimation","sdr.PolyphaseFIR.delay","sdr.PolyphaseFIR.input","sdr.PolyphaseFIR.interpolation","sdr.PolyphaseFIR.order","sdr.PolyphaseFIR.output","sdr.PolyphaseFIR.polyphase_order","sdr.PolyphaseFIR.polyphase_taps","sdr.PolyphaseFIR.rate","sdr.PolyphaseFIR.reset","sdr.PolyphaseFIR.taps","sdr.Q","sdr.Qinv","sdr.ReplicaCorrelator","sdr.ReplicaCorrelator.p_d","sdr.ReplicaCorrelator.p_fa","sdr.ReplicaCorrelator.roc","sdr.ReplicaCorrelator.threshold","sdr.Resampler","sdr.Resampler.__call__","sdr.Resampler.__init__","sdr.Resampler.method","sdr.add_iid_rvs","sdr.add_rvs","sdr.albersheim","sdr.average_power","sdr.awgn","sdr.awgn_capacity","sdr.bandpass_fir","sdr.bandstop_fir","sdr.barker_code","sdr.bec","sdr.bec_capacity","sdr.berlekamp_massey","sdr.biawgn_capacity","sdr.binary_code","sdr.bsc","sdr.bsc_capacity","sdr.coherent_gain","sdr.coherent_gain_loss","sdr.composite_snr","sdr.crest_factor","sdr.db","sdr.diff_decode","sdr.diff_encode","sdr.dmc","sdr.downsample","sdr.ebn0_to_esn0","sdr.ebn0_to_snr","sdr.energy","sdr.esn0_to_ebn0","sdr.esn0_to_snr","sdr.euclidean","sdr.evm","sdr.fdoa_crlb","sdr.foa_crlb","sdr.fractional_delay_fir","sdr.free_space_path_loss","sdr.frequency_offset","sdr.gaussian","sdr.gold_code","sdr.gray_code","sdr.h0","sdr.h1","sdr.hadamard_code","sdr.half_sine","sdr.hamming","sdr.hexdump","sdr.highpass_fir","sdr.iq_imbalance","sdr.is_preferred_pair","sdr.kasami_code","sdr.linear","sdr.lowpass_fir","sdr.m_sequence","sdr.max_frequency_offset","sdr.max_iid_rvs","sdr.max_integration_time","sdr.max_rvs","sdr.min_iid_rvs","sdr.min_rvs","sdr.min_snr","sdr.mix","sdr.multiply_rvs","sdr.multirate_fir","sdr.non_coherent_gain","sdr.p_d","sdr.p_fa","sdr.pack","sdr.papr","sdr.parabolic_antenna","sdr.peak_power","sdr.peak_voltage","sdr.peebles","sdr.plot.ber","sdr.plot.constellation","sdr.plot.correlation","sdr.plot.detector_pdfs","sdr.plot.dft","sdr.plot.dtft","sdr.plot.eye","sdr.plot.filter","sdr.plot.group_delay","sdr.plot.impulse_response","sdr.plot.magnitude_response","sdr.plot.p_d","sdr.plot.periodogram","sdr.plot.phase_delay","sdr.plot.phase_response","sdr.plot.phase_tree","sdr.plot.raster","sdr.plot.roc","sdr.plot.ser","sdr.plot.shannon_limit_ebn0","sdr.plot.spectrogram","sdr.plot.stem","sdr.plot.step_response","sdr.plot.symbol_map","sdr.plot.time_domain","sdr.plot.use_style","sdr.plot.zeros_poles","sdr.polyphase_decompose","sdr.power","sdr.preferred_pairs","sdr.raised_cosine","sdr.rectangular","sdr.rms_bandwidth","sdr.rms_integration_time","sdr.rms_voltage","sdr.root_raised_cosine","sdr.sample_rate_offset","sdr.shannon_limit_ebn0","sdr.shannon_limit_snr","sdr.shnidman","sdr.sinusoid","sdr.snr_to_ebn0","sdr.snr_to_esn0","sdr.subtract_rvs","sdr.tdoa_crlb","sdr.threshold","sdr.threshold_factor","sdr.to_complex_baseband","sdr.to_real_passband","sdr.toa_crlb","sdr.unpack","sdr.upsample","sdr.walsh_code","sdr.wavelength","sdr.zadoff_chu_sequence","Sequences","Simulation","Synchronization","Documentation","Formatting","Installation","Unit Tests","Coherent integration","Detection","Digital signal processing","Farrow arbitrary resampler","FIR filters","IIR filters","Modulation","Non-coherent integration","Peak-to-average power","Phase-locked loops","Phase-shift keying","Pulse shapes","Synchronization","sdr","v0.0","Versioning"],"titleterms":{"":[420,421],"0":430,"1":430,"10":430,"11":430,"12":430,"13":430,"14":430,"15":430,"16":[426,430],"17":430,"18":430,"19":430,"2":430,"20":430,"21":430,"22":430,"23":430,"24":430,"25":430,"26":430,"27":430,"3":430,"4":430,"5":430,"6":430,"7":430,"8":[426,430],"9":430,"across":[424,425],"alpha":431,"also":[20,43,44,53,101,103,114,115,116,119,122,125,128,151,153,170,172,178,196,197,207,229,241,249,250,252,255,271,272,284,301,314,315,320,322,323,330,341,345,349,353,357,358,359,383,386,387,391,392,393,398,403,405],"amplitud":411,"an":[419,420,421],"analysi":9,"analyz":[420,421,425],"antenna":5,"applic":3,"approxim":2,"arbitrari":[3,419],"averag":424,"b_n":425,"bandwidth":424,"beta":431,"bit":426,"bpsk":426,"budget":5,"build":412,"capac":5,"chang":430,"channel":[5,410],"citat":429,"close":425,"code":[0,413,415],"coher":[2,416,423],"command":415,"commit":413,"compar":425,"configur":[413,415],"constel":426,"construct":419,"constructor":[10,19,24,32,40,42,56,62,67,84,88,90,101,108,125,139,149,151,164,181,183,190,193,195,211,220,228,230,232,240,242,248,254,256,278],"continu":8,"contributor":430,"control":411,"convers":1,"correl":[3,409],"cosin":427,"creat":[420,421],"curv":426,"data":7,"decibel":1,"delai":[420,421],"depend":414,"design":425,"detect":[2,9,416,417,423],"detector":[2,411],"dev":414,"digit":[3,418,421],"distanc":6,"doc":412,"document":412,"domain":[4,9,424,425],"downsampl":419,"edit":414,"encod":8,"energi":6,"error":[411,426],"estim":[4,9],"examin":[420,421,424],"excess":424,"farrow":419,"featur":429,"filter":[3,9,420,421,425],"fir":[3,420],"folder":414,"format":413,"formatt":413,"frac":419,"frequenc":[4,9,420,421,424,425],"from":[413,414,415],"fulli":[420,421],"gaussian":427,"github":414,"group":[420,421],"h":[420,421],"iid":7,"iir":[3,421],"impair":410,"implement":425,"impuls":[420,421],"independ":7,"input":419,"instal":[412,413,414,415,429],"integ":419,"integr":[2,416,423,425],"interleav":0,"irrat":419,"kei":426,"length":409,"line":415,"linear":[8,409],"link":5,"linter":413,"local":414,"lock":[411,425],"loop":[411,425],"loss":5,"manipul":[3,7],"map":[409,426],"maximum":409,"measur":6,"method":[10,19,24,32,40,42,56,62,67,84,88,90,96,101,108,125,139,149,151,164,181,183,190,193,195,211,220,228,230,232,240,242,248,254,256,273,278],"miscellan":7,"mode":[10,62,84,88,108,139,149,164,181,190,193,230,256,278],"model":410,"modul":[6,8,9,422],"n":[416,419,420,421,423],"nois":[1,4],"nomenclatur":[42,195,228,240,248,254],"non":[2,423],"note":[20,67,128,153,294,300,314,315,317,366,374,386,387,398,403],"omega":[420,421],"onli":[10,62,84,88,108,139,149,164,181,190,193,230,256,278],"orthogon":8,"path":5,"peak":424,"perform":[2,425],"phase":[8,411,425,426],"pll":425,"plot":[9,424],"plu":425,"pole":421,"polynomi":[125,151],"polyphas":3,"power":[6,424],"ppi":425,"pre":413,"probabl":7,"process":[3,418],"properti":[10,19,24,32,40,42,56,62,67,84,88,90,108,125,139,149,151,164,181,183,190,193,195,211,220,228,230,232,240,242,248,254,256,278],"proport":425,"psk":426,"puls":[8,424,427],"pypi":414,"qpsk":[424,426],"r":419,"rais":427,"random":7,"rate":[419,426],"ratio":[1,4],"recurr":409,"releas":431,"resampl":[3,419],"respons":[420,421,425],"root":427,"run":[413,415],"scrambler":0,"sdr":429,"see":[20,43,44,53,101,103,114,115,116,119,122,125,128,151,153,170,172,178,196,197,207,229,241,249,250,252,255,271,272,284,301,314,315,320,322,323,330,341,345,349,353,357,358,359,383,386,387,391,392,393,398,403,405],"sequenc":409,"serv":412,"shape":[8,424,427],"shift":426,"signal":[1,3,4,410,418,419,424],"simul":410,"special":[10,24,32,40,56,62,84,88,90,108,125,139,149,164,181,183,190,193,211,220,230,232,242,256,278],"spectral":9,"squar":427,"stabil":421,"state":[125,151],"step":[420,421,425],"stream":[10,62,84,88,108,139,149,164,181,190,193,230,256,278],"symbol":[8,409,426],"synchron":[411,428],"t":425,"t_":419,"tau_g":[420,421],"test":415,"theoret":2,"time":[4,9,424,425],"unit":415,"upsampl":419,"util":9,"v":[413,415],"v0":430,"variabl":[7,42,195,228,240,248,254],"variou":424,"version":431,"voltag":6,"warn":[306,314,315,398,403,405],"x":419,"x_1":[416,423],"x_2":[416,423],"y":419,"zero":421,"zeta":425}})