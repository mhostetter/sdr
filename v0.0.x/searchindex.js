Search.setIndex({"alltitles":{"16-PSK":[[434,"id2"]],"8-PSK":[[434,"id1"]],"Alpha releases":[[439,"alpha-releases"]],"Amplitude control loops":[[419,"amplitude-control-loops"]],"Analyze PLL closed-loop performance":[[433,"analyze-pll-closed-loop-performance"]],"Antennas":[[5,"antennas"]],"Approximated performance":[[2,"approximated-performance"]],"Arbitrary resampling":[[3,"arbitrary-resampling"]],"BPSK":[[434,"bpsk"]],"Beta releases":[[439,"beta-releases"]],"Bit error rate curves":[[434,"bit-error-rate-curves"]],"Build the docs":[[420,"build-the-docs"]],"Changes":[[438,"changes"],[438,"id1"],[438,"id3"],[438,"id5"],[438,"id7"],[438,"id9"],[438,"id11"],[438,"id13"],[438,"id15"],[438,"id17"],[438,"id19"],[438,"id21"],[438,"id23"],[438,"id25"],[438,"id27"],[438,"id29"],[438,"id31"],[438,"id33"],[438,"id35"],[438,"id37"],[438,"id39"],[438,"id41"],[438,"id43"],[438,"id45"],[438,"id47"],[438,"id49"],[438,"id51"],[438,"id53"],[438,"id55"]],"Channel capacity":[[5,"channel-capacity"]],"Channel models":[[418,"channel-models"]],"Citation":[[437,"citation"]],"Coding":[[0,null]],"Coherent integration":[[2,"coherent-integration"],[424,null]],"Compare lock time across B_n T":[[433,"compare-lock-time-across-b-n-t"]],"Compare step and frequency response across B_n T":[[433,"compare-step-and-frequency-response-across-b-n-t"]],"Compare step and frequency response across \\zeta":[[433,"compare-step-and-frequency-response-across-zeta"]],"Configuration":[[421,"configuration"],[423,"configuration"]],"Constellations":[[434,"constellations"]],"Construct an input signal, x[n] = x(n T_s)":[[427,"construct-an-input-signal-x-n-x-n-t-s"]],"Constructors":[[10,null],[19,null],[24,null],[32,null],[40,null],[42,"constructors"],[56,null],[62,null],[67,"constructors"],[84,null],[88,null],[90,null],[101,"constructors"],[108,null],[125,"constructors"],[139,null],[150,null],[156,null],[158,"constructors"],[171,null],[188,null],[190,null],[197,null],[200,null],[202,"constructors"],[218,null],[227,null],[235,"constructors"],[237,null],[239,null],[247,"constructors"],[249,null],[255,"constructors"],[261,"constructors"],[263,null],[285,null]],"Continuous-phase modulations":[[8,"continuous-phase-modulations"]],"Contributors":[[438,"contributors"],[438,"id2"],[438,"id4"],[438,"id6"],[438,"id8"],[438,"id10"],[438,"id12"],[438,"id14"],[438,"id16"],[438,"id18"],[438,"id20"],[438,"id22"],[438,"id24"],[438,"id26"],[438,"id28"],[438,"id30"],[438,"id32"],[438,"id34"],[438,"id36"],[438,"id38"],[438,"id40"],[438,"id42"],[438,"id44"],[438,"id46"],[438,"id48"],[438,"id50"],[438,"id52"],[438,"id54"],[438,"id56"]],"Conversions":[[1,null]],"Correlation":[[3,"correlation"]],"Correlation sequences":[[417,"correlation-sequences"]],"Create an FIR filter":[[428,"create-an-fir-filter"]],"Create an IIR filter":[[429,"create-an-iir-filter"]],"Data manipulation":[[7,"data-manipulation"]],"Decibels":[[1,"decibels"]],"Design a proportional-plus-integrator (PPI) loop filter":[[433,"design-a-proportional-plus-integrator-ppi-loop-filter"]],"Detect x_1[n]":[[424,"detect-x-1-n"],[431,"detect-x-1-n"]],"Detect x_2[n]":[[424,"detect-x-2-n"],[431,"detect-x-2-n"]],"Detection":[[2,null],[9,"detection"],[425,null]],"Detectors":[[2,"detectors"]],"Digital signal processing":[[3,null],[426,null]],"Distance":[[6,"distance"]],"Documentation":[[420,null]],"Downsample by an irrational rate":[[427,"downsample-by-an-irrational-rate"]],"Downsample the signal by an integer rate":[[427,"downsample-the-signal-by-an-integer-rate"]],"Editable install from local folder":[[422,"editable-install-from-local-folder"]],"Energy":[[6,"energy"]],"Error rate curves":[[434,"error-rate-curves"]],"Estimation":[[4,null]],"Examine frequency domain":[[432,"examine-frequency-domain"]],"Examine the frequency response, H(\\omega)":[[428,"examine-the-frequency-response-h-omega"],[429,"examine-the-frequency-response-h-omega"]],"Examine the group delay, \\tau_g(\\omega)":[[428,"examine-the-group-delay-tau-g-omega"],[429,"examine-the-group-delay-tau-g-omega"]],"Examine the impulse response, h[n]":[[428,"examine-the-impulse-response-h-n"],[429,"examine-the-impulse-response-h-n"]],"Examine the step response, s[n]":[[428,"examine-the-step-response-s-n"],[429,"examine-the-step-response-s-n"]],"Examine the zeros and poles":[[429,"examine-the-zeros-and-poles"]],"Examine time domain":[[432,"examine-time-domain"]],"FIR filtering":[[3,"fir-filtering"]],"FIR filters":[[428,null]],"Farrow arbitrary resampler":[[427,null]],"Features":[[437,"features"]],"Filter analysis":[[9,"filter-analysis"]],"Filter applications":[[3,"filter-applications"]],"Formatting":[[421,null]],"Frequency domain":[[4,"frequency-domain"]],"Frequency-domain":[[9,"frequency-domain"]],"Fully analyze a FIR filter":[[428,"fully-analyze-a-fir-filter"]],"Fully analyze an IIR filter":[[429,"fully-analyze-an-iir-filter"]],"Gaussian":[[435,"gaussian"]],"IID random variables":[[7,"iid-random-variables"]],"IIR filtering":[[3,"iir-filtering"]],"IIR filters":[[429,null]],"Implement a PLL in the phase domain":[[433,"implement-a-pll-in-the-phase-domain"]],"Implement a PLL in the time domain":[[433,"implement-a-pll-in-the-time-domain"]],"Independent random variables":[[7,"independent-random-variables"]],"Install":[[420,"install"],[421,"install"],[423,"install"]],"Install from GitHub":[[422,"install-from-github"]],"Install from PyPI":[[422,"install-from-pypi"]],"Install the dev dependencies":[[422,"install-the-dev-dependencies"]],"Installation":[[422,null],[437,"installation"]],"Interleavers":[[0,"interleavers"]],"Linear modulations":[[8,"linear-modulations"]],"Linear recurrent sequences":[[417,"linear-recurrent-sequences"]],"Link budgets":[[5,null]],"Maximum-length sequences":[[417,"maximum-length-sequences"]],"Measurement":[[6,null]],"Methods":[[19,"methods"],[24,"methods"],[32,"methods"],[40,"methods"],[42,"methods"],[56,"methods"],[62,"methods"],[67,"methods"],[84,"methods"],[88,"methods"],[90,"methods"],[96,null],[101,"methods"],[108,"methods"],[125,"methods"],[150,"methods"],[156,"methods"],[158,"methods"],[171,"methods"],[188,"methods"],[190,"methods"],[197,"methods"],[200,"methods"],[202,"methods"],[218,"methods"],[227,"methods"],[235,"methods"],[237,"methods"],[239,"methods"],[247,"methods"],[249,"methods"],[255,"methods"],[261,"methods"],[263,"methods"],[280,null],[285,"methods"]],"Miscellaneous":[[7,null]],"Modulation":[[6,"modulation"],[8,null],[9,"modulation"],[430,null]],"Non-coherent integration":[[2,"non-coherent-integration"],[431,null]],"Note":[[20,null],[67,null],[128,null],[160,null],[301,null],[305,null],[308,null],[322,null],[323,null],[325,null],[374,null],[382,null],[394,null],[395,null],[406,null],[411,null]],"Orthogonal modulations":[[8,"orthogonal-modulations"]],"Path losses":[[5,"path-losses"]],"Peak-to-average power":[[432,null]],"Phase error detectors":[[419,"phase-error-detectors"]],"Phase-locked loops":[[419,"phase-locked-loops"],[433,null]],"Phase-shift keying":[[434,null]],"Plot across excess bandwidth":[[432,"plot-across-excess-bandwidth"]],"Plotting":[[9,null]],"Poles and digital filter stability":[[429,"poles-and-digital-filter-stability"]],"Polynomials":[[125,"polynomials"],[158,"polynomials"]],"Polyphase FIR filtering":[[3,"polyphase-fir-filtering"]],"Power":[[6,"power"]],"Pre-commit":[[421,"pre-commit"]],"Probability":[[7,"probability"]],"Properties":[[10,"properties"],[19,"properties"],[24,"properties"],[32,"properties"],[40,"properties"],[42,"properties"],[56,"properties"],[62,"properties"],[67,"properties"],[84,"properties"],[88,"properties"],[90,"properties"],[108,"properties"],[125,"properties"],[139,"properties"],[150,"properties"],[156,"properties"],[158,"properties"],[171,"properties"],[188,"properties"],[190,"properties"],[197,"properties"],[200,"properties"],[202,"properties"],[218,"properties"],[227,"properties"],[235,"properties"],[237,"properties"],[239,"properties"],[247,"properties"],[249,"properties"],[255,"properties"],[261,"properties"],[263,"properties"],[285,"properties"]],"Pulse shapes":[[435,null]],"Pulse shaping":[[8,"pulse-shaping"]],"QPSK":[[434,"qpsk"]],"QPSK signal with various pulse shapes":[[432,"qpsk-signal-with-various-pulse-shapes"]],"Raised cosine":[[435,"raised-cosine"]],"Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})":[[427,"resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]],"Run from VS Code":[[421,"run-from-vs-code"],[423,"run-from-vs-code"]],"Run from the command line":[[423,"run-from-the-command-line"]],"Run the formatter":[[421,"run-the-formatter"]],"Run the linter":[[421,"run-the-linter"]],"Scramblers":[[0,"scramblers"]],"See also":[[20,null],[43,null],[44,null],[53,null],[101,null],[103,null],[114,null],[115,null],[116,null],[119,null],[122,null],[125,null],[128,null],[158,null],[160,null],[177,null],[179,null],[185,null],[203,null],[204,null],[214,null],[236,null],[248,null],[256,null],[257,null],[259,null],[262,null],[278,null],[279,null],[291,null],[309,null],[322,null],[323,null],[328,null],[330,null],[331,null],[338,null],[349,null],[353,null],[357,null],[361,null],[365,null],[366,null],[367,null],[391,null],[394,null],[395,null],[399,null],[400,null],[401,null],[406,null],[411,null],[413,null]],"Sequences":[[417,null]],"Serve the docs":[[420,"serve-the-docs"]],"Signal impairments":[[418,"signal-impairments"]],"Signal manipulation":[[3,"signal-manipulation"]],"Signal-to-noise ratio":[[4,"signal-to-noise-ratio"]],"Signal-to-noise ratios":[[1,"signal-to-noise-ratios"]],"Simulation":[[418,null]],"Special methods":[[10,"special-methods"],[24,"special-methods"],[32,"special-methods"],[40,"special-methods"],[56,"special-methods"],[62,"special-methods"],[84,"special-methods"],[88,"special-methods"],[90,"special-methods"],[108,"special-methods"],[125,"special-methods"],[139,"special-methods"],[150,"special-methods"],[156,"special-methods"],[171,"special-methods"],[188,"special-methods"],[190,"special-methods"],[197,"special-methods"],[200,"special-methods"],[218,"special-methods"],[227,"special-methods"],[237,"special-methods"],[239,"special-methods"],[249,"special-methods"],[263,"special-methods"],[285,"special-methods"]],"Spectral estimation":[[9,"spectral-estimation"]],"Square-root raised cosine":[[435,"square-root-raised-cosine"]],"State":[[125,"state"],[158,"state"]],"Streaming mode only":[[10,"streaming-mode-only"],[62,"streaming-mode-only"],[84,"streaming-mode-only"],[88,"streaming-mode-only"],[108,"streaming-mode-only"],[139,"streaming-mode-only"],[150,"streaming-mode-only"],[156,"streaming-mode-only"],[171,"streaming-mode-only"],[188,"streaming-mode-only"],[197,"streaming-mode-only"],[200,"streaming-mode-only"],[237,"streaming-mode-only"],[263,"streaming-mode-only"],[285,"streaming-mode-only"]],"Symbol encoding":[[8,"symbol-encoding"]],"Symbol error rate curves":[[434,"symbol-error-rate-curves"]],"Symbol mapping":[[434,"symbol-mapping"]],"Symbol-mapping sequences":[[417,"symbol-mapping-sequences"]],"Synchronization":[[419,null],[436,null]],"Theoretical performance":[[2,"theoretical-performance"]],"Time domain":[[4,"time-domain"]],"Time-domain":[[9,"time-domain"]],"Unit Tests":[[423,null]],"Upsample by an irrational rate":[[427,"upsample-by-an-irrational-rate"]],"Upsample the signal by an integer rate":[[427,"upsample-the-signal-by-an-integer-rate"]],"Utility":[[9,"utility"]],"Variable nomenclature":[[42,null],[202,null],[235,null],[247,null],[255,null],[261,null]],"Versioning":[[439,null]],"Voltage":[[6,"voltage"]],"Warning":[[314,null],[322,null],[323,null],[406,null],[411,null],[413,null]],"sdr":[[437,null]],"v0.0":[[438,null]],"v0.0.1":[[438,"v0-0-1"]],"v0.0.10":[[438,"v0-0-10"]],"v0.0.11":[[438,"v0-0-11"]],"v0.0.12":[[438,"v0-0-12"]],"v0.0.13":[[438,"v0-0-13"]],"v0.0.14":[[438,"v0-0-14"]],"v0.0.15":[[438,"v0-0-15"]],"v0.0.16":[[438,"v0-0-16"]],"v0.0.17":[[438,"v0-0-17"]],"v0.0.18":[[438,"v0-0-18"]],"v0.0.19":[[438,"v0-0-19"]],"v0.0.2":[[438,"v0-0-2"]],"v0.0.20":[[438,"v0-0-20"]],"v0.0.21":[[438,"v0-0-21"]],"v0.0.22":[[438,"v0-0-22"]],"v0.0.23":[[438,"v0-0-23"]],"v0.0.24":[[438,"v0-0-24"]],"v0.0.25":[[438,"v0-0-25"]],"v0.0.26":[[438,"v0-0-26"]],"v0.0.27":[[438,"v0-0-27"]],"v0.0.28":[[438,"v0-0-28"]],"v0.0.29":[[438,"v0-0-29"]],"v0.0.3":[[438,"v0-0-3"]],"v0.0.4":[[438,"v0-0-4"]],"v0.0.5":[[438,"v0-0-5"]],"v0.0.6":[[438,"v0-0-6"]],"v0.0.7":[[438,"v0-0-7"]],"v0.0.8":[[438,"v0-0-8"]],"v0.0.9":[[438,"v0-0-9"]]},"docurls":["api/coding/","api/conversions/","api/detection/","api/dsp/","api/estimation/","api/link-budgets/","api/measurement/","api/misc/","api/modulation/","api/plotting/","api/sdr.AGC/","api/sdr.AGC.__call__/","api/sdr.AGC.__init__/","api/sdr.AGC.attack/","api/sdr.AGC.decay/","api/sdr.AGC.gain/","api/sdr.AGC.reference/","api/sdr.AGC.reset/","api/sdr.AGC.streaming/","api/sdr.AdditiveScrambler/","api/sdr.AdditiveScrambler.__init__/","api/sdr.AdditiveScrambler.descramble/","api/sdr.AdditiveScrambler.lfsr/","api/sdr.AdditiveScrambler.scramble/","api/sdr.BinaryErasureChannel/","api/sdr.BinaryErasureChannel.X/","api/sdr.BinaryErasureChannel.Y/","api/sdr.BinaryErasureChannel.__call__/","api/sdr.BinaryErasureChannel.__init__/","api/sdr.BinaryErasureChannel.capacities/","api/sdr.BinaryErasureChannel.capacity/","api/sdr.BinaryErasureChannel.p/","api/sdr.BinarySymmetricChannel/","api/sdr.BinarySymmetricChannel.X/","api/sdr.BinarySymmetricChannel.Y/","api/sdr.BinarySymmetricChannel.__call__/","api/sdr.BinarySymmetricChannel.__init__/","api/sdr.BinarySymmetricChannel.capacities/","api/sdr.BinarySymmetricChannel.capacity/","api/sdr.BinarySymmetricChannel.p/","api/sdr.BlockInterleaver/","api/sdr.BlockInterleaver.__init__/","api/sdr.CPM/","api/sdr.CPM.__init__/","api/sdr.CPM.ber/","api/sdr.CPM.bps/","api/sdr.CPM.demodulate/","api/sdr.CPM.index/","api/sdr.CPM.modulate/","api/sdr.CPM.order/","api/sdr.CPM.phase_offset/","api/sdr.CPM.pulse_shape/","api/sdr.CPM.rx_filter/","api/sdr.CPM.ser/","api/sdr.CPM.sps/","api/sdr.CPM.tx_filter/","api/sdr.Channel/","api/sdr.Channel.__call__/","api/sdr.Channel.__init__/","api/sdr.Channel.capacities/","api/sdr.Channel.capacity/","api/sdr.Channel.reset/","api/sdr.Channelizer/","api/sdr.Channelizer.__call__/","api/sdr.Channelizer.__init__/","api/sdr.Channelizer.channels/","api/sdr.Channelizer.method/","api/sdr.ClosedLoopPLL/","api/sdr.ClosedLoopPLL.Bn/","api/sdr.ClosedLoopPLL.BnT/","api/sdr.ClosedLoopPLL.K0/","api/sdr.ClosedLoopPLL.K1/","api/sdr.ClosedLoopPLL.K2/","api/sdr.ClosedLoopPLL.Kp/","api/sdr.ClosedLoopPLL.__init__/","api/sdr.ClosedLoopPLL.frequency_lock_time/","api/sdr.ClosedLoopPLL.iir/","api/sdr.ClosedLoopPLL.lock_time/","api/sdr.ClosedLoopPLL.omega_3dB/","api/sdr.ClosedLoopPLL.omega_n/","api/sdr.ClosedLoopPLL.phase_error_variance/","api/sdr.ClosedLoopPLL.phase_lock_time/","api/sdr.ClosedLoopPLL.sample_rate/","api/sdr.ClosedLoopPLL.zeta/","api/sdr.Decimator/","api/sdr.Decimator.__init__/","api/sdr.Decimator.method/","api/sdr.Decimator.reset/","api/sdr.Differentiator/","api/sdr.Differentiator.__init__/","api/sdr.DiscreteMemorylessChannel/","api/sdr.DiscreteMemorylessChannel.P/","api/sdr.DiscreteMemorylessChannel.X/","api/sdr.DiscreteMemorylessChannel.Y/","api/sdr.DiscreteMemorylessChannel.__call__/","api/sdr.DiscreteMemorylessChannel.__init__/","api/sdr.EnergyDetector/","api/sdr.EnergyDetector.p_d/","api/sdr.EnergyDetector.p_fa/","api/sdr.EnergyDetector.roc/","api/sdr.EnergyDetector.threshold/","api/sdr.ErrorRate/","api/sdr.ErrorRate.__init__/","api/sdr.ErrorRate.add/","api/sdr.ErrorRate.counts/","api/sdr.ErrorRate.error_rate/","api/sdr.ErrorRate.error_rates/","api/sdr.ErrorRate.errors/","api/sdr.FIR/","api/sdr.FIR.__call__/","api/sdr.FIR.__init__/","api/sdr.FIR.__len__/","api/sdr.FIR.delay/","api/sdr.FIR.flush/","api/sdr.FIR.frequency_response/","api/sdr.FIR.group_delay/","api/sdr.FIR.impulse_response/","api/sdr.FIR.noise_bandwidth/","api/sdr.FIR.order/","api/sdr.FIR.phase_delay/","api/sdr.FIR.reset/","api/sdr.FIR.state/","api/sdr.FIR.step_response/","api/sdr.FIR.streaming/","api/sdr.FIR.taps/","api/sdr.FLFSR/","api/sdr.FLFSR.Taps/","api/sdr.FLFSR.__call__/","api/sdr.FLFSR.__init__/","api/sdr.FLFSR.characteristic_poly/","api/sdr.FLFSR.feedback_poly/","api/sdr.FLFSR.field/","api/sdr.FLFSR.initial_state/","api/sdr.FLFSR.order/","api/sdr.FLFSR.reset/","api/sdr.FLFSR.state/","api/sdr.FLFSR.step/","api/sdr.FLFSR.taps/","api/sdr.FLFSR.to_galois_lfsr/","api/sdr.FarrowFractionalDelay/","api/sdr.FarrowFractionalDelay.__call__/","api/sdr.FarrowFractionalDelay.__init__/","api/sdr.FarrowFractionalDelay.delay/","api/sdr.FarrowFractionalDelay.lagrange_polys/","api/sdr.FarrowFractionalDelay.lookahead/","api/sdr.FarrowFractionalDelay.order/","api/sdr.FarrowFractionalDelay.reset/","api/sdr.FarrowFractionalDelay.state/","api/sdr.FarrowFractionalDelay.streaming/","api/sdr.FarrowFractionalDelay.taps/","api/sdr.FarrowResampler/","api/sdr.FarrowResampler.__call__/","api/sdr.FarrowResampler.__init__/","api/sdr.FarrowResampler.clock_outputs/","api/sdr.FarrowResampler.delay/","api/sdr.FarrowResampler.reset/","api/sdr.FractionalDelay/","api/sdr.FractionalDelay.__init__/","api/sdr.GLFSR/","api/sdr.GLFSR.Taps/","api/sdr.GLFSR.__init__/","api/sdr.GLFSR.characteristic_poly/","api/sdr.GLFSR.feedback_poly/","api/sdr.GLFSR.field/","api/sdr.GLFSR.initial_state/","api/sdr.GLFSR.order/","api/sdr.GLFSR.reset/","api/sdr.GLFSR.state/","api/sdr.GLFSR.step/","api/sdr.GLFSR.taps/","api/sdr.GLFSR.to_fibonacci_lfsr/","api/sdr.IIR/","api/sdr.IIR.ZerosPoles/","api/sdr.IIR.__call__/","api/sdr.IIR.__init__/","api/sdr.IIR.a_taps/","api/sdr.IIR.b_taps/","api/sdr.IIR.frequency_response/","api/sdr.IIR.gain/","api/sdr.IIR.impulse_response/","api/sdr.IIR.noise_bandwidth/","api/sdr.IIR.order/","api/sdr.IIR.poles/","api/sdr.IIR.reset/","api/sdr.IIR.state/","api/sdr.IIR.step_response/","api/sdr.IIR.streaming/","api/sdr.IIR.zeros/","api/sdr.Integrator/","api/sdr.Integrator.__init__/","api/sdr.Interleaver/","api/sdr.Interleaver.__init__/","api/sdr.Interleaver.__len__/","api/sdr.Interleaver.deinterleave/","api/sdr.Interleaver.interleave/","api/sdr.Interleaver.inverse_map/","api/sdr.Interleaver.map/","api/sdr.Interpolator/","api/sdr.Interpolator.__init__/","api/sdr.Interpolator.method/","api/sdr.LeakyIntegrator/","api/sdr.LeakyIntegrator.__init__/","api/sdr.LinearModulation/","api/sdr.LinearModulation.__init__/","api/sdr.LinearModulation.ber/","api/sdr.LinearModulation.bps/","api/sdr.LinearModulation.decide_symbols/","api/sdr.LinearModulation.demodulate/","api/sdr.LinearModulation.map_symbols/","api/sdr.LinearModulation.modulate/","api/sdr.LinearModulation.order/","api/sdr.LinearModulation.phase_offset/","api/sdr.LinearModulation.pulse_shape/","api/sdr.LinearModulation.rx_filter/","api/sdr.LinearModulation.ser/","api/sdr.LinearModulation.sps/","api/sdr.LinearModulation.symbol_map/","api/sdr.LinearModulation.tx_filter/","api/sdr.LoopFilter/","api/sdr.LoopFilter.__call__/","api/sdr.LoopFilter.__init__/","api/sdr.LoopFilter.damping_factor/","api/sdr.LoopFilter.iir/","api/sdr.LoopFilter.integral_gain/","api/sdr.LoopFilter.noise_bandwidth/","api/sdr.LoopFilter.proportional_gain/","api/sdr.LoopFilter.reset/","api/sdr.MLPED/","api/sdr.MLPED.A_received/","api/sdr.MLPED.A_reference/","api/sdr.MLPED.__call__/","api/sdr.MLPED.__init__/","api/sdr.MLPED.data_aided_error/","api/sdr.MLPED.decision_directed_error/","api/sdr.MLPED.gain/","api/sdr.MSK/","api/sdr.MSK.__init__/","api/sdr.MovingAverager/","api/sdr.MovingAverager.__init__/","api/sdr.NCO/","api/sdr.NCO.__call__/","api/sdr.NCO.__init__/","api/sdr.NCO.gain/","api/sdr.NCO.increment/","api/sdr.NCO.offset/","api/sdr.NCO.reset/","api/sdr.NCO.step/","api/sdr.OQPSK/","api/sdr.OQPSK.__init__/","api/sdr.PED/","api/sdr.PED.__call__/","api/sdr.PED.__init__/","api/sdr.PED.data_aided_error/","api/sdr.PED.decision_directed_error/","api/sdr.PED.gain/","api/sdr.PSK/","api/sdr.PSK.__init__/","api/sdr.PSK.ber/","api/sdr.PSK.phase_offset/","api/sdr.PSK.ser/","api/sdr.PSK.symbol_map/","api/sdr.PiMPSK/","api/sdr.PiMPSK.__init__/","api/sdr.PolyphaseFIR/","api/sdr.PolyphaseFIR.__call__/","api/sdr.PolyphaseFIR.__init__/","api/sdr.PolyphaseFIR.branches/","api/sdr.PolyphaseFIR.decimation/","api/sdr.PolyphaseFIR.delay/","api/sdr.PolyphaseFIR.input/","api/sdr.PolyphaseFIR.interpolation/","api/sdr.PolyphaseFIR.order/","api/sdr.PolyphaseFIR.output/","api/sdr.PolyphaseFIR.polyphase_order/","api/sdr.PolyphaseFIR.polyphase_taps/","api/sdr.PolyphaseFIR.rate/","api/sdr.PolyphaseFIR.reset/","api/sdr.PolyphaseFIR.taps/","api/sdr.Q/","api/sdr.Qinv/","api/sdr.ReplicaCorrelator/","api/sdr.ReplicaCorrelator.p_d/","api/sdr.ReplicaCorrelator.p_fa/","api/sdr.ReplicaCorrelator.roc/","api/sdr.ReplicaCorrelator.threshold/","api/sdr.Resampler/","api/sdr.Resampler.__call__/","api/sdr.Resampler.__init__/","api/sdr.Resampler.method/","api/sdr.add_iid_rvs/","api/sdr.add_rvs/","api/sdr.albersheim/","api/sdr.average_power/","api/sdr.awgn/","api/sdr.awgn_capacity/","api/sdr.bandpass_fir/","api/sdr.bandstop_fir/","api/sdr.barker_code/","api/sdr.bec/","api/sdr.bec_capacity/","api/sdr.berlekamp_massey/","api/sdr.biawgn_capacity/","api/sdr.binary_code/","api/sdr.bsc/","api/sdr.bsc_capacity/","api/sdr.clock_error/","api/sdr.coherent_gain/","api/sdr.coherent_gain_loss/","api/sdr.composite_snr/","api/sdr.crest_factor/","api/sdr.db/","api/sdr.diff_decode/","api/sdr.diff_encode/","api/sdr.dmc/","api/sdr.downsample/","api/sdr.ebn0_to_esn0/","api/sdr.ebn0_to_snr/","api/sdr.energy/","api/sdr.esn0_to_ebn0/","api/sdr.esn0_to_snr/","api/sdr.euclidean/","api/sdr.evm/","api/sdr.fdoa_crlb/","api/sdr.foa_crlb/","api/sdr.fractional_delay_fir/","api/sdr.free_space_path_loss/","api/sdr.frequency_offset/","api/sdr.gaussian/","api/sdr.gold_code/","api/sdr.gray_code/","api/sdr.h0/","api/sdr.h1/","api/sdr.hadamard_code/","api/sdr.half_sine/","api/sdr.hamming/","api/sdr.hexdump/","api/sdr.highpass_fir/","api/sdr.iq_imbalance/","api/sdr.is_preferred_pair/","api/sdr.kasami_code/","api/sdr.linear/","api/sdr.lowpass_fir/","api/sdr.m_sequence/","api/sdr.max_frequency_offset/","api/sdr.max_iid_rvs/","api/sdr.max_integration_time/","api/sdr.max_rvs/","api/sdr.min_iid_rvs/","api/sdr.min_rvs/","api/sdr.min_snr/","api/sdr.mix/","api/sdr.multiply_rvs/","api/sdr.multirate_fir/","api/sdr.non_coherent_gain/","api/sdr.p_d/","api/sdr.p_fa/","api/sdr.pack/","api/sdr.papr/","api/sdr.parabolic_antenna/","api/sdr.peak_power/","api/sdr.peak_voltage/","api/sdr.peebles/","api/sdr.plot.ber/","api/sdr.plot.constellation/","api/sdr.plot.correlation/","api/sdr.plot.detector_pdfs/","api/sdr.plot.dft/","api/sdr.plot.dtft/","api/sdr.plot.eye/","api/sdr.plot.filter/","api/sdr.plot.group_delay/","api/sdr.plot.impulse_response/","api/sdr.plot.magnitude_response/","api/sdr.plot.p_d/","api/sdr.plot.periodogram/","api/sdr.plot.phase_delay/","api/sdr.plot.phase_response/","api/sdr.plot.phase_tree/","api/sdr.plot.raster/","api/sdr.plot.roc/","api/sdr.plot.ser/","api/sdr.plot.shannon_limit_ebn0/","api/sdr.plot.spectrogram/","api/sdr.plot.stem/","api/sdr.plot.step_response/","api/sdr.plot.symbol_map/","api/sdr.plot.time_domain/","api/sdr.plot.use_style/","api/sdr.plot.zeros_poles/","api/sdr.polyphase_decompose/","api/sdr.power/","api/sdr.preferred_pairs/","api/sdr.raised_cosine/","api/sdr.rectangular/","api/sdr.rms_bandwidth/","api/sdr.rms_integration_time/","api/sdr.rms_voltage/","api/sdr.root_raised_cosine/","api/sdr.sample_rate_offset/","api/sdr.shannon_limit_ebn0/","api/sdr.shannon_limit_snr/","api/sdr.shnidman/","api/sdr.sinusoid/","api/sdr.snr_to_ebn0/","api/sdr.snr_to_esn0/","api/sdr.subtract_rvs/","api/sdr.tdoa_crlb/","api/sdr.threshold/","api/sdr.threshold_factor/","api/sdr.to_complex_baseband/","api/sdr.to_real_passband/","api/sdr.toa_crlb/","api/sdr.unpack/","api/sdr.upsample/","api/sdr.walsh_code/","api/sdr.wavelength/","api/sdr.zadoff_chu_sequence/","api/sequences/","api/simulation/","api/synchronization/","development/documentation/","development/formatting/","development/installation/","development/unit-tests/","examples/coherent-integration/","examples/detection/","examples/dsp/","examples/farrow-resampler/","examples/fir-filters/","examples/iir-filters/","examples/modulation/","examples/non-coherent-integration/","examples/peak-to-average-power/","examples/phase-locked-loop/","examples/psk/","examples/pulse-shapes/","examples/synchronization/","","release-notes/v0.0/","release-notes/versioning/"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.intersphinx":1,"sphinx_last_updated_by_git":1},"indexentries":{"module":[[3,"module-sdr",false]],"sdr":[[3,"module-sdr",false]]},"objects":{"":[[3,0,0,1,"sdr",""]],"sdr":[[10,1,1,"","AGC","Implements an automatic gain controller (AGC)."],[19,1,1,"","AdditiveScrambler","Implements an additive scrambler."],[24,1,1,"","BinaryErasureChannel","Implements a binary erasure channel (BEC)."],[32,1,1,"","BinarySymmetricChannel","Implements a binary symmetric channel (BSC)."],[40,1,1,"","BlockInterleaver","Implements a block interleaver."],[42,1,1,"","CPM","Implements continuous-phase modulation (CPM)."],[56,1,1,"","Channel","A base class for wireless channels."],[62,1,1,"","Channelizer","Implements a polyphase channelizer FIR filter."],[67,1,1,"","ClosedLoopPLL","A class that defines the performance of a closed-loop PLL."],[84,1,1,"","Decimator","Implements a polyphase decimating FIR filter."],[88,1,1,"","Differentiator","Implements a differentiator FIR filter."],[90,1,1,"","DiscreteMemorylessChannel","Implements a discrete memoryless channel (DMC)."],[96,1,1,"","EnergyDetector","Implements an energy detector."],[101,1,1,"","ErrorRate","A class for measuring bit error rates (BER) or symbol error rates (SER)."],[108,1,1,"","FIR","Implements a finite impulse response (FIR) filter."],[125,1,1,"","FLFSR","Implements a Fibonacci linear-feedback shift register (LFSR)."],[139,1,1,"","FarrowFractionalDelay","Implements a piecewise polynomial Farrow fractional delay filter."],[150,1,1,"","FarrowResampler","Implements a piecewise polynomial Farrow arbitrary resampler."],[156,1,1,"","FractionalDelay","Implements a fractional delay FIR filter."],[158,1,1,"","GLFSR","Implements a Galois linear-feedback shift register (LFSR)."],[171,1,1,"","IIR","Implements an infinite impulse response (IIR) filter."],[188,1,1,"","Integrator","Implements an integrator IIR filter."],[190,1,1,"","Interleaver","Implements an arbitrary interleaver."],[197,1,1,"","Interpolator","Implements a polyphase interpolating FIR filter."],[200,1,1,"","LeakyIntegrator","Implements a leaky integrator IIR filter."],[202,1,1,"","LinearModulation","Implements linear phase/amplitude modulation with arbitrary symbol mapping."],[218,1,1,"","LoopFilter","Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."],[227,1,1,"","MLPED","Implements a maximum-likelihood phase error detector (ML-PED)."],[235,1,1,"","MSK","Implements minimum-shift keying (MSK) modulation and demodulation."],[237,1,1,"","MovingAverager","Implements a moving average FIR filter."],[239,1,1,"","NCO","Implements a numerically controlled oscillator (NCO)."],[247,1,1,"","OQPSK","Implements offset quadrature phase-shift keying (OQPSK) modulation and demodulation."],[249,1,1,"","PED","Implements a heuristic phase error detector (PED)."],[255,1,1,"","PSK","Implements phase-shift keying (PSK) modulation and demodulation."],[261,1,1,"","PiMPSK","Implements $pi/M$ phase-shift keying ($pi/M$ PSK) modulation and demodulation."],[263,1,1,"","PolyphaseFIR","Implements a generic polyphase FIR filter."],[278,6,1,"","Q","Computes the CCDF of the standard normal distribution $mathcal{N}(0, 1)$.."],[279,6,1,"","Qinv","Computes the inverse CCDF of the standard normal distribution $mathcal{N}(0, 1)$."],[280,1,1,"","ReplicaCorrelator","Implements an clairvoyant replica-correlator detector."],[285,1,1,"","Resampler","Implements a polyphase rational resampling FIR filter."],[289,6,1,"","add_iid_rvs","Numerically calculates the distribution of the sum of $n$ i.i.d. random variables $X_i$."],[290,6,1,"","add_rvs","Numerically calculates the distribution of the sum of two independent random variables $X$ and $Y$."],[291,6,1,"","albersheim","Estimates the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$."],[292,6,1,"","average_power","Measures the average power of a time-domain signal $x[n]$."],[293,6,1,"","awgn","Adds additive white Gaussian noise (AWGN) to the time-domain signal $x[n]$."],[294,6,1,"","awgn_capacity","Calculates the capacity of an additive white Gaussian noise (AWGN) channel."],[295,6,1,"","bandpass_fir","Designs a bandpass FIR filter impulse response $h[n]$ using the window method."],[296,6,1,"","bandstop_fir","Designs a bandstop FIR filter impulse response $h[n]$ using the window method."],[297,6,1,"","barker_code","Generates the Barker code/sequence of length $n$."],[298,6,1,"","bec","Passes the binary input sequence $x$ through a binary erasure channel (BEC)."],[299,6,1,"","bec_capacity","Calculates the capacity of a binary erasure channel (BEC)."],[300,6,1,"","berlekamp_massey","Finds the minimal polynomial $c(x)$ that produces the linear recurrent sequence $y$."],[301,6,1,"","biawgn_capacity","Calculates the capacity of a binary-input additive white Gaussian noise (BI-AWGN) channel."],[302,6,1,"","binary_code","Generates a binary code of length $n = 2^m$."],[303,6,1,"","bsc","Passes the binary input sequence $x$ through a binary symmetric channel (BSC)."],[304,6,1,"","bsc_capacity","Calculates the capacity of a binary symmetric channel (BSC)."],[305,6,1,"","clock_error","Applies a clock error to the time-domain signal $x[n]$."],[306,6,1,"","coherent_gain","Computes the SNR improvement by coherent integration."],[307,6,1,"","coherent_gain_loss","Computes the coherent gain loss (CGL) given a time or frequency offset."],[308,6,1,"","composite_snr","Calculates the signal-to-noise ratio (SNR) of the product of two signals."],[309,6,1,"","crest_factor","Measures the crest factor of a time-domain signal $x[n]$."],[310,6,1,"","db","Converts from linear units to decibels."],[311,6,1,"","diff_decode","Differentially decodes the input data $y[k]$."],[312,6,1,"","diff_encode","Differentially encodes the input data $x[k]$."],[313,6,1,"","dmc","Passes the input sequence $x$ through a discrete memoryless channel (DMC)."],[314,6,1,"","downsample","Downsamples the time-domain signal $x[n]$ by the factor $r$, by discarding $r-1$ samples every $r$ samples."],[315,6,1,"","ebn0_to_esn0","Converts from $E_b/N_0$ to $E_s/N_0$."],[316,6,1,"","ebn0_to_snr","Converts from $E_b/N_0$ to $S/N$."],[317,6,1,"","energy","Measures the energy of a time-domain signal $x[n]$."],[318,6,1,"","esn0_to_ebn0","Converts from $E_s/N_0$ to $E_b/N_0$."],[319,6,1,"","esn0_to_snr","Converts from $E_s/N_0$ to $S/N$."],[320,6,1,"","euclidean","Measures the Euclidean distance between two signals $x[n]$ and $y[n]$."],[321,6,1,"","evm","Measures the error-vector magnitude (EVM) of the complex symbols $hat{x}[k]$."],[322,6,1,"","fdoa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on frequency difference of arrival (FDOA) estimation."],[323,6,1,"","foa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on frequency of arrival (FOA) estimation."],[324,6,1,"","fractional_delay_fir","Designs a fractional delay FIR filter impulse response $h[n]$ using the Kaiser window method."],[325,6,1,"","free_space_path_loss","Calculates the free-space path loss (FSPL) in dB."],[326,6,1,"","frequency_offset","Applies a frequency and phase offset to the time-domain signal $x[n]$."],[327,6,1,"","gaussian","Returns a Gaussian pulse shape."],[328,6,1,"","gold_code","Generates the Gold code/sequence of length $n = 2^m - 1$."],[329,6,1,"","gray_code","Generates a Gray code of length $n = 2^m$."],[330,6,1,"","h0","Computes the statistical distribution under the null hypothesis $mathcal{H}_0$."],[331,6,1,"","h1","Computes the statistical distribution under the alternative hypothesis $mathcal{H}_1$."],[332,6,1,"","hadamard_code","Generates the Hadamard code/sequence of length $n = 2^m$."],[333,6,1,"","half_sine","Returns a half-sine pulse shape."],[334,6,1,"","hamming","Measures the Hamming distance between two signals $x[n]$ and $y[n]$."],[335,6,1,"","hexdump","Returns a hexdump of the specified data."],[336,6,1,"","highpass_fir","Designs a highpass FIR filter impulse response $h[n]$ using the window method."],[337,6,1,"","iq_imbalance","Applies IQ imbalance to the complex time-domain signal $x[n]$."],[338,6,1,"","is_preferred_pair","Determines if two primitive polynomials generate preferred pair $m$-sequences."],[339,6,1,"","kasami_code","Generates the Kasami code/sequence of length $n = 2^m - 1$."],[340,6,1,"","linear","Converts from decibels to linear units."],[341,6,1,"","lowpass_fir","Designs a lowpass FIR filter impulse response $h[n]$ using the window method."],[342,6,1,"","m_sequence","Generates a maximum-length sequence ($m$-sequence) from a Fibonacci linear feedback shift register (LFSR)."],[343,6,1,"","max_frequency_offset","Computes the maximum frequency offset that produces at most the provided coherent gain loss (CGL)."],[344,6,1,"","max_iid_rvs","Numerically calculates the distribution of the maximum of $n$ i.i.d. random variables $X_i$."],[345,6,1,"","max_integration_time","Computes the maximum integration time that produces at most the provided coherent gain loss (CGL)."],[346,6,1,"","max_rvs","Numerically calculates the distribution of the maximum of two independent random variables $X$ and $Y$."],[347,6,1,"","min_iid_rvs","Numerically calculates the distribution of the minimum of $n$ i.i.d. random variables $X_i$."],[348,6,1,"","min_rvs","Numerically calculates the distribution of the minimum of two independent random variables $X$ and $Y$."],[349,6,1,"","min_snr","Computes the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$."],[350,6,1,"","mix","Mixes a time-domain signal with a complex exponential or real sinusoid."],[351,6,1,"","multiply_rvs","Numerically calculates the distribution of the product of two independent random variables $X$ and $Y$."],[352,6,1,"","multirate_fir","Designs a multirate FIR filter impulse response $h[n]$ using the Kaiser window method."],[353,6,1,"","non_coherent_gain","Computes the SNR improvement by non-coherently integrating $N_{nc}$ samples."],[354,6,1,"","p_d","Computes the theoretical probability of detection $P_d$."],[355,6,1,"","p_fa","Computes the theoretical probability of false alarm $P_{fa}$."],[356,6,1,"","pack","Packs a binary array into an array with multiple bits per element."],[357,6,1,"","papr","Measures the peak-to-average power ratio (PAPR) of a time-domain signal $x[n]$."],[358,6,1,"","parabolic_antenna","Calculates the gain $G$ and beamwidth $theta$ of a parabolic reflector."],[359,6,1,"","peak_power","Measures the peak power of a time-domain signal $x[n]$."],[360,6,1,"","peak_voltage","Measures the peak voltage of a time-domain signal $x[n]$."],[361,6,1,"","peebles","Estimates the non-coherent integration gain for a given probability of detection $P_d$ and false alarm $P_{fa}$."],[389,6,1,"","polyphase_decompose","Decomposes the prototype filter taps $h[n]$ into the polyphase matrix $h_i[n]$ with $B$ phases."],[390,6,1,"","power","Measures the instantaneous power of a time-domain signal $x[n]$."],[391,6,1,"","preferred_pairs","Generates primitive polynomials of degree $m$ that produce preferred pair $m$-sequences."],[392,6,1,"","raised_cosine","Returns a raised cosine (RC) pulse shape."],[393,6,1,"","rectangular","Returns a rectangular pulse shape."],[394,6,1,"","rms_bandwidth","Measures the RMS bandwidth $B_{text{rms}}$ of the signal $x[n]$."],[395,6,1,"","rms_integration_time","Measures the RMS integration time $T_{text{rms}}$ of the signal $x[n]$."],[396,6,1,"","rms_voltage","Measures the root-mean-square (RMS) voltage of a time-domain signal $x[n]$."],[397,6,1,"","root_raised_cosine","Returns a square root raised cosine (SRRC) pulse shape."],[398,6,1,"","sample_rate_offset","Applies a sample rate offset to the time-domain signal $x[n]$."],[399,6,1,"","shannon_limit_ebn0","Calculates the Shannon limit on the bit energy-to-noise power spectral density ratio $E_b/N_0$ in the AWGN channel."],[400,6,1,"","shannon_limit_snr","Calculates the Shannon limit on the signal-to-noise ratio $S/N$ in the AWGN channel."],[401,6,1,"","shnidman","Estimates the minimum input signal-to-noise ratio (SNR) required to achieve the desired probability of detection $P_d$ for the Swerling target model."],[402,6,1,"","sinusoid","Generates a complex exponential or real sinusoid."],[403,6,1,"","snr_to_ebn0","Converts from $S/N$ to $E_b/N_0$."],[404,6,1,"","snr_to_esn0","Converts from $S/N$ to $E_s/N_0$."],[405,6,1,"","subtract_rvs","Numerically calculates the distribution of the difference of two independent random variables $X$ and $Y$."],[406,6,1,"","tdoa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on time difference of arrival (TDOA) estimation."],[407,6,1,"","threshold","Computes the theoretical detection threshold $gamma$."],[408,6,1,"","threshold_factor","Computes the theoretical detection threshold factor $alpha$."],[409,6,1,"","to_complex_baseband","Converts a real passband signal to a complex baseband signal."],[410,6,1,"","to_real_passband","Converts a complex baseband signal to a real passband signal."],[411,6,1,"","toa_crlb","Calculates the Cram\u00e9r-Rao lower bound (CRLB) on time of arrival (TOA) estimation."],[412,6,1,"","unpack","Unpacks an array with multiple bits per element into a binary array."],[413,6,1,"","upsample","Upsamples the time-domain signal $x[n]$ by the factor $r$, by inserting $r-1$ zeros between each sample."],[414,6,1,"","walsh_code","Generates the Walsh code/sequence of length $n = 2^m$."],[415,6,1,"","wavelength","Calculates the wavelength $lambda$ of an electromagnetic wave with frequency $f$."],[416,6,1,"","zadoff_chu_sequence","Generates the root-$u$ Zadoff-Chu sequence of length $N$."]],"sdr.AGC":[[11,2,1,"","__call__","Performs automatic gain control on the input signal."],[12,2,1,"","__init__","Creates an automatic gain controller (AGC)."],[13,4,1,"","attack","(Settable) The attack rate $alpha$."],[14,4,1,"","decay","(Settable) The decay rate $beta$."],[15,4,1,"","gain","The current linear gain."],[16,4,1,"","reference","(Settable) The desired output magnitude."],[17,2,1,"","reset","Resets the AGC gain. Only useful when using streaming mode."],[18,4,1,"","streaming","Indicates whether the AGC is in streaming mode."]],"sdr.AGC.__call__":[[11,3,2,"p-x","x","The input signal $x[n]$."]],"sdr.AGC.__init__":[[12,3,2,"p-attack","attack","The attack rate $alpha$."],[12,3,2,"p-decay","decay","The decay rate $beta$."],[12,3,2,"p-reference","reference","The desired output magnitude."],[12,3,2,"p-streaming","streaming","Indicates whether the AGC operates in streaming mode."]],"sdr.AGC.reset":[[17,3,2,"p-gain","gain","The initial linear gain of the AGC."]],"sdr.AdditiveScrambler":[[20,2,1,"","__init__","Creates an additive scrambler."],[21,2,1,"","descramble","Descrambles the binary input sequence $y[n]$."],[22,4,1,"","lfsr","The Fibonacci LFSR used for scrambling."],[23,2,1,"","scramble","Scrambles the binary input sequence $x[n]$."]],"sdr.AdditiveScrambler.__init__":[[20,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[20,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[20,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.AdditiveScrambler.descramble":[[21,3,2,"p-y","y","The binary input sequence $y[n]$."]],"sdr.AdditiveScrambler.scramble":[[23,3,2,"p-x","x","The binary input sequence $x[n]$."]],"sdr.BinaryErasureChannel":[[25,4,1,"","X","The input alphabet $mathcal{X} = {0, 1}$ of the BEC channel."],[26,4,1,"","Y","The output alphabet $mathcal{Y} = {0, 1, e}$ of the BEC channel. Erasures $e$ are represented by -1."],[27,2,1,"","__call__","Passes the binary input sequence $x$ through the channel."],[28,2,1,"","__init__","Creates a new binary erasure channel (BEC)."],[29,2,1,"","capacities","Calculates the capacity of BEC channels."],[30,4,1,"","capacity","The capacity $C$ of the instantiated channel in bits/channel use."],[31,4,1,"","p","The erasure probability $p$ of the BEC channel."]],"sdr.BinaryErasureChannel.__call__":[[27,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X} = {0, 1}$."]],"sdr.BinaryErasureChannel.__init__":[[28,3,2,"p-p","p","The erasure probability $p$ of the BEC channel."],[28,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.BinaryErasureChannel.capacities":[[29,3,2,"","p","Calculates the capacity of BEC channels."]],"sdr.BinarySymmetricChannel":[[33,4,1,"","X","The input alphabet $mathcal{X} = {0, 1}$ of the BSC channel."],[34,4,1,"","Y","The output alphabet $mathcal{Y} = {0, 1}$ of the BSC channel."],[35,2,1,"","__call__","Passes the binary input sequence $x$ through the channel."],[36,2,1,"","__init__","Creates a new binary symmetric channel (BSC)."],[37,2,1,"","capacities","Calculates the capacity of BSC channels."],[38,4,1,"","capacity","The capacity $C$ of the instantiated channel in bits/channel use."],[39,4,1,"","p","The transition probability $p$ of the BSC channel."]],"sdr.BinarySymmetricChannel.__call__":[[35,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X} = {0, 1}$."]],"sdr.BinarySymmetricChannel.__init__":[[36,3,2,"p-p","p","The transition probability $p$ of the BSC channel."],[36,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.BinarySymmetricChannel.capacities":[[37,3,2,"","p","Calculates the capacity of BSC channels."]],"sdr.BlockInterleaver":[[41,2,1,"","__init__","Creates a $R times C$ block interleaver."]],"sdr.BlockInterleaver.__init__":[[41,3,2,"p-cols","cols","The number of columns $C$ in the interleaver."],[41,3,2,"p-rows","rows","The number of rows $R$ in the interleaver."]],"sdr.CPM":[[43,2,1,"","__init__","Creates a new continuous-phase modulation object."],[44,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[45,4,1,"","bps","The number of coded bits per symbol $k = log_2 M$."],[46,2,1,"","demodulate","Demodulates the pulse-shaped complex samples into decimal symbol decisions."],[47,4,1,"","index","The modulation index $h$."],[48,2,1,"","modulate","Modulates the decimal symbols $s[k]$ into pulse-shaped complex samples $x[n]$."],[49,4,1,"","order","The modulation order $M = 2^k$."],[50,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[51,4,1,"","pulse_shape","The pulse shape $h[n]$ of the instantaneous frequency of the signal."],[52,4,1,"","rx_filter","The receive decimating matched filter. The filter coefficients are matched to the pulse shape $h[-n]^*$."],[53,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[54,4,1,"","sps","The number of samples per symbol $f_s / f_{sym}$."],[55,4,1,"","tx_filter","The transmit interpolating pulse shaping filter. The filter coefficients are the pulse shape $h[n]$."]],"sdr.CPM.__init__":[[43,3,2,"p-index","index","The modulation index $h$."],[43,3,2,"p-order","order","The modulation order $M = 2^k$."],[43,3,2,"p-phase_offset","phase_offset","A phase offset $phi$ in degrees."],[43,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the instantaneous frequency of the signal."],[43,3,2,"p-span","span","The span of the pulse shape in symbols."],[43,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[43,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.CPM.ber":[[44,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.CPM.demodulate":[[46,3,2,"p-x_tilde","x_tilde","The received pulse-shaped complex samples $tilde{x}[n]$ to demodulate, with sps samples per symbol and length sps * s_hat.size + pulse_shape.size - 1."]],"sdr.CPM.modulate":[[48,3,2,"p-s","s","The decimal symbols $s[k]$ to modulate, $0$ to $M-1$."]],"sdr.CPM.ser":[[53,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.Channel":[[57,2,1,"","__call__","Passes the input sequence $x$ through the channel."],[58,2,1,"","__init__","Creates a new channel."],[59,2,1,"","capacities","Computes the channel capacity given the channel configuration."],[60,4,1,"","capacity","The channel capacity $C$ in bits/2D of the instantiated channel."],[61,2,1,"","reset","Resets the channel with a new seed."]],"sdr.Channel.__call__":[[57,3,2,"p-x","x","The input sequence $x$."]],"sdr.Channel.__init__":[[58,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.Channel.reset":[[61,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.Channelizer":[[63,2,1,"","__call__","Channelizes the input signal $x[n]$ with the polyphase FIR filter."],[64,2,1,"","__init__","Creates a polyphase FIR channelizing filter."],[65,4,1,"","channels","The number of channels $C$."],[66,4,1,"","method","The method used to design the polyphase channelizing filter."]],"sdr.Channelizer.__call__":[[63,3,2,"p-mode","mode","The non-streaming convolution mode."],[63,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.Channelizer.__init__":[[64,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[64,3,2,"p-channels","channels","The number of channels $C$."],[64,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[64,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[64,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.ClosedLoopPLL":[[68,4,1,"","Bn","The noise bandwidth $B_n$ of the PLL in Hz."],[69,4,1,"","BnT","The normalized noise bandwidth $B_n T$ of the PLL."],[70,4,1,"","K0","The NCO gain $K_0$."],[71,4,1,"","K1","The proportional gain $K_1$ of the loop filter."],[72,4,1,"","K2","The integral gain $K_2$ of the loop filter."],[73,4,1,"","Kp","The phase error detector (PED) gain $K_p$."],[74,2,1,"","__init__","Creates a closed-loop PLL analysis object."],[75,2,1,"","frequency_lock_time","Returns the frequency lock time of the PLL."],[76,4,1,"","iir","The IIR filter that represents the closed-loop transfer function of the PLL."],[77,2,1,"","lock_time","Returns the lock time of the PLL."],[78,4,1,"","omega_3dB","The 3-dB bandwidth $omega_{3textrm{dB}}$ of the PLL in radians/s."],[79,4,1,"","omega_n","The natural frequency $omega_n$ of the PLL in radians/s."],[80,2,1,"","phase_error_variance","Returns the variance of the phase error of the PLL in steady state."],[81,2,1,"","phase_lock_time","Returns the phase lock time of the PLL."],[82,4,1,"","sample_rate","The sample rate $f_s$ of the PLL in samples/s."],[83,4,1,"","zeta","The damping factor $zeta$ of the PLL."]],"sdr.ClosedLoopPLL.__init__":[[74,3,2,"p-K0","K0","The NCO gain $K_0$."],[74,3,2,"p-Kp","Kp","The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."],[74,3,2,"p-damping_factor","damping_factor","The damping factor $zeta$ of the loop filter."],[74,3,2,"p-noise_bandwidth","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."],[74,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the PLL in Hz."]],"sdr.ClosedLoopPLL.frequency_lock_time":[[75,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ of the input signal in Hz."]],"sdr.ClosedLoopPLL.lock_time":[[77,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ of the input signal in Hz."]],"sdr.ClosedLoopPLL.phase_error_variance":[[80,3,2,"p-cn0","cn0","The carrier-to-noise density ratio $C/N_0$ of the input signal in dB-Hz."]],"sdr.Decimator":[[85,2,1,"","__init__","Creates a polyphase FIR decimating filter."],[86,4,1,"","method","The method used to design the polyphase decimating filter."],[87,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."]],"sdr.Decimator.__init__":[[85,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[85,3,2,"p-decimation","decimation","The decimation rate $Q$."],[85,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[85,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[85,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.Differentiator":[[89,2,1,"","__init__","Creates a differentiator FIR filter."]],"sdr.Differentiator.__init__":[[89,3,2,"p-order","order","The order of the FIR differentiator $N$."],[89,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[89,3,2,"p-window","window","The SciPy window definition."]],"sdr.DiscreteMemorylessChannel":[[91,4,1,"","P","The transition probability matrix $P$ of the DMC channel."],[92,4,1,"","X","The input alphabet $mathcal{X}$ of the DMC channel."],[93,4,1,"","Y","The output alphabet $mathcal{Y}$ of the DMC channel."],[94,2,1,"","__call__","Passes the input sequence $x$ through the channel."],[95,2,1,"","__init__","Creates a new discrete memoryless channel (DMC)."]],"sdr.DiscreteMemorylessChannel.__call__":[[94,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X}$."]],"sdr.DiscreteMemorylessChannel.__init__":[[95,3,2,"p-P","P","The $m times n$ transition probability matrix $P$, where $P = Pr(Y = y_j | X = x_i)$."],[95,3,2,"p-X","X","The input alphabet $mathcal{X}$ of size $m$."],[95,3,2,"p-Y","Y","The output alphabet $mathcal{Y}$ of size $n$."],[95,3,2,"p-seed","seed","The seed for the random number generator."]],"sdr.EnergyDetector":[[97,2,1,"","p_d","Computes the probability of detection $P_d$."],[98,2,1,"","p_fa","Computes the probability of false alarm $P_{fa}$."],[99,2,1,"","roc","Computes the receiver operating characteristic (ROC) curve."],[100,2,1,"","threshold","Computes the threshold $gamma'$."]],"sdr.EnergyDetector.p_d":[[97,3,2,"p-complex","complex","Indicates whether the signal is real or complex."],[97,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[97,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[97,3,2,"p-snr","snr","The received signal-to-noise ratio $sigma_s^2 / sigma^2$ in dB."]],"sdr.EnergyDetector.p_fa":[[98,3,2,"p-complex","complex","Indicates whether the signal is complex."],[98,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[98,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."],[98,3,2,"p-threshold","threshold","The threshold $gamma'$."]],"sdr.EnergyDetector.roc":[[99,3,2,"p-complex","complex","Indicates whether the signal is complex."],[99,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[99,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[99,3,2,"p-snr","snr","The received signal-to-noise ratio $sigma_s^2 / sigma^2$ in dB."]],"sdr.EnergyDetector.threshold":[[100,3,2,"p-complex","complex","Indicates whether the signal is complex."],[100,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[100,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[100,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."]],"sdr.ErrorRate":[[102,2,1,"","__init__","Creates a new error rate tabulation object."],[103,2,1,"","add","Measures the number of bit or symbol errors at the given signal-to-noise ratio (SNR)."],[104,2,1,"","counts","Returns the number of counts at the specified signal-to-noise ratio (SNR)."],[105,2,1,"","error_rate","Returns the error rate at the specified signal-to-noise ratio (SNR)."],[106,2,1,"","error_rates","Returns all signal-to-noise ratios (SNRs) in ascending order and their corresponding error rates."],[107,2,1,"","errors","Returns the number of errors at the specified signal-to-noise ratio (SNR)."]],"sdr.ErrorRate.add":[[103,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."],[103,3,2,"p-x","x","The transmitted bits or symbols $x[k]$."],[103,3,2,"p-x_hat","x_hat","The received bits or symbols $hat{x}[k]$."]],"sdr.ErrorRate.counts":[[104,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.ErrorRate.error_rate":[[105,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.ErrorRate.errors":[[107,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) in dB."]],"sdr.FIR":[[109,2,1,"","__call__","Filters the input signal $x[n]$ with the FIR filter."],[110,2,1,"","__init__","Creates an FIR filter."],[111,2,1,"","__len__","Returns the filter length $N + 1$."],[112,4,1,"","delay","The delay of the FIR filter $d = lfloor frac{N + 1}{2} rfloor$ in samples."],[113,2,1,"","flush","Flushes the filter state by passing zeros through the filter. Only useful when using streaming mode."],[114,2,1,"","frequency_response","Returns the frequency response $H(omega)$ of the FIR filter."],[115,2,1,"","group_delay","Returns the group delay $tau_g(omega)$ of the FIR filter."],[116,2,1,"","impulse_response","Returns the impulse response $h[n]$ of the FIR filter."],[117,2,1,"","noise_bandwidth","Returns the noise bandwidth $B_n$ of the FIR filter."],[118,4,1,"","order","The order of the FIR filter $N$."],[119,2,1,"","phase_delay","Returns the phase delay $tau_{phi}(omega)$ of the FIR filter."],[120,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[121,4,1,"","state","The filter state consisting of the previous $N$ inputs."],[122,2,1,"","step_response","Returns the step response $s[n]$ of the FIR filter."],[123,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[124,4,1,"","taps","The feedforward taps $h[n]$ with length $N + 1$."]],"sdr.FIR.__call__":[[109,3,2,"p-mode","mode","The non-streaming convolution mode."],[109,3,2,"p-x","x","The input signal $x[n]$ with length $L$."]],"sdr.FIR.__init__":[[110,3,2,"p-h","h","The feedforward coefficients $h[n]$."],[110,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.FIR.frequency_response":[[114,3,2,"p-decades","decades","Only used if freqs is an integer."],[114,3,2,"p-freqs","freqs","The frequency specification."],[114,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."],[114,3,2,"p-whole","whole","Only used if freqs is an integer."]],"sdr.FIR.group_delay":[[115,3,2,"p-n","n","The number of samples in the group delay."],[115,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.impulse_response":[[116,3,2,"p-n","n","The number of samples to return."]],"sdr.FIR.noise_bandwidth":[[117,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.phase_delay":[[119,3,2,"p-n","n","The number of samples in the phase delay."],[119,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.FIR.step_response":[[122,3,2,"p-n","n","The number of samples to return."]],"sdr.FLFSR":[[126,2,1,"","Taps","Creates a Fibonacci LFSR from its taps."],[127,2,1,"","__call__","Processes the input symbols $x[n]$ through the Fibonacci LFSR."],[128,2,1,"","__init__","Creates a new Fibonacci LFSR."],[129,4,1,"","characteristic_poly","The characteristic polynomial $c(x)$ that defines the linear recurrent sequence."],[130,4,1,"","feedback_poly","The feedback polynomial $f(x)$ that defines the feedback arithmetic."],[131,4,1,"","field","The FieldArray subclass for the finite field that defines the linear arithmetic."],[132,4,1,"","initial_state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[133,4,1,"","order","The order of the linear recurrence/linear recurrent sequence."],[134,2,1,"","reset","Resets the Fibonacci LFSR state to the specified state."],[135,4,1,"","state","The current state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[136,2,1,"","step","Produces the next steps output symbols."],[137,4,1,"","taps","The shift register taps $T = [c_{n-1}, c_{n-2}, dots, c_1, c_0]$."],[138,2,1,"","to_galois_lfsr","Converts the Fibonacci LFSR to a Galois LFSR that produces the same output."]],"sdr.FLFSR.Taps":[[126,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[126,3,2,"p-taps","taps","The shift register taps $T = [c_{n-1}, c_{n-2}, dots, c_1, c_0]$."]],"sdr.FLFSR.__call__":[[127,3,2,"p-x","x","The input symbols $x[n]$."]],"sdr.FLFSR.__init__":[[128,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[128,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[128,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.FLFSR.reset":[[134,3,2,"p-state","state","The state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.FLFSR.step":[[136,3,2,"p-steps","steps","The direction and number of output symbols to produce."]],"sdr.FarrowFractionalDelay":[[140,2,1,"","__call__","Applies the fractional sample advance $mu(k)$ to the input signal $x[n]$ at the given basepoint sample indices $m(k)$."],[141,2,1,"","__init__","Creates a new Farrow arbitrary fractional delay filter."],[142,4,1,"","delay","The delay $D$ of the Farrow FIR filters in samples."],[143,4,1,"","lagrange_polys","The Lagrange basis polynomials $ell_k(mu)$."],[144,4,1,"","lookahead","The number of samples needed before the current input sample."],[145,4,1,"","order","The order $p$ of the Lagrange interpolating polynomial."],[146,2,1,"","reset","Resets the filter state."],[147,4,1,"","state","The filter state consisting of the previous self.taps.shape[1] - 1 inputs."],[148,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[149,4,1,"","taps","The Farrow filter taps."]],"sdr.FarrowFractionalDelay.__call__":[[140,3,2,"p-m","m","The basepoint sample indices $m(k)$, which are the integer sample indices of the input signal."],[140,3,2,"p-mode","mode","The convolution mode."],[140,3,2,"p-mu","mu","The fractional sample indices $0 le mu(k) le 1$, which is the fractional sample advance of the input signal at input sample $m(k)$."],[140,3,2,"p-x","x","The input signal $x[n] = x(n T_s)$."]],"sdr.FarrowFractionalDelay.__init__":[[141,3,2,"p-alpha","alpha","A free design parameter $0 le alpha le 1$ that controls the shape of a 2nd order filter. This ensures that the filter has an even number of taps and is linear phase."],[141,3,2,"p-order","order","The order $p$ of the Lagrange interpolating polynomial."],[141,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.FarrowResampler":[[151,2,1,"","__call__","Resamples the input signal $x[n]$ by the given arbitrary rate $r$."],[152,2,1,"","__init__","Creates a new Farrow arbitrary resampler."],[153,2,1,"","clock_outputs","Resamples the input signal $x[n]$ by the given arbitrary rate $r$."],[154,4,1,"","delay","The delay $D$ of the Farrow FIR filters in samples."],[155,2,1,"","reset","Resets the filter state."]],"sdr.FarrowResampler.__call__":[[151,3,2,"p-mode","mode","The convolution mode."],[151,3,2,"p-rate","rate","The resampling rate $r$."],[151,3,2,"p-x","x","The input signal $x[n] = x(n T_s)$ with length $L$."]],"sdr.FarrowResampler.__init__":[[152,3,2,"p-alpha","alpha","A free design parameter $0 le alpha le 1$ that controls the shape of a 2nd order filter. This ensures that the filter has an even number of taps and is linear phase."],[152,3,2,"p-order","order","The order $p$ of the Lagrange interpolating polynomial."],[152,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.FarrowResampler.clock_outputs":[[153,3,2,"p-mode","mode","The convolution mode."],[153,3,2,"p-n_outputs","n_outputs","The requested number of output samples in $y[n]$."],[153,3,2,"p-rate","rate","The resampling rate $r$."],[153,3,2,"p-x","x","The input signal $x[n] = x(n T_s)$ with length $L$."]],"sdr.FractionalDelay":[[157,2,1,"","__init__","Creates a fractional delay FIR filter."]],"sdr.FractionalDelay.__init__":[[157,3,2,"p-delay","delay","The fractional delay $0 le Delta n le 1$."],[157,3,2,"p-length","length","The filter length $L$."]],"sdr.GLFSR":[[159,2,1,"","Taps","Creates a Galois LFSR from its taps."],[160,2,1,"","__init__","Creates a new Galois LFSR."],[161,4,1,"","characteristic_poly","The characteristic polynomial $c(x)$ that defines the linear recurrent sequence."],[162,4,1,"","feedback_poly","The feedback polynomial $f(x)$ that defines the feedback arithmetic."],[163,4,1,"","field","The FieldArray subclass for the finite field that defines the linear arithmetic."],[164,4,1,"","initial_state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[165,4,1,"","order","The order of the linear recurrence/linear recurrent sequence."],[166,2,1,"","reset","Resets the Galois LFSR state to the specified state."],[167,4,1,"","state","The current state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[168,2,1,"","step","Produces the next steps output symbols."],[169,4,1,"","taps","The shift register taps $T = [c_0, c_1, dots, c_{n-2}, c_{n-1}]$."],[170,2,1,"","to_fibonacci_lfsr","Converts the Galois LFSR to a Fibonacci LFSR that produces the same output."]],"sdr.GLFSR.Taps":[[159,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."],[159,3,2,"p-taps","taps","The shift register taps $T = [c_0, c_1, dots, c_{n-2}, c_{n-1}]$."]],"sdr.GLFSR.__init__":[[160,3,2,"p-characteristic_poly","characteristic_poly","The characteristic polynomial $c(x) = x^{n} - c_{n-1} cdot x^{n-1} - c_{n-2} cdot x^{n-2} - dots - c_{1} cdot x - c_{0}$."],[160,3,2,"p-feedback_poly","feedback_poly","The feedback polynomial $f(x) = -c_{0} cdot x^{n} - c_{1} cdot x^{n-1} - dots - c_{n-2} cdot x^{2} - c_{n-1} cdot x + 1$."],[160,3,2,"p-state","state","The initial state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.GLFSR.reset":[[166,3,2,"p-state","state","The state vector $S = [S_0, S_1, dots, S_{n-2}, S_{n-1}]$."]],"sdr.GLFSR.step":[[168,3,2,"p-steps","steps","The direction and number of output symbols to produce."]],"sdr.IIR":[[172,2,1,"","ZerosPoles","Creates an IIR filter from its zeros, poles, and gain."],[173,2,1,"","__call__","Filters the input signal $x[n]$ with the IIR filter."],[174,2,1,"","__init__","Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."],[175,4,1,"","a_taps","The feedback taps $a_j$ for $j = 0,...,N$."],[176,4,1,"","b_taps","The feedforward taps $b_i$ for $i = 0,...,M$."],[177,2,1,"","frequency_response","Returns the frequency response $H(omega)$ of the IIR filter."],[178,4,1,"","gain","The gain of the IIR filter."],[179,2,1,"","impulse_response","Returns the impulse response $h[n]$ of the IIR filter."],[180,2,1,"","noise_bandwidth","Returns the noise bandwidth $B_n$ of the IIR filter."],[181,4,1,"","order","The order of the IIR filter $N$."],[182,4,1,"","poles","The poles of the IIR filter."],[183,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[184,4,1,"","state","The filter state."],[185,2,1,"","step_response","Returns the step response $s[n]$ of the IIR filter."],[186,4,1,"","streaming","Indicates whether the filter is in streaming mode."],[187,4,1,"","zeros","The zeros of the IIR filter."]],"sdr.IIR.ZerosPoles":[[172,3,2,"p-gain","gain","The gain of the transfer function."],[172,3,2,"p-poles","poles","The poles of the transfer function."],[172,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[172,3,2,"p-zeros","zeros","The zeros of the transfer function."]],"sdr.IIR.__call__":[[173,3,2,"p-x","x","The input signal $x[n]$ with length $L$."]],"sdr.IIR.__init__":[[174,3,2,"p-a","a","The feedback coefficients $a_j$ for $j = 0,...,N$."],[174,3,2,"p-b","b","The feedforward coefficients $b_i$ for $i = 0,...,M$."],[174,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.IIR.frequency_response":[[177,3,2,"p-decades","decades","Only used if freqs is an integer."],[177,3,2,"p-freqs","freqs","The frequency specification."],[177,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."],[177,3,2,"p-whole","whole","Only used if freqs is an integer."]],"sdr.IIR.impulse_response":[[179,3,2,"p-n","n","The number of samples to return."]],"sdr.IIR.noise_bandwidth":[[180,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the filter in samples/s."]],"sdr.IIR.step_response":[[185,3,2,"p-n","n","The number of samples to return."]],"sdr.Integrator":[[189,2,1,"","__init__","Creates an integrating IIR filter."]],"sdr.Integrator.__init__":[[189,3,2,"p-method","method","The integration method."],[189,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.Interleaver":[[191,2,1,"","__init__","Creates an arbitrary interleaver."],[192,2,1,"","__len__","The size of the interleaver."],[193,2,1,"","deinterleave","Deinterleaves the input sequence $y[n]$."],[194,2,1,"","interleave","Interleaves the input sequence $x[n]$."],[195,4,1,"","inverse_map","The deinterleaver permutation map $pi^{-1}$."],[196,4,1,"","map","The interleaver permutation map $pi$."]],"sdr.Interleaver.__init__":[[191,3,2,"p-map","map","The interleaver permutation map $pi : i mapsto j$, containing the values $[0, N)$. The $i$-th input element will be placed at the $pi(i)$-th output position."]],"sdr.Interleaver.deinterleave":[[193,3,2,"p-y","y","The input sequence $y[n]$."]],"sdr.Interleaver.interleave":[[194,3,2,"p-x","x","The input sequence $x[n]$."]],"sdr.Interpolator":[[198,2,1,"","__init__","Creates a polyphase FIR interpolating filter."],[199,4,1,"","method","The method used to design the polyphase interpolating filter."]],"sdr.Interpolator.__init__":[[198,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[198,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[198,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[198,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[198,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.LeakyIntegrator":[[201,2,1,"","__init__","Creates a leaky integrator IIR filter."]],"sdr.LeakyIntegrator.__init__":[[201,3,2,"p-alpha","alpha","The leaky factor $alpha$."],[201,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.LinearModulation":[[203,2,1,"","__init__","Creates a new linear phase/amplitude modulation object."],[204,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[205,4,1,"","bps","The number of coded bits per symbol $k = log_2 M$."],[206,2,1,"","decide_symbols","Converts the received complex symbols into MLE symbol decisions."],[207,2,1,"","demodulate","Demodulates the pulse-shaped complex samples."],[208,2,1,"","map_symbols","Converts the decimal symbols into complex symbols."],[209,2,1,"","modulate","Modulates the decimal symbols into pulse-shaped complex samples."],[210,4,1,"","order","The modulation order $M = 2^k$."],[211,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[212,4,1,"","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[213,4,1,"","rx_filter","The receive decimating matched filter."],[214,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[215,4,1,"","sps","The number of samples per symbol $f_s / f_{sym}$."],[216,4,1,"","symbol_map","The symbol map ${0, dots, M-1} mapsto mathbb{C}$."],[217,4,1,"","tx_filter","The transmit interpolating pulse shaping filter."]],"sdr.LinearModulation.__init__":[[203,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[203,3,2,"p-phase_offset","phase_offset","A phase offset $phi$ in degrees to apply to symbol_map."],[203,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[203,3,2,"p-span","span","The span of the pulse shape in symbols."],[203,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[203,3,2,"p-symbol_map","symbol_map","The symbol mapping ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.LinearModulation.ber":[[204,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.LinearModulation.decide_symbols":[[206,3,2,"p-a_tilde","a_tilde","The received complex symbols $tilde{a}[k]$."]],"sdr.LinearModulation.demodulate":[[207,3,2,"p-x_tilde","x_tilde","The received pulse-shaped complex samples $tilde{x}[n]$ to demodulate, with sps samples per symbol and length sps * s_hat.size + pulse_shape.size - 1."]],"sdr.LinearModulation.map_symbols":[[208,3,2,"p-s","s","The decimal symbols $s[k]$ to map, $0$ to $M-1$."]],"sdr.LinearModulation.modulate":[[209,3,2,"p-s","s","The decimal symbols $s[k]$ to modulate, $0$ to $M-1$."]],"sdr.LinearModulation.ser":[[214,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.LoopFilter":[[219,2,1,"","__call__","Filters the input signal $x[n]$."],[220,2,1,"","__init__","Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."],[221,4,1,"","damping_factor","The damping factor $zeta$ of the loop filter."],[222,4,1,"","iir","The underlying IIR filter used to implement the loop filter."],[223,4,1,"","integral_gain","The integral gain $K_2$ of the loop filter."],[224,4,1,"","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter."],[225,4,1,"","proportional_gain","The proportional gain $K_1$ of the loop filter."],[226,2,1,"","reset","Resets the loop filter."]],"sdr.LoopFilter.__call__":[[219,3,2,"p-x","x","The input signal $x[n]$."]],"sdr.LoopFilter.__init__":[[220,3,2,"p-K0","K0","The NCO gain $K_0$."],[220,3,2,"p-Kp","Kp","The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."],[220,3,2,"p-damping_factor","damping_factor","The damping factor $zeta$ of the loop filter."],[220,3,2,"p-noise_bandwidth","noise_bandwidth","The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]],"sdr.MLPED":[[228,4,1,"","A_received","(Settable) The received signal RMS amplitude $A_{rx,rms}$."],[229,4,1,"","A_reference","(Settable) The reference signal RMS amplitude $A_{ref,rms}$."],[230,2,1,"","__call__","Detects the phase error."],[231,2,1,"","__init__","Initializes the ML-PED."],[232,2,1,"","data_aided_error","Simulates the average phase error of the data-aided PED using the specified modulation scheme."],[233,2,1,"","decision_directed_error","Simulates the average phase error of the decision-directed PED using the specified modulation scheme."],[234,4,1,"","gain","The gain of the phase error detector $K_p$."]],"sdr.MLPED.__call__":[[230,3,2,"p-received","received","The received complex symbols $tilde{a}[k]$."],[230,3,2,"p-reference","reference","The reference complex symbols, either the known transmitted complex symbols $a[k]$ or the complex symbols decisions $hat{a}[k]$."]],"sdr.MLPED.__init__":[[231,3,2,"p-A_received","A_received","The received signal RMS amplitude $A_{rx,rms}$."],[231,3,2,"p-A_reference","A_reference","The reference signal RMS amplitude $A_{ref,rms}$."]],"sdr.MLPED.data_aided_error":[[232,3,2,"p-modem","modem","The linear modulation scheme."],[232,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.MLPED.decision_directed_error":[[233,3,2,"p-modem","modem","The linear modulation scheme."],[233,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.MSK":[[236,2,1,"","__init__","Creates a new MSK object."]],"sdr.MSK.__init__":[[236,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[236,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[236,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.MovingAverager":[[238,2,1,"","__init__","Creates a moving average FIR filter."]],"sdr.MovingAverager.__init__":[[238,3,2,"p-length","length","The length of the moving average filter $L$."],[238,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."]],"sdr.NCO":[[240,2,1,"","__call__","Steps the NCO with variable frequency and/or phase signals."],[241,2,1,"","__init__","Creates a numerically controlled oscillator (NCO)."],[242,4,1,"","gain","(Settable) The NCO gain $K_0$."],[243,4,1,"","increment","(Settable) The constant phase accumulation $omega$ of the NCO in radians/sample."],[244,4,1,"","offset","(Settable) The absolute phase offset $theta$ of the NCO in radians."],[245,2,1,"","reset","Resets the NCO."],[246,2,1,"","step","Steps the NCO forward by $N$ samples."]],"sdr.NCO.__call__":[[240,5,2,"","_ScalarType_co","Steps the NCO with variable frequency and/or phase signals."],[240,3,2,"p-freq","freq","The variable frequency signal $f[n]$ in radians/sample."],[240,3,2,"p-output","output","The format of the output signal $y[n]$."],[240,3,2,"p-phase","phase","The variable phase signal $p[n]$ in radians."]],"sdr.NCO.__init__":[[241,3,2,"p-gain","gain","The NCO gain $K_0$."],[241,3,2,"p-increment","increment","The constant accumulation $omega$ of the NCO in radians/sample."],[241,3,2,"p-offset","offset","The absolute offset $theta$ of the NCO in radians."]],"sdr.NCO.step":[[246,3,2,"p-n","n","The number of samples $N$ to step the NCO forward."],[246,3,2,"p-output","output","The format of the output signal $y[n]$."]],"sdr.OQPSK":[[248,2,1,"","__init__","Creates a new OQPSK object."]],"sdr.OQPSK.__init__":[[248,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[248,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[248,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[248,3,2,"p-span","span","The span of the pulse shape in symbols."],[248,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[248,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PED":[[250,2,1,"","__call__","Detects the phase error."],[251,2,1,"","__init__","Initializes the PED."],[252,2,1,"","data_aided_error","Simulates the average phase error of the data-aided PED using the specified modulation scheme."],[253,2,1,"","decision_directed_error","Simulates the average phase error of the decision-directed PED using the specified modulation scheme."],[254,4,1,"","gain","The gain of the phase error detector $K_p$."]],"sdr.PED.__call__":[[250,3,2,"p-received","received","The received complex symbols $tilde{a}[k]$."],[250,3,2,"p-reference","reference","The reference complex symbols, either the known transmitted complex symbols $a[k]$ or the complex symbols decisions $hat{a}[k]$."]],"sdr.PED.data_aided_error":[[252,3,2,"p-modem","modem","The linear modulation scheme."],[252,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.PED.decision_directed_error":[[253,3,2,"p-modem","modem","The linear modulation scheme."],[253,3,2,"p-n_points","n_points","The number of points in the simulation."]],"sdr.PSK":[[256,2,1,"","__init__","Creates a new PSK object."],[257,2,1,"","ber","Computes the bit error rate (BER) at the provided $E_b/N_0$ values."],[258,4,1,"","phase_offset","The phase offset $phi$ in degrees."],[259,2,1,"","ser","Computes the symbol error rate (SER) at the provided $E_s/N_0$ values."],[260,4,1,"","symbol_map","The symbol map ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.PSK.__init__":[[256,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[256,3,2,"p-order","order","The modulation order $M = 2^k$, where $k ge 1$ is the coded bits per symbol."],[256,3,2,"p-phase_offset","phase_offset","The phase offset $phi$ in degrees."],[256,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[256,3,2,"p-span","span","The span of the pulse shape in symbols."],[256,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[256,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PSK.ber":[[257,3,2,"p-diff_encoded","diff_encoded","Indicates whether the input symbols were differentially encoded."],[257,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."]],"sdr.PSK.ser":[[259,3,2,"p-diff_encoded","diff_encoded","Indicates whether the input symbols were differentially encoded."],[259,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."]],"sdr.PiMPSK":[[262,2,1,"","__init__","Creates a new $pi/M$ PSK object."]],"sdr.PiMPSK.__init__":[[262,3,2,"p-alpha","alpha","The roll-off factor of the pulse shape."],[262,3,2,"p-order","order","The modulation order $M = 2^k$, where $k ge 1$ is the coded bits per symbol."],[262,3,2,"p-phase_offset","phase_offset","The absolute phase offset $phi$ in degrees."],[262,3,2,"p-pulse_shape","pulse_shape","The pulse shape $h[n]$ of the modulated signal."],[262,3,2,"p-span","span","The span of the pulse shape in symbols."],[262,3,2,"p-sps","sps","The number of samples per symbol $f_s / f_{sym}$."],[262,3,2,"p-symbol_labels","symbol_labels","The decimal symbol labels of consecutive complex symbols."]],"sdr.PolyphaseFIR":[[264,2,1,"","__call__","Filters the input signal $x[n]$ with the polyphase FIR filter."],[265,2,1,"","__init__","Creates a polyphase FIR filter."],[266,4,1,"","branches","The number of polyphase branches $B$."],[267,4,1,"","decimation","The integer decimation rate $Q$."],[268,4,1,"","delay","The delay of polyphase FIR filter in samples."],[269,4,1,"","input","The input connection method."],[270,4,1,"","interpolation","The integer interpolation rate $P$."],[271,4,1,"","order","The order $N = (M + 1)B - 1$ of the FIR prototype filter $h[n]$."],[272,4,1,"","output","The output connection method."],[273,4,1,"","polyphase_order","The order $M = (N + 1)/B - 1$ of each FIR polyphase filter $h_i[n]$."],[274,4,1,"","polyphase_taps","The polyphase feedforward taps $h_i[n]$."],[275,4,1,"","rate","The fractional resampling rate $r = P/Q$. The output sample rate is $f_{s,out} = f_{s,in} cdot r$."],[276,2,1,"","reset","Resets the filter state. Only useful when using streaming mode."],[277,4,1,"","taps","The prototype feedforward taps $h[n]$."]],"sdr.PolyphaseFIR.__call__":[[264,3,2,"p-mode","mode","The non-streaming convolution mode."],[264,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.PolyphaseFIR.__init__":[[265,3,2,"p-branches","branches","The number of polyphase branches $B$."],[265,3,2,"p-input","input","The input connection method."],[265,3,2,"p-output","output","The output connection method."],[265,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[265,3,2,"p-taps","taps","The prototype filter feedforward coefficients $h[n]$."]],"sdr.Q":[[278,3,2,"p-x","x","The real-valued input $x$."]],"sdr.Qinv":[[279,3,2,"p-p","p","The probability $p$ of exceeding the returned value $x$."]],"sdr.ReplicaCorrelator":[[281,2,1,"","p_d","Computes the probability of detection $P_d$."],[282,2,1,"","p_fa","Computes the probability of false alarm $P_{fa}$."],[283,2,1,"","roc","Computes the receiver operating characteristic (ROC) curve."],[284,2,1,"","threshold","Computes the threshold $gamma'$."]],"sdr.ReplicaCorrelator.p_d":[[281,3,2,"p-complex","complex","Indicates whether the signal is complex."],[281,3,2,"p-enr","enr","The received energy-to-noise ratio $mathcal{E}/sigma^2$ in dB."],[281,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."]],"sdr.ReplicaCorrelator.p_fa":[[282,3,2,"p-complex","complex","Indicates whether the signal is complex."],[282,3,2,"p-energy","energy","The received energy $mathcal{E} = sum_{i=0}^{N-1} left| s[n] right|^2$."],[282,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."],[282,3,2,"p-threshold","threshold","The threshold $gamma'$."]],"sdr.ReplicaCorrelator.roc":[[283,3,2,"p-complex","complex","Indicates whether the signal is complex."],[283,3,2,"p-enr","enr","The received energy-to-noise ratio $mathcal{E}/sigma^2$ in dB."],[283,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."]],"sdr.ReplicaCorrelator.threshold":[[284,3,2,"p-complex","complex","Indicates whether the signal is complex."],[284,3,2,"p-energy","energy","The received energy $mathcal{E} = sum_{i=0}^{N-1} left| s[n] right|^2$."],[284,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[284,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$."]],"sdr.Resampler":[[286,2,1,"","__call__","Filters the input signal $x[n]$ with the polyphase FIR filter."],[287,2,1,"","__init__","Creates a polyphase FIR rational resampling filter."],[288,4,1,"","method","The method used to design the polyphase resampling filter."]],"sdr.Resampler.__call__":[[286,3,2,"p-mode","mode","The non-streaming convolution mode."],[286,3,2,"p-x","x","The input signal $x[n]$ with sample rate $f_s$ and length $L$."]],"sdr.Resampler.__init__":[[287,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[287,3,2,"p-decimation","decimation","The decimation rate $Q$."],[287,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[287,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."],[287,3,2,"p-streaming","streaming","Indicates whether to use streaming mode."],[287,3,2,"p-taps","taps","The prototype filter design specification."]],"sdr.add_iid_rvs":[[289,3,2,"p-X","X","The distribution of the i.i.d."],[289,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[289,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.add_rvs":[[290,3,2,"p-X","X","The distribution of the random variable $X$."],[290,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[290,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.albersheim":[[291,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[291,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[291,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.average_power":[[292,3,2,"p-axis","axis","Axis or axes along which to compute the average power."],[292,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[292,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.awgn":[[293,3,2,"p-noise","noise","The noise power (variance) in linear units."],[293,3,2,"p-seed","seed","The seed for the random number generator."],[293,3,2,"p-snr","snr","The desired signal-to-noise ratio (SNR) in dB."],[293,3,2,"p-x","x","The time-domain signal $x[n]$ to which AWGN is added."]],"sdr.awgn_capacity":[[294,3,2,"p-bandwidth","bandwidth","The bandwidth $B$ of the channel in Hz."],[294,3,2,"p-snr","snr","The signal-to-noise ratio $S / N$ in dB of the channel."]],"sdr.bandpass_fir":[[295,3,2,"p-bandwidth","bandwidth","The two-sided bandwidth about $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[295,3,2,"p-center_freq","center_freq","The center frequency $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[295,3,2,"p-order","order","The filter order $N$."],[295,3,2,"p-window","window","The SciPy window definition."]],"sdr.bandstop_fir":[[296,3,2,"p-bandwidth","bandwidth","The two-sided bandwidth about $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[296,3,2,"p-center_freq","center_freq","The center frequency $f_{center}$, normalized to the Nyquist frequency $f_s / 2$."],[296,3,2,"p-order","order","The filter order $N$."],[296,3,2,"p-window","window","The SciPy window definition."]],"sdr.barker_code":[[297,3,2,"p-length","length","The length $n$ of the Barker code/sequence."],[297,3,2,"p-output","output","The output format of the Barker code/sequence."]],"sdr.bec":[[298,3,2,"p-p","p","The probability $p$ of a bit erasure."],[298,3,2,"p-seed","seed","The seed for the random number generator."],[298,3,2,"p-x","x","The input sequence $x$ with $x_i in {0, 1}$."]],"sdr.bec_capacity":[[299,3,2,"p-p","p","The erasure probability $p$ of the BEC channel."]],"sdr.berlekamp_massey":[[300,3,2,"p-output","output","The output object type."],[300,3,2,"p-sequence","sequence","A linear recurrent sequence $y$ in $mathrm{GF}(p^m)$."]],"sdr.biawgn_capacity":[[301,3,2,"p-snr","snr","The signal-to-noise ratio $S / N = A^2 / sigma^2$ at the output of the channel in dB."]],"sdr.binary_code":[[302,3,2,"p-length","length","The length $n = 2^m$ of the binary code."]],"sdr.bsc":[[303,3,2,"p-p","p","The probability $p$ of a bit flip."],[303,3,2,"p-seed","seed","The seed for the random number generator."],[303,3,2,"p-x","x","The input sequence $x$ with $x_i in {0, 1}$."]],"sdr.bsc_capacity":[[304,3,2,"p-p","p","The transition probability $p$ of the BSC channel."]],"sdr.clock_error":[[305,3,2,"p-center_freq","center_freq","The center frequency $f_c$ of the complex baseband signal in Hz."],[305,3,2,"p-error","error","The fractional clock error $epsilon$, which is unitless, with 0 representing no clock error. For example, 1e-6 represents 1 ppm of clock error."],[305,3,2,"p-error_rate","error_rate","The clock error $Delta epsilon / Delta t$ in 1/s."],[305,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[305,3,2,"p-x","x","The time-domain signal $x[n]$ to which the clock error is applied."]],"sdr.coherent_gain":[[306,3,2,"p-time_bandwidth","time_bandwidth","The time-bandwidth product $T_c B_n$ in seconds-Hz (unitless)."]],"sdr.coherent_gain_loss":[[307,3,2,"p-freq","freq","The frequency offset $Delta f$ or signal bandwidth $B_c$ in Hz."],[307,3,2,"p-time","time","The coherent integration time $T_c$ or time offset in $Delta t$ in seconds."]],"sdr.composite_snr":[[308,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1$ in dB."],[308,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2$ in dB."]],"sdr.crest_factor":[[309,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.db":[[310,3,2,"p-type","type","The type of input value or signal."],[310,3,2,"p-x","x","The input value or signal."]],"sdr.diff_decode":[[311,3,2,"p-y","y","The input encoded data $y[k]$."],[311,3,2,"p-y_prev","y_prev","The previous value of the encoded data $y[k-1]$."]],"sdr.diff_encode":[[312,3,2,"p-x","x","The input uncoded data $x[k]$."],[312,3,2,"p-y_prev","y_prev","The previous value of the output encoded data $y[k-1]$."]],"sdr.dmc":[[313,3,2,"p-P","P","The $m times n$ transition probability matrix $P$, where $P_{i,j} = Pr(Y = y_j | X = x_i)$."],[313,3,2,"p-X","X","The input alphabet $mathcal{X}$ of size $m$."],[313,3,2,"p-Y","Y","The output alphabet $mathcal{Y}$ of size $n$."],[313,3,2,"p-seed","seed","The seed for the random number generator."],[313,3,2,"p-x","x","The input sequence $x$ with $x_i in mathcal{X}$."]],"sdr.downsample":[[314,3,2,"p-rate","rate","The downsampling factor $r$."],[314,3,2,"p-x","x","The time-domain signal $x[n]$ with sample rate $f_s$."]],"sdr.ebn0_to_esn0":[[315,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[315,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."],[315,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."]],"sdr.ebn0_to_snr":[[316,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[316,3,2,"p-ebn0","ebn0","Bit energy $E_b$ to noise PSD $N_0$ ratio in dB."],[316,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."],[316,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.energy":[[317,3,2,"p-axis","axis","Axis or axes along which to compute the energy."],[317,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[317,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.esn0_to_ebn0":[[318,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[318,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."],[318,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."]],"sdr.esn0_to_snr":[[319,3,2,"p-esn0","esn0","Symbol energy $E_s$ to noise PSD $N_0$ ratio in dB."],[319,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.euclidean":[[320,3,2,"p-axis","axis","Axis or axes along which to compute the distance."],[320,3,2,"p-x","x","The time-domain signal $x[n]$."],[320,3,2,"p-y","y","The time-domain signal $y[n]$."]],"sdr.evm":[[321,3,2,"p-norm","norm","The normalization source used in the EVM calculation."],[321,3,2,"p-output","output","The output type of the EVM calculation."],[321,3,2,"p-ref","ref","The complex reference symbols $x[k]$."],[321,3,2,"p-x_hat","x_hat","The complex symbols $hat{x}[k]$ to be measured."]],"sdr.fdoa_crlb":[[322,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[322,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[322,3,2,"p-rms_integration_time","rms_integration_time","The root-mean-square (RMS) integration time $T_{text{rms}}$ in Hz."],[322,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1 = S_1 / (N_0 B_n)$ in dB."],[322,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2 = S_2 / (N_0 B_n)$ in dB."],[322,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.foa_crlb":[[323,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[323,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[323,3,2,"p-rms_integration_time","rms_integration_time","The root-mean-square (RMS) integration time $T_{text{rms}}$ in Hz."],[323,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) of the signal $gamma = S / (N_0 B_n)$ in dB."],[323,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.fractional_delay_fir":[[324,3,2,"p-delay","delay","The fractional delay $0 le Delta n le 1$."],[324,3,2,"p-length","length","The filter length $L$."]],"sdr.free_space_path_loss":[[325,3,2,"p-distance","distance","The distance $d$ in meters between the transmitter and receiver."],[325,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.frequency_offset":[[326,3,2,"p-offset","offset","The frequency offset $Delta f = f_{text{new}} - f$ in Hz."],[326,3,2,"p-offset_rate","offset_rate","The frequency offset rate $Delta^2 f / Delta t$ in Hz/s."],[326,3,2,"p-phase","phase","The phase offset $phi$ in degrees."],[326,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[326,3,2,"p-x","x","The time-domain signal $x[n]$ to which the frequency offset is applied."]],"sdr.gaussian":[[327,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[327,3,2,"p-span","span","The length of the filter in symbols."],[327,3,2,"p-sps","sps","The number of samples per symbol."],[327,3,2,"p-time_bandwidth","time_bandwidth","The time-bandwidth product $B T_{sym}$ of the filter, where $B$ is the one-sided 3-dB bandwidth in Hz and $T_{sym}$ is the symbol time in seconds."]],"sdr.gold_code":[[328,3,2,"p-index","index","The index $i$ in $[-2, n)$ of the Gold code."],[328,3,2,"p-length","length","The length $n = 2^m - 1$ of the Gold code/sequence."],[328,3,2,"p-output","output","The output format of the Gold code/sequence."],[328,3,2,"p-poly1","poly1","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$ for the first $m$-sequence."],[328,3,2,"p-poly2","poly2","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$ for the second $m$-sequence."],[328,3,2,"p-verify","verify","Indicates whether to verify that the provided polynomials are a preferred pair using sdr.is_preferred_pair()."]],"sdr.gray_code":[[329,3,2,"p-length","length","The length $n = 2^m$ of the Gray code."]],"sdr.h0":[[330,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[330,3,2,"p-detector","detector","The detector type."],[330,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[330,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[330,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."]],"sdr.h1":[[331,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[331,3,2,"p-detector","detector","The detector type."],[331,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[331,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[331,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."],[331,3,2,"p-snr","snr","The signal-to-noise ratio $S / sigma^2$ in dB."]],"sdr.hadamard_code":[[332,3,2,"p-index","index","The index $i$ in $[0, n)$ of the Hadamard code."],[332,3,2,"p-length","length","The length $n = 2^m$ of the Hadamard code/sequence."],[332,3,2,"p-output","output","The output format of the Hadamard code/sequence."]],"sdr.half_sine":[[333,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[333,3,2,"p-span","span","The length of the filter in symbols."],[333,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.hamming":[[334,3,2,"p-axis","axis","Axis or axes along which to compute the distance."],[334,3,2,"p-x","x","The time-domain signal $x[n]$."],[334,3,2,"p-y","y","The time-domain signal $y[n]$."]],"sdr.hexdump":[[335,3,2,"p-data","data","The data to display."],[335,3,2,"p-width","width","The number of bytes per line."]],"sdr.highpass_fir":[[336,3,2,"p-cutoff_freq","cutoff_freq","The cutoff frequency $f_c$, normalized to the Nyquist frequency $f_s / 2$."],[336,3,2,"p-order","order","The filter order $N$."],[336,3,2,"p-window","window","The SciPy window definition."]],"sdr.iq_imbalance":[[337,3,2,"p-amplitude","amplitude","The amplitude imbalance $A$ in dB."],[337,3,2,"p-phase","phase","The phase imbalance $phi$ in degrees."],[337,3,2,"p-x","x","The complex time-domain signal $x[n]$ to which IQ imbalance is applied."]],"sdr.is_preferred_pair":[[338,3,2,"p-poly1","poly1","The first primitive polynomial $f(x)$."],[338,3,2,"p-poly2","poly2","The second primitive polynomial $g(x)$."]],"sdr.kasami_code":[[339,3,2,"p-index","index","The index of the Kasami code."],[339,3,2,"p-length","length","The length $n = 2^m - 1$ of the Kasami code/sequence."],[339,3,2,"p-output","output","The output format of the Kasami code/sequence."],[339,3,2,"p-poly","poly","The primitive polynomial of degree $m$ over $mathrm{GF}(2)$."]],"sdr.linear":[[340,3,2,"p-type","type","The type of output value or signal."],[340,3,2,"p-x","x","The input value or signal in dB."]],"sdr.lowpass_fir":[[341,3,2,"p-cutoff_freq","cutoff_freq","The cutoff frequency $f_c$, normalized to the Nyquist frequency $f_s / 2$."],[341,3,2,"p-order","order","The filter order $N$."],[341,3,2,"p-window","window","The SciPy window definition."]],"sdr.m_sequence":[[342,3,2,"p-degree","degree","The degree $m$ of the LFSR."],[342,3,2,"p-index","index","The index $i$ in $[1, q^m)$ of the $m$-sequence."],[342,3,2,"p-output","output","The output format of the $m$-sequence."],[342,3,2,"p-poly","poly","The characteristic polynomial of the LFSR over $mathrm{GF}(q)$."]],"sdr.max_frequency_offset":[[343,3,2,"p-cgl","cgl","The coherent gain loss (CGL) in dB."],[343,3,2,"p-integration_time","integration_time","The coherent integration time $T_c$ in seconds."]],"sdr.max_iid_rvs":[[344,3,2,"p-X","X","The distribution of the i.i.d."],[344,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[344,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.max_integration_time":[[345,3,2,"p-cgl","cgl","The coherent gain loss (CGL) in dB."],[345,3,2,"p-freq_offset","freq_offset","The frequency offset $Delta f$ in Hz."]],"sdr.max_rvs":[[346,3,2,"p-X","X","The distribution of the random variable $X$."],[346,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[346,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_iid_rvs":[[347,3,2,"p-X","X","The distribution of the i.i.d."],[347,3,2,"p-n_vars","n_vars","The number $n$ of random variables."],[347,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_rvs":[[348,3,2,"p-X","X","The distribution of the random variable $X$."],[348,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[348,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.min_snr":[[349,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[349,3,2,"p-detector","detector","The detector type."],[349,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[349,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[349,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[349,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.mix":[[350,3,2,"p-complex","complex","Indicates whether to mix by a complex exponential or real sinusoid."],[350,3,2,"p-freq","freq","The frequency $f$ of the sinusoid in Hz (or 1/samples if sample_rate=1). The frequency must satisfy $-f_s/2 le f le f_s/2$."],[350,3,2,"p-phase","phase","The phase $phi$ of the sinusoid in degrees."],[350,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal."],[350,3,2,"p-x","x","The time-domain signal $x[n]$."]],"sdr.multiply_rvs":[[351,3,2,"p-X","X","The distribution of the random variable $X$."],[351,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[351,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."],[351,3,2,"p-z","z","The $z$ values at which to evaluate the PDF of $Z$."]],"sdr.multirate_fir":[[352,3,2,"p-atten","atten","The stopband attenuation $A_{text{stop}}$ in dB."],[352,3,2,"p-decimation","decimation","The decimation rate $Q$."],[352,3,2,"p-interpolation","interpolation","The interpolation rate $P$."],[352,3,2,"p-polyphase_order","polyphase_order","The order of each polyphase filter."]],"sdr.non_coherent_gain":[[353,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[353,3,2,"p-detector","detector","The detector type."],[353,3,2,"p-extrapolate","extrapolate","Indicates whether to extrapolate $G_{nc}$ using smaller values of $N_{nc}$."],[353,3,2,"p-n_nc","n_nc","The number of samples $N_{nc}$ to non-coherently integrate."],[353,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$."],[353,3,2,"p-snr","snr","The reference SNR in dB."],[353,3,2,"p-snr_ref","snr_ref","The SNR reference."]],"sdr.p_d":[[354,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[354,3,2,"p-detector","detector","The detector type."],[354,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[354,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[354,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$ in $(0, 1)$."],[354,3,2,"p-snr","snr","The signal-to-noise ratio $S / sigma^2$ in dB."]],"sdr.p_fa":[[355,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[355,3,2,"p-detector","detector","The detector type."],[355,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[355,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[355,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."],[355,3,2,"p-threshold","threshold","The detection threshold $gamma$ in linear units."]],"sdr.pack":[[356,3,2,"p-bpe","bpe","The number of bits per element in the output array."],[356,3,2,"p-dtype","dtype","The data type of the output array."],[356,3,2,"p-x","x","The input binary array with 1 bit per element."]],"sdr.papr":[[357,3,2,"p-axis","axis","Axis or axes along which to compute the PAPR."],[357,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.parabolic_antenna":[[358,3,2,"p-diameter","diameter","The diameter $d$ in meters of the parabolic reflector."],[358,3,2,"p-efficiency","efficiency","The efficiency $0 le eta le 1$ of the parabolic reflector."],[358,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.peak_power":[[359,3,2,"p-axis","axis","Axis or axes along which to compute the peak power."],[359,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[359,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.peak_voltage":[[360,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[360,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.peebles":[[361,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[361,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[361,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.plot":[[362,6,1,"","ber","Plots the bit error rate (BER) as a function of $E_b/N_0$."],[363,6,1,"","constellation","Plots the constellation of the complex symbols $hat{x}[k]$."],[364,6,1,"","correlation","Plots the correlation between two time-domain signals $x[n]$ and $y[n]$."],[365,6,1,"","detector_pdfs","Plots the probability density functions (PDFs) of the detector under $mathcal{H}_0$ and $mathcal{H}_1$."],[366,6,1,"","dft","Plots the discrete Fourier transform (DFT) of the time-domain signal $x[n]$."],[367,6,1,"","dtft","Plots the discrete-time Fourier transform (DTFT) of the time-domain signal $x[n]$."],[368,6,1,"","eye","Plots the eye diagram of the baseband modulated signal $x[n]$."],[369,6,1,"","filter","Plots the magnitude response $|H(omega)|^2$, impulse response $h[n]$, and zeros and poles of the filter."],[370,6,1,"","group_delay","Plots the group delay $tau_g(omega)$ of the IIR filter."],[371,6,1,"","impulse_response","Plots the impulse response $h[n]$ of a filter."],[372,6,1,"","magnitude_response","Plots the magnitude response $|H(omega)|^2$ of the filter."],[373,6,1,"","p_d","Plots the probability of detection $P_d$ as a function of received SNR or ENR."],[374,6,1,"","periodogram","Plots the estimated power spectral density $P_{xx}$ of a time-domain signal $x[n]$ using Welch's method."],[375,6,1,"","phase_delay","Plots the phase delay $tau_{phi}(omega)$ of the filter."],[376,6,1,"","phase_response","Plots the phase response $angle H(omega)$ of the filter."],[377,6,1,"","phase_tree","Plots the phase tree of a continuous-phase modulated (CPM) signal signal $x[n]$."],[378,6,1,"","raster","Plots a raster of the time-domain signal $x[n]$."],[379,6,1,"","roc","Plots the receiver operating characteristic (ROC) curve as a function of $P_{fa}$."],[380,6,1,"","ser","Plots the symbol error rate (SER) as a function of $E_s/N_0$."],[381,6,1,"","shannon_limit_ebn0","Plots the Shannon limit for the bit energy-to-noise PSD ratio $E_b/N_0$."],[382,6,1,"","spectrogram","Plots the spectrogram of a time-domain signal $x[n]$ using Welch's method."],[383,6,1,"","stem","Wraps matplotlib.pyplot.stem() to style the plot more like MATLAB."],[384,6,1,"","step_response","Plots the step response $s[n]$ of a filter."],[385,6,1,"","symbol_map","Plots the symbol map of the complex symbols $hat{x}[k]$."],[386,6,1,"","time_domain","Plots a time-domain signal $x[n]$."],[387,6,1,"","use_style","Applies sdr's default matplotlib rcParams."],[388,6,1,"","zeros_poles","Plots the zeros and poles of the filter."]],"sdr.plot.ber":[[362,3,2,"p-ax","ax","The axis to plot on."],[362,3,2,"p-ber","ber","The bit error rate $P_{be}$."],[362,3,2,"p-ebn0","ebn0","The bit energy $E_b$ to noise PSD $N_0$ ratio (dB)."],[362,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.semilogy()."]],"sdr.plot.constellation":[[363,3,2,"p-ax","ax","The axis to plot on."],[363,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[363,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to Matplotlib functions."],[363,3,2,"p-limits","limits","The axis limits, which apply to both the x- and y-axis."],[363,3,2,"p-persistence","persistence","Indicates whether to plot the points as a persistence plot."],[363,3,2,"p-x_hat","x_hat","The complex symbols $hat{x}[k]$."]],"sdr.plot.correlation":[[364,3,2,"p-ax","ax","The axis to plot on."],[364,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[364,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[364,3,2,"p-mode","mode","The numpy.correlate() correlation mode."],[364,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[364,3,2,"p-x","x","The first time-domain signal $x[n]$."],[364,3,2,"p-y","y","The second time-domain signal $y[n]$."],[364,3,2,"p-y_axis","y_axis","Indicates how to plot the y-axis."]],"sdr.plot.detector_pdfs":[[365,3,2,"p-annotate","annotate","Indicates whether to annotate the plot with the probabilities of false alarm and detection."],[365,3,2,"p-ax","ax","The axis to plot on."],[365,3,2,"p-h0","h0","The statistical distribution under $mathcal{H}_0$."],[365,3,2,"p-h1","h1","The statistical distribution under $mathcal{H}_1$."],[365,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[365,3,2,"p-p_h0","p_h0","The probability of the $mathcal{H}_0$ tails to plot."],[365,3,2,"p-p_h1","p_h1","The probability of the $mathcal{H}_1$ tails to plot."],[365,3,2,"p-points","points","The number of points to use for the x-axis."],[365,3,2,"p-shade","shade","Indicates whether to shade the tails of the PDFs."],[365,3,2,"p-threshold","threshold","The detection threshold $gamma$."],[365,3,2,"p-x","x","The x-axis values to use for the plot."]],"sdr.plot.dft":[[366,3,2,"p-ax","ax","The axis to plot on."],[366,3,2,"p-centered","centered","Indicates whether to center the DFT about 0."],[366,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[366,3,2,"p-fast","fast","Indicates whether to use the fast Fourier transform (FFT) algorithm."],[366,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[366,3,2,"p-oversample","oversample","The factor to oversample the DFT."],[366,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[366,3,2,"p-size","size","The number of points to use for the DFT."],[366,3,2,"p-type","type","The type of plot to use."],[366,3,2,"p-window","window","The SciPy window definition."],[366,3,2,"p-x","x","The time-domain signal $x[n]$."],[366,3,2,"p-x_axis","x_axis","The x-axis scaling."],[366,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.dtft":[[367,3,2,"p-ax","ax","The axis to plot on."],[367,3,2,"p-centered","centered","Indicates whether to center the DTFT about 0."],[367,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[367,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[367,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[367,3,2,"p-size","size","The number of points to use for the DTFT."],[367,3,2,"p-window","window","The SciPy window definition."],[367,3,2,"p-x","x","The time-domain signal $x[n]$."],[367,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.eye":[[368,3,2,"p-ax","ax","The axis to plot on."],[368,3,2,"p-color","color","Indicates how to color the rasters."],[368,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[368,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to sdr.plot.raster()."],[368,3,2,"p-persistence","persistence","Indicates whether to plot the raster as a persistence plot."],[368,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[368,3,2,"p-span","span","The number of symbols per raster."],[368,3,2,"p-sps","sps","The number of samples per symbol."],[368,3,2,"p-x","x","The baseband modulated signal $x[n]$."]],"sdr.plot.filter":[[369,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[369,3,2,"p-filter","filter","The filter definition."],[369,3,2,"p-n_freq","n_freq","The number of samples $N_f$ in the frequency response."],[369,3,2,"p-n_time","n_time","The number of samples $N_t$ in the time domain."],[369,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[369,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.group_delay":[[370,3,2,"p-ax","ax","The axis to plot on."],[370,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[370,3,2,"p-filter","filter","The filter definition."],[370,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[370,3,2,"p-n","n","The number of samples $N$ in the frequency response."],[370,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[370,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.impulse_response":[[371,3,2,"p-ax","ax","The axis to plot on."],[371,3,2,"p-filter","filter","The filter definition."],[371,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[371,3,2,"p-n","n","The number of samples $N$ to plot."],[371,3,2,"p-offset","offset","The x-axis offset to apply to the first sample."],[371,3,2,"p-type","type","The type of plot to use."]],"sdr.plot.magnitude_response":[[372,3,2,"p-ax","ax","The axis to plot on."],[372,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[372,3,2,"p-filter","filter","The filter definition."],[372,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[372,3,2,"p-n","n","The number of samples $N$ in the frequency response."],[372,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[372,3,2,"p-x_axis","x_axis","The x-axis scaling."],[372,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.p_d":[[373,3,2,"p-ax","ax","The axis to plot on."],[373,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[373,3,2,"p-p_d","p_d","The probability of detection $P_d$."],[373,3,2,"p-x","x","The SNR or ENR in dB."],[373,3,2,"p-x_label","x_label","The x-axis label to use."]],"sdr.plot.periodogram":[[374,3,2,"p-average","average","The type of averaging to use."],[374,3,2,"p-ax","ax","The axis to plot on."],[374,3,2,"p-detrend","detrend","The type of detrending to apply."],[374,3,2,"p-fft","fft","The number of points to use in the FFT."],[374,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[374,3,2,"p-length","length","The length of each segment in samples."],[374,3,2,"p-overlap","overlap","The number of samples to overlap between segments."],[374,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[374,3,2,"p-window","window","The SciPy window definition."],[374,3,2,"p-x","x","The time-domain signal $x[n]$."],[374,3,2,"p-x_axis","x_axis","The x-axis scaling."],[374,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.phase_delay":[[375,3,2,"p-ax","ax","The axis to plot on."],[375,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[375,3,2,"p-filter","filter","The filter definition."],[375,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[375,3,2,"p-n","n","The number of samples $N$ in the phase delay."],[375,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[375,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.phase_response":[[376,3,2,"p-ax","ax","The axis to plot on."],[376,3,2,"p-decades","decades","The number of decades to plot when x_axis=\"log\"."],[376,3,2,"p-filter","filter","The filter definition."],[376,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[376,3,2,"p-n","n","The number of samples $N$ in the phase response."],[376,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[376,3,2,"p-unwrap","unwrap","Indicates whether to unwrap the phase response."],[376,3,2,"p-x_axis","x_axis","The x-axis scaling."]],"sdr.plot.phase_tree":[[377,3,2,"p-ax","ax","The axis to plot on."],[377,3,2,"p-color","color","Indicates how to color the rasters."],[377,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to sdr.plot.raster()."],[377,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[377,3,2,"p-span","span","The number of symbols per raster."],[377,3,2,"p-sps","sps","The number of samples per symbol."],[377,3,2,"p-x","x","The baseband CPM signal $x[n]$."]],"sdr.plot.raster":[[378,3,2,"p-ax","ax","The axis to plot on."],[378,3,2,"p-color","color","Indicates how to color the rasters."],[378,3,2,"p-colorbar","colorbar","Indicates whether to add a colorbar to the plot."],[378,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to Matplotlib functions."],[378,3,2,"p-length","length","The length of each raster in samples."],[378,3,2,"p-persistence","persistence","Indicates whether to plot the raster as a persistence plot."],[378,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[378,3,2,"p-stride","stride","The stride between each raster in samples."],[378,3,2,"p-x","x","The real time-domain signal $x[n]$."]],"sdr.plot.roc":[[379,3,2,"p-ax","ax","The axis to plot on."],[379,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function defined by type."],[379,3,2,"p-p_d","p_d","The probability of detection $P_d$."],[379,3,2,"p-p_fa","p_fa","The probability of false alarm $P_{fa}$."],[379,3,2,"p-type","type","The type of plot to generate."]],"sdr.plot.ser":[[380,3,2,"p-ax","ax","The axis to plot on."],[380,3,2,"p-esn0","esn0","The symbol energy $E_s$ to noise PSD $N_0$ ratio (dB)."],[380,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.semilogy()."],[380,3,2,"p-ser","ser","The symbol error rate $P_{se}$."]],"sdr.plot.shannon_limit_ebn0":[[381,3,2,"p-ax","ax","The axis to plot on."],[381,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.plot.spectrogram":[[382,3,2,"p-ax","ax","The axis to plot on."],[382,3,2,"p-detrend","detrend","The type of detrending to apply."],[382,3,2,"p-fft","fft","The number of points to use in the FFT."],[382,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.pcolormesh(). The following keyword arguments are set by default."],[382,3,2,"p-length","length","The length of each segment in samples."],[382,3,2,"p-overlap","overlap","The number of samples to overlap between segments."],[382,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[382,3,2,"p-window","window","The SciPy window definition."],[382,3,2,"p-x","x","The time-domain signal $x[n]$."],[382,3,2,"p-y_axis","y_axis","The y-axis scaling."]],"sdr.plot.stem":[[383,5,2,"","_ScalarType_co","Wraps matplotlib.pyplot.stem() to style the plot more like MATLAB."],[383,3,2,"p-ax","ax","The axis to plot on."],[383,3,2,"p-color","color","The color of the stem line and marker."],[383,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.stem()."],[383,3,2,"p-x","x","The x-coordinates of the stem plot."],[383,3,2,"p-y","y","The y-coordinates of the stem plot."]],"sdr.plot.step_response":[[384,3,2,"p-ax","ax","The axis to plot on."],[384,3,2,"p-filter","filter","The filter definition."],[384,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to the plotting function."],[384,3,2,"p-n","n","The number of samples $N$ to plot."],[384,3,2,"p-type","type","The type of plot to use."]],"sdr.plot.symbol_map":[[385,3,2,"p-annotate","annotate","If True, the symbols are annotated with their index. If \"bin\", the symbols are annotated with their binary representation."],[385,3,2,"p-ax","ax","The axis to plot on."],[385,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot(). The following keyword arguments are set by default."],[385,3,2,"p-limits","limits","The axis limits, which apply to both the x- and y-axis. If None, the axis limits are set to 50% larger than the maximum value."],[385,3,2,"p-modulation","modulation","The linear modulation or symbol map ${0, dots, M-1} mapsto mathbb{C}$."]],"sdr.plot.time_domain":[[386,5,2,"","_ScalarType_co","Plots a time-domain signal $x[n]$."],[386,3,2,"p-ax","ax","The axis to plot on."],[386,3,2,"p-centered","centered","Indicates whether to center the x-axis about 0."],[386,3,2,"p-diff","diff","Indicates how to differentiate the real and imaginary parts of a complex signal."],[386,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."],[386,3,2,"p-offset","offset","The x-axis offset to apply to the first sample."],[386,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal in samples/s."],[386,3,2,"p-t","t","The time signal $t[n]$."],[386,3,2,"p-x","x","The time-domain signal $x[n]$."]],"sdr.plot.zeros_poles":[[388,3,2,"p-ax","ax","The axis to plot on."],[388,3,2,"p-filter","filter","The filter definition."],[388,3,2,"p-kwargs","kwargs","Additional keyword arguments to pass to matplotlib.pyplot.plot()."]],"sdr.polyphase_decompose":[[389,3,2,"p-branches","branches","The number of polyphase branches $B$."],[389,3,2,"p-taps","taps","The prototype filter feedforward coefficients $h[n]$."]],"sdr.power":[[390,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[390,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.preferred_pairs":[[391,3,2,"p-degree","degree","The degree $m$ of the $m$-sequences."],[391,3,2,"p-poly","poly","The first polynomial $f(x)$ in the preferred pair."]],"sdr.raised_cosine":[[392,3,2,"p-alpha","alpha","The excess bandwidth $0 le alpha le 1$ of the filter."],[392,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[392,3,2,"p-span","span","The length of the filter in symbols."],[392,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.rectangular":[[393,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[393,3,2,"p-span","span","The length of the filter in symbols."],[393,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.rms_bandwidth":[[394,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[394,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.rms_integration_time":[[395,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ in samples/s."],[395,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.rms_voltage":[[396,3,2,"p-db","db","Indicates whether to return the result in decibels (dB)."],[396,3,2,"p-x","x","The time-domain signal $x[n]$ to measure."]],"sdr.root_raised_cosine":[[397,3,2,"p-alpha","alpha","The excess bandwidth $0 le alpha le 1$ of the filter."],[397,3,2,"p-norm","norm","Indicates how to normalize the pulse shape."],[397,3,2,"p-span","span","The length of the filter in symbols."],[397,3,2,"p-sps","sps","The number of samples per symbol."]],"sdr.sample_rate_offset":[[398,3,2,"p-offset","offset","The sample rate offset $Delta f_s = f_{s,text{new}} - f_{s}$ in samples/s."],[398,3,2,"p-offset_rate","offset_rate","The sample rate offset rate $Delta^2 f_s / Delta t$ in samples/s^2."],[398,3,2,"p-sample_rate","sample_rate","The current sample rate $f_s$ in samples/s."],[398,3,2,"p-x","x","The time-domain signal $x[n]$ to which the sample rate offset is applied."]],"sdr.shannon_limit_ebn0":[[399,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.shannon_limit_snr":[[400,3,2,"p-rho","rho","The nominal spectral efficiency $rho$ of the modulation in bits/2D."]],"sdr.shnidman":[[401,3,2,"p-n_nc","n_nc","The number of non-coherent combinations $N_{nc} ge 1$."],[401,3,2,"p-p_d","p_d","The desired probability of detection $P_d$ in $(0, 1)$."],[401,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."],[401,3,2,"p-swerling","swerling","The Swerling target model."]],"sdr.sinusoid":[[402,3,2,"p-complex","complex","Indicates whether to generate a complex exponential or real sinusoid."],[402,3,2,"p-duration","duration","The duration of the signal in seconds (or samples if sample_rate=1)."],[402,3,2,"p-freq","freq","The frequency $f$ of the sinusoid in Hz (or 1/samples if sample_rate=1). The frequency must satisfy $-f_s/2 le f le f_s/2$."],[402,3,2,"p-freq_rate","freq_rate","The frequency rate $frac{df}{dt}$ of the sinusoid in Hz/s (or 1/samples$^2$ if sample_rate=1)."],[402,3,2,"p-phase","phase","The phase $phi$ of the sinusoid in degrees."],[402,3,2,"p-sample_rate","sample_rate","The sample rate $f_s$ of the signal."]],"sdr.snr_to_ebn0":[[403,3,2,"p-bps","bps","Coded bits per symbol $log_2 M$, where $M$ is the modulation order."],[403,3,2,"p-rate","rate","Code rate $r = k/n$, where $k$ is the number of information bits and $n$ is the number of coded bits."],[403,3,2,"p-snr","snr","Signal-to-noise ratio $S/N$ in dB."],[403,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.snr_to_esn0":[[404,3,2,"p-snr","snr","Signal-to-noise ratio $S/N$ in dB."],[404,3,2,"p-sps","sps","Samples per symbol $f_s / f_{sym}$."]],"sdr.subtract_rvs":[[405,3,2,"p-X","X","The distribution of the random variable $X$."],[405,3,2,"p-Y","Y","The distribution of the random variable $Y$."],[405,3,2,"p-p","p","The probability of exceeding the x axis, on either side, for each distribution."]],"sdr.tdoa_crlb":[[406,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[406,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[406,3,2,"p-rms_bandwidth","rms_bandwidth","The root-mean-square (RMS) bandwidth $B_{s,text{rms}}$ in Hz."],[406,3,2,"p-snr1","snr1","The signal-to-noise ratio (SNR) of the first signal $gamma_1 = S_1 / (N_0 B_n)$ in dB."],[406,3,2,"p-snr2","snr2","The signal-to-noise ratio (SNR) of the second signal $gamma_2 = S_2 / (N_0 B_n)$ in dB."],[406,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.threshold":[[407,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[407,3,2,"p-detector","detector","The detector type."],[407,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[407,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[407,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."],[407,3,2,"p-sigma2","sigma2","The noise variance $sigma^2$ in linear units."]],"sdr.threshold_factor":[[408,3,2,"p-complex","complex","Indicates whether the input signal is real or complex."],[408,3,2,"p-db","db","Indicates whether to return the detection threshold $alpha$ in dB."],[408,3,2,"p-detector","detector","The detector type."],[408,3,2,"p-n_c","n_c","The number of samples to coherently integrate $N_c$."],[408,3,2,"p-n_nc","n_nc","The number of samples to non-coherently integrate $N_{nc}$."],[408,3,2,"p-p_fa","p_fa","The desired probability of false alarm $P_{fa}$ in $(0, 1)$."]],"sdr.to_complex_baseband":[[409,3,2,"p-x_r","x_r","The real passband signal $x_r[n]$ centered at $f_{s,r}/4$ with sample rate $f_{s,r}$. If the length is odd, one zero is appended to the end."]],"sdr.to_real_passband":[[410,3,2,"p-x_c","x_c","The complex baseband signal $x_c[n]$ centered at $0$ with sample rate $f_{s,c}$."]],"sdr.toa_crlb":[[411,3,2,"p-bandwidth","bandwidth","The signal bandwidth $B_s$ in Hz."],[411,3,2,"p-noise_bandwidth","noise_bandwidth","The noise bandwidth $B_n$ in Hz."],[411,3,2,"p-rms_bandwidth","rms_bandwidth","The root-mean-square (RMS) bandwidth $B_{s,text{rms}}$ in Hz."],[411,3,2,"p-snr","snr","The signal-to-noise ratio (SNR) of the signal $gamma = S / (N_0 B_n)$ in dB."],[411,3,2,"p-time","time","The integration time $T$ in seconds."]],"sdr.unpack":[[412,3,2,"p-bpe","bpe","The number of bits per element in the input array."],[412,3,2,"p-dtype","dtype","The data type of the output array."],[412,3,2,"p-x","x","The input array with bpe bits per element."]],"sdr.upsample":[[413,3,2,"p-rate","rate","The upsampling factor $r$."],[413,3,2,"p-x","x","The time-domain signal $x[n]$ with sample rate $f_s$."]],"sdr.walsh_code":[[414,3,2,"p-index","index","The index $i$ in $[0, n)$ of the Walsh code."],[414,3,2,"p-length","length","The length $n = 2^m$ of the Walsh code/sequence."],[414,3,2,"p-output","output","The output format of the Walsh code/sequence."]],"sdr.wavelength":[[415,3,2,"p-freq","freq","The frequency $f$ in Hz of the signal."]],"sdr.zadoff_chu_sequence":[[416,3,2,"p-length","length","The length $N$ of the Zadoff-Chu sequence."],[416,3,2,"p-root","root","The root $0 < u < N$ of the Zadoff-Chu sequence."],[416,3,2,"p-shift","shift","The shift $q in mathbb{Z}$ of the Zadoff-Chu sequence."]]},"objnames":{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","parameter","Python parameter"],"4":["py","property","Python property"],"5":["py","typeParameter","Python type parameter"],"6":["py","function","Python function"]},"objtypes":{"0":"py:module","1":"py:class","2":"py:method","3":"py:parameter","4":"py:property","5":"py:typeParameter","6":"py:function"},"terms":{"":[1,5,9,19,20,42,46,48,62,67,75,77,78,79,81,82,84,88,96,103,104,105,106,107,108,114,115,117,119,122,125,126,128,132,134,135,139,156,158,159,160,164,166,167,171,177,180,185,188,197,200,202,203,206,207,208,209,227,235,237,247,255,261,263,275,280,282,284,285,291,293,294,301,305,307,308,316,319,321,322,323,326,331,337,354,361,363,364,366,367,368,369,370,372,374,375,376,377,378,382,383,384,386,387,394,395,398,399,400,401,402,403,404,406,409,410,411,423,424,427,431,432,434,437,438],"0":[2,3,6,7,8,10,12,17,19,20,24,25,26,27,32,33,34,35,40,42,43,46,48,62,63,74,84,88,90,95,96,99,101,108,109,114,115,117,119,125,126,128,129,130,132,135,136,137,138,139,140,141,143,150,152,156,157,158,159,160,161,162,164,166,167,168,169,170,171,172,174,175,176,177,180,188,190,191,197,198,200,202,203,206,207,208,209,216,220,227,231,235,236,237,239,241,247,248,255,256,258,260,261,262,263,264,271,273,274,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,324,325,326,327,328,329,330,331,332,334,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,358,361,363,365,366,367,368,369,370,371,372,375,376,377,381,383,384,385,386,387,388,389,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,420,421,422,424,427,428,429,431,432,433,434,435,439],"00":[114,177,260,261,424,429,431],"000":[99,368],"00000000":335,"0000000000000002":114,"00000000e":[114,177,260,261,429],"00000004":335,"00000008":335,"00000010":335,"00000020":335,"0000010494310452":[278,279],"0004368":428,"0005":433,"00088449":345,"00095883":428,"001":[10,365,433],"00110561":345,"00147414":345,"0017044":428,"00175012":428,"0018818867640235891":345,"00221122":345,"00254816":428,"00391660e":114,"0041658j":177,"00423921":428,"00442243":345,"00474595":428,"005":433,"0058825":428,"006151":428,"00721645":428,"00830241j":177,"00845058":428,"00851486":428,"00e":[424,431],"00j":[260,261],"01":[10,114,177,260,261,335,424,429,431,433],"010299956639812":306,"010299956639813":306,"01073669":428,"0112324":428,"01140214e":429,"01238051j":177,"0125":433,"01273202":428,"01342358":428,"015":433,"016796159999999997":429,"0175":433,"0183":361,"01j":[260,261],"02":[335,429,432,433],"020599913279624":310,"020599913279625":[315,404],"02372977":428,"02769991":428,"03":[114,177,335,424,429,431],"03355896":428,"03650247":428,"03715849e":114,"03953322e":429,"04":[114,177,335,429,431],"04436799":429,"04650654":428,"04734644":428,"05":[335,427,429,433],"05098525":428,"05e":[424,431],"06":[335,353,365],"07":335,"07106781e":[260,261],"07367348":428,"07864960352514258":355,"08":335,"09":335,"09009009009009009":305,"092337035029908":429,"09900990099009901":305,"0a":335,"0e":[353,354],"0j":[114,177,236,248,256,262,305],"0x7fe11c44f890":433,"1":[2,3,6,7,8,10,12,13,14,17,19,20,24,25,26,27,32,33,34,35,40,43,46,48,62,64,67,74,77,81,83,84,85,88,89,90,95,96,97,99,100,101,108,111,112,114,115,117,119,124,125,126,128,129,130,131,132,134,135,136,137,138,139,140,141,143,147,150,152,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,177,180,188,189,190,195,197,198,200,201,202,203,206,207,208,209,216,218,220,221,227,231,235,236,237,239,241,247,248,249,255,256,257,258,259,260,261,262,263,271,273,274,277,278,279,280,281,282,283,284,285,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,380,381,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,420,424,427,428,429,431,432,433,434,435,439],"10":[10,40,62,88,90,97,99,101,125,132,134,135,136,138,139,150,156,158,164,166,167,168,170,188,190,197,203,235,247,248,255,256,257,259,261,262,271,273,274,277,281,283,285,289,290,291,292,293,295,296,300,302,305,306,307,308,310,313,315,316,317,318,319,321,322,323,325,327,329,330,331,333,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,357,358,359,360,361,362,363,366,367,369,370,371,372,375,376,380,381,383,384,386,388,389,390,392,393,394,395,396,397,398,401,402,403,404,405,406,407,411,414,424,428,431,432,433,434,435],"100":[10,88,99,114,141,150,152,171,177,179,185,188,200,237,239,257,259,291,293,295,296,299,304,305,307,310,314,321,322,323,326,336,340,341,344,345,347,350,361,362,363,369,371,377,380,384,395,398,401,402,406,409,410,411,413,427,433],"1000":[10,114,139,150,177,232,233,235,247,252,253,255,261,321,325,421,434],"10000":62,"1000e":305,"1001":[62,306,307,330,331,343,345,365],"100_000":[289,290,330,331,344,346,347,348,351,363,405,424,431,434],"100e":398,"100e3":305,"100th":382,"101":[24,32,97,99,281,283,289,290,294,295,296,308,322,323,330,331,336,341,344,346,347,348,351,353,354,399,400,405,406,408,411,424,431,432],"1024":[62,114,115,119,177,369,370,372,375,376,435],"10422993e":429,"1048576":367,"10813095e":429,"10862468e":429,"10_000":[62,394,432],"10e":[343,398,424],"10e3":[305,386],"10th":382,"10x":[125,158],"11":[19,40,62,90,125,134,136,139,150,158,166,168,190,197,235,247,255,261,289,290,297,300,302,307,325,329,330,331,332,342,344,346,347,348,352,353,354,355,389,394,395,405,407,414,424,432],"11e":424,"12":[40,62,125,134,136,139,150,158,166,168,190,197,235,247,255,261,282,284,289,290,291,302,322,323,328,329,330,331,338,342,344,346,347,348,349,353,354,389,391,394,395,401,405,406,411,428,432,434],"120":421,"120e3":305,"1213137600":433,"12169481":343,"12240078e":429,"12323400e":[260,261],"1263714068241546":429,"12670446":428,"128":156,"12ab":291,"13":[125,136,139,150,158,168,190,197,235,247,255,261,280,281,282,284,297,302,306,329,330,331,349,354,386,389,395,420],"130":314,"13335164":429,"139":416,"14":[125,136,150,158,168,190,235,247,255,261,281,302,329,330,331,353,354,361,389,395,414],"140":[84,314],"140e3":305,"14335017":307,"1455082":429,"1466992016":433,"14686183e":114,"147":343,"14721649e":429,"15":[125,136,150,158,168,190,227,235,247,255,261,283,302,329,330,331,339,346,348,351,354,389,395,413,424],"150":[409,410,434],"15647504e":429,"158655":[278,279],"15865525393145707":[278,279],"16":[7,125,150,156,158,190,235,247,255,257,259,260,261,289,290,291,302,315,316,318,324,329,330,331,332,335,344,346,347,348,349,354,362,380,389,392,395,397,403,404,405,408,414,432],"1622776601683795":[330,331],"16666666666666669":305,"16j":[260,261],"17":[125,150,158,235,260,261,321,330,331,354,358,389,395],"1706839j":177,"179":150,"17j":114,"18":[125,150,158,289,330,331,332,354,389,395,414,420,434],"180":337,"18301321":428,"183490056794499":349,"18872187554086717":32,"189":32,"19":[125,150,158,330,331,354,389,395],"1909320767063554":429,"198":427,"1_000":[99,200,237,293,325,337,363,368,398,409,410,432],"1_001":[289,290,325,344,346,347,348,351,405],"1d":[301,378],"1e":[97,281,289,290,291,294,305,307,322,323,330,331,343,344,346,347,348,349,351,353,354,361,365,381,400,405,406,407,411,424,431,434],"1e0":[322,323,381,406,411,434],"1e3":[307,325,343,345,350,402,409],"1e5":[322,323,406,411],"1e6":[305,307,322,323,325,406,411,434],"1e7":[406,411],"1e8":[322,323,406,411],"1e9":[325,358,415],"1f":156,"1j":[10,62,177,330,331,369,370,371,372,375,376,384,388,424,427,429,431,433],"2":[9,10,19,20,24,32,40,42,43,49,62,63,67,75,77,80,84,88,90,96,97,98,99,100,101,108,112,114,115,119,125,126,128,129,130,131,132,134,135,136,137,138,139,150,156,158,159,160,161,162,163,164,166,167,168,169,170,177,188,190,197,200,201,202,203,210,227,235,237,239,247,248,249,255,256,257,258,259,260,261,262,263,271,273,274,277,278,279,280,281,282,283,284,285,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,416,417,420,421,422,423,424,427,428,429,431,432,433,434,435],"20":[19,24,32,88,89,90,97,99,125,150,158,197,239,281,285,290,294,298,301,303,305,306,310,313,321,330,331,335,337,340,346,348,353,354,360,389,395,396,398,400,413,434],"200":[114,177,307,314,345,378,432,434],"2000":10,"201":381,"2019":[125,158,300],"2023":[437,438],"2024":438,"2025":438,"2048":[314,409,410,413],"20e":431,"20e3":305,"21":[125,150,158,291,330,331,349,353,354,358,386,401],"210":84,"21002545":399,"21565653e":429,"21719":156,"22":[125,150,158,330,331,354],"221":343,"22464680e":[260,261],"22961005941814036j":429,"23":[64,85,125,150,158,198,287,330,331,352,354,358],"235":[307,345],"23810898":428,"23851924e":429,"24":[125,150,158,330,331],"2433896262681":343,"24338963":343,"249387366082999":[315,316],"25":[24,32,62,90,97,125,139,158,298,303,307,313,324,330,331,427,432,433,435],"250":[409,410,433],"253":361,"256":[374,382],"25e":307,"26":[158,305,330,331],"267486807285799":349,"27":[330,331,332],"27280811e":114,"279055648123014":321,"28":[330,331,433],"280":84,"2815515655446004":[330,331],"28283804209787544j":429,"28727058":428,"28864626708135344":395,"28865329576550935":395,"2886751345948129":[394,395],"29":[330,331,420,428],"29088345066048465":394,"295865294259153":321,"299792458":415,"2d":[56,59,60,90,143,149,294,363,368,378,381,399,400],"2e":[307,343,424,431],"2e3":[307,325],"2e6":305,"2e9":325,"2f":[424,431,432],"2f_":410,"2m":261,"2n":[96,97,98,300],"2nd":[67,141,152,218,220,419,433,438],"2p":[198,287],"2q":416,"3":[10,19,24,32,40,62,67,75,77,78,81,84,88,90,96,97,101,114,125,126,129,130,131,132,134,135,136,137,138,139,150,156,158,159,161,162,163,164,166,167,168,169,170,177,188,190,197,200,227,235,237,239,247,249,255,257,258,259,260,261,263,271,273,274,277,280,281,285,289,290,291,293,295,296,297,298,300,301,302,303,305,306,307,308,310,313,314,315,316,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,361,363,364,365,366,367,368,369,370,371,372,375,376,381,383,384,386,388,389,391,392,393,394,395,397,398,399,401,402,403,405,406,407,409,410,411,412,413,414,415,416,420,421,424,427,429,431,433,435,437],"30":[197,200,235,237,247,255,261,285,294,301,314,330,331,332,342,353,369,371,384,400,401,409,410,429,438],"300":[114,177,307,345,409,410],"3000":10,"30202676j":114,"302585092994046":[330,331,354,407],"30533298":399,"3061467458920719j":429,"30614675j":429,"31":[291,330,331,361,428],"312":427,"32":[156,291,324,330,331,332,349,414,427,431,433],"32607991":428,"32626966":307,"3267725122":433,"33":[79,330,331],"3333421398098428j":429,"34":[78,330,331,386],"343756821937996":321,"35":[200,237,330,331,433],"35093841":428,"35935288":429,"35949665":428,"36":[330,331],"36139242":429,"36272725":340,"36787944117144245":355,"3678794411714425":355,"36961426":177,"37":[330,331],"3763214":429,"37868538208862":429,"38":77,"3806359704987265j":429,"3885743j":177,"39":75,"39261642":429,"396":427,"3e":343,"3j":305,"3rd":[139,429],"3x":[84,125,126,129,130,131,132,134,135,136,137,138,158,159,161,162,163,164,166,167,168,169,170,197,300],"4":[10,19,24,32,40,62,75,77,84,88,90,97,101,114,125,126,129,130,131,132,134,135,136,137,138,139,150,156,158,159,161,162,163,164,166,167,168,169,170,177,188,190,197,200,227,235,236,237,239,247,248,249,255,257,258,259,260,261,263,271,273,274,277,280,281,282,284,285,289,290,291,293,295,296,297,300,301,302,305,306,307,308,313,314,315,316,318,319,321,322,323,324,325,326,328,329,330,331,332,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,358,361,362,363,365,366,367,368,369,370,371,372,375,376,380,383,384,385,386,387,388,389,391,392,394,395,397,398,399,401,402,403,404,405,407,409,410,412,413,414,416,420,422,427,429,432,433,434],"40":[81,88,150,197,285,308,314,353],"400":[114,177,307,314,345],"4000":10,"40270968":429,"40e9":325,"410342926869486":353,"41446321":343,"42007077":307,"42176895e":429,"4219690131724645":395,"42721858e":429,"43":[80,141,152],"43085717":429,"437435887991374":358,"44":[291,294,400],"442":343,"44778322188337":325,"45":[235,236,247,248,255,258,293,321,337,350,363,368,385,386,398,402,432,433,434],"45557651":429,"46":361,"46154771":429,"46380627201816593":429,"468383135163":325,"46911955":429,"46917696":429,"47005584":429,"47193366e":429,"47199608":429,"472298696877605":177,"4722987":177,"47271105":177,"47338728e":429,"47394825":177,"47410241":429,"47510421":429,"47601067":177,"47820725":429,"478207252018059":429,"47925143":429,"4839738":429,"48566716":429,"48840102":429,"49090568":429,"49124786":429,"4988817673791569":429,"499445060713011":353,"4x":[366,367],"5":[10,19,24,32,40,42,43,62,84,88,90,96,97,98,99,100,101,114,125,126,129,130,131,132,134,135,136,137,138,139,141,150,152,156,158,159,161,162,163,164,166,167,168,169,170,188,190,197,200,227,235,237,239,247,255,261,263,271,273,274,277,281,283,285,289,290,291,293,295,296,297,298,300,301,302,303,304,305,306,307,308,313,314,315,316,318,319,321,322,323,324,325,326,327,328,329,330,331,332,335,336,337,338,339,341,342,343,344,345,346,347,348,349,351,353,354,355,358,361,365,366,367,368,369,370,371,372,375,376,383,384,386,388,389,391,392,394,395,397,398,399,401,403,404,405,407,409,410,413,414,416,420,428,429,432,433,435],"50":[235,247,255,261,310,340,345,385,386,395,409,410,427,432],"500":[307,345,409,410,433],"5000":10,"50118723":340,"50e6":310,"51":[301,353],"51520024":177,"51561102639099":321,"5174271293851465":[330,331,354,407],"52496713":177,"5291527586123693":429,"529544741425365":358,"52e":431,"53081763e":114,"53637958":429,"54":[291,335],"541421484556116":354,"5414214845561176":354,"54974021":399,"55":[307,358,386,438],"5533811909871471":[330,331],"5533811909871473":[330,331],"5543277195052645":429,"56859734":399,"56e":431,"57":239,"5719707":429,"57286400e":429,"57338213":177,"5759632j":114,"57922366":307,"58172329e":429,"59":399,"591745389548616":399,"5_000":99,"5e":[307,343],"5x":[125,126,130,138,158,159,162,170,300],"6":[10,19,24,32,40,62,84,88,90,101,125,126,132,134,135,136,137,138,139,150,156,158,159,164,166,167,168,169,170,177,188,190,197,200,227,235,237,239,247,255,260,261,263,271,273,274,277,281,282,284,285,289,290,291,300,301,302,305,306,307,308,310,313,314,315,316,321,322,323,324,325,326,328,329,330,331,332,335,339,340,342,343,344,345,346,347,348,349,353,354,355,358,361,363,364,366,368,369,370,371,372,375,376,381,383,384,385,386,388,389,392,394,395,397,398,399,405,406,407,409,410,411,414,416,420,423,428,429,433,434],"60":[239,294,295,296,305,308,336,341,400,435,438],"6058636":114,"61":[335,438],"62":[291,335],"62720131e":114,"63":[328,335,339,342,364],"63882791e":429,"64":[84,156,324,335,429],"6400000000000001":429,"6448536269514744":[330,331],"65":335,"6560":342,"66":335,"666092814306324":353,"67":335,"67772160e":429,"68":335,"684365018955985":429,"69":335,"6903095079298097":[330,331],"69685122e":429,"6a":335,"6b":335,"6c":335,"6d":335,"6e":335,"6f":335,"6j":305,"7":[19,24,32,40,62,84,88,90,101,125,126,129,130,131,132,134,135,136,137,138,139,150,156,158,159,161,162,163,164,166,167,168,169,170,188,190,197,227,235,247,249,255,260,261,263,271,273,274,277,281,285,289,290,291,294,297,300,301,302,305,307,313,321,322,323,324,325,326,328,329,330,331,332,335,336,339,342,344,346,347,348,352,353,354,355,389,394,395,398,399,400,405,406,407,411,414,416,420,429,431,433,437],"70":[84,335],"70554345409542":[330,331],"70710678":[235,247,255],"70710678j":[235,247,255],"71":335,"71104892744724":429,"71930943":429,"72":335,"72236648e":429,"7229165664874556":[330,331],"7229165664874564":[330,331],"73":335,"732513192714245":349,"7391036260090295":429,"73910363":429,"74":335,"74077567e":429,"7446372175904691":394,"75":[24,90,296,335,433],"7506126339170005":[318,403],"76":[310,335,424],"7630284641923553":354,"76562500e":[114,177],"77":[310,335,340],"77694738j":177,"78":335,"78207252e":429,"78877688e":429,"79":[335,361],"79630028j":114,"7a":335,"7b":291,"8":[40,43,62,84,88,90,101,114,125,134,136,139,150,156,158,166,168,177,188,190,197,203,235,236,247,248,255,256,257,259,260,261,262,263,271,273,274,277,285,289,290,291,294,300,301,302,305,307,313,321,322,323,324,325,329,330,331,332,335,342,344,346,347,348,349,353,354,355,358,361,362,368,369,370,371,372,375,376,380,383,384,386,387,388,389,391,392,394,395,397,398,399,400,401,405,406,407,411,414,420,424,428,429,431,432,433,435],"80":[62,64,85,88,198,287,352,416],"800":378,"802":19,"8038919141626675":307,"8080":420,"8096":291,"80e3":305,"810210290266568":358,"81474977e":429,"8174569":399,"8178049":114,"82":305,"83":358,"830810203546193":358,"83622458e":114,"83697020e":260,"84684395e":429,"85259041e":429,"85986396":399,"86109590e":429,"87820725":429,"88127210e":114,"88708159":429,"8912709229530473":[330,331],"89312837e":429,"9":[10,40,62,84,90,114,125,134,136,139,150,156,158,166,168,177,190,197,235,247,255,261,263,271,273,274,277,281,285,289,290,291,300,301,302,305,307,313,321,325,329,330,331,332,335,342,344,346,347,348,349,353,354,355,389,392,394,395,397,401,405,407,414,421,422,429,431,432,434,435],"9061938024368232":[330,331,354,407],"9120975839632417":307,"92":325,"92239754":307,"9223975406030527":307,"93chu_sequ":416,"94024315e":429,"946e":305,"94724205":429,"95":[291,321,361],"95312500e":[114,177],"95337172":114,"95th":321,"9678537j":177,"97070312e":[114,177],"979400086720376":[318,319],"98":325,"98046875e":[114,177],"98970004336019":310,"99":401,"99023438e":[114,177],"9952623149688795":340,"999":361,"9993519409971622":429,"A":[6,10,40,43,56,63,67,75,77,78,79,80,81,83,88,101,108,109,114,125,126,139,141,150,152,158,159,177,188,200,203,218,227,237,248,249,256,262,264,286,291,300,301,302,305,329,330,331,335,337,338,349,353,354,355,358,363,368,378,391,392,397,401,407,408,418,419,421,424,431,433,437],"But":325,"For":[97,98,100,281,282,284,289,293,300,305,308,314,325,326,394,395,405,408,413,420,428],"If":[43,89,95,99,136,150,168,203,240,248,256,262,283,285,289,292,293,294,295,296,305,306,307,308,313,317,322,323,328,336,341,351,353,356,359,360,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,390,391,396,406,409,411,412,424,431,437],"In":[10,12,18,19,24,32,40,62,63,64,84,85,88,89,90,97,99,101,109,110,114,123,125,126,129,130,131,132,134,135,136,137,138,139,140,141,148,150,151,152,156,158,159,161,162,163,164,166,167,168,169,170,172,174,177,186,188,189,190,197,198,200,201,227,235,237,238,239,247,249,255,257,258,259,260,261,264,265,271,273,274,277,278,279,281,283,285,286,287,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,380,381,383,384,385,386,387,388,389,391,392,393,394,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,424,427,431,434],"It":[43,108,139,141,152,171,197,203,218,227,248,256,262,293,325,353,383,424,431],"No":[142,154,305],"On":[140,151],"One":[235,247,261,435],"Or":[422,423],"The":[10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,147,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,420,421,422,423,424,428,429,431,433,434,435,437,439],"Then":[239,398],"There":[328,338,339,391,439],"These":[171,247,255,261,307,366,387,422,433],"To":422,"_":[235,247,255,261,291,306,321,353,424,431],"_0":[2,9,96,280,330,355,365,408,424,431],"_1":[2,9,96,280,331,354,365,424,431],"____":285,"__call__":[10,11,12,18,24,27,32,35,56,57,62,63,64,84,85,88,89,90,94,108,109,110,123,125,127,139,140,141,148,150,151,152,156,171,172,173,174,186,188,189,197,198,200,201,218,219,227,230,237,238,239,240,249,250,263,264,265,285,286,287,438],"__init__":421,"__len__":[40,62,84,88,108,111,156,190,192,197,237,263,285],"_rc_param":387,"_scalartype_co":[9,239,240,383,386],"_version":421,"a1":[424,431],"a2":[330,331,424,431],"a_":[64,85,198,227,228,229,231,287,352],"a_0":171,"a_1":[424,431],"a_2":424,"a_hat":[433,434],"a_j":[171,174,175,188,200,369,370,371,372,375,376,384,388,429],"a_receiv":[227,228,231],"a_ref":227,"a_refer":[227,229,231],"a_rx":227,"a_tap":[171,175,188,200,429],"a_tild":[202,206,235,247,255,261,433,434],"ab":[88,136,168,188,330,331,424,431,435],"abil":438,"about":[156,295,296,366,367,386,394,395,423],"abov":[314,413,438],"absent":355,"absolut":[236,239,241,244,248,262,326,381,399,424,431],"abstractmethod":[42,44,53,202,204,214],"acceler":437,"accept":438,"access":420,"accomplish":[427,434],"accord":[10,322,323,406,411],"accordingli":188,"accumul":[101,188,239,240,241,243,246,433,438],"accur":[289,290,344,346,347,348,351,405],"acf":438,"achiev":[2,291,301,349,353,354,355,395,399,401,407,424,431,434,435,438],"across":[40,62,88,265,291,320,325,334,349,353,401,408],"activ":422,"actual":367,"ad":[293,305,363,368,378,421,437,438],"add":[101,103,106,235,247,255,261,293,326,333,363,368,378,393,398,418,434,439],"add_iid_rv":[7,289,438],"add_rv":[7,290,438],"adder":[10,19,84,125,158,218,239,311,312,433],"addit":[0,5,19,20,293,294,301,328,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,386,388,413,418,424,431,437,438],"addition":[125,437],"additivescrambl":[0,19,20,21,22,23,438],"addopt":423,"adjac":[43,236,248,256,260,262,434,435],"adjust":351,"advanc":[139,140,150,198,287,401,438],"affect":[330,331,349,353,354,355,392,397,407,408],"after":[12,13,14,274,277,301,353,421],"against":[291,361,366],"agc":[10,11,12,13,14,15,16,17,18,227,419,437,438],"aid":[227,232,249,252],"aim":437,"alarm":[2,96,97,98,99,100,280,281,282,283,284,291,330,331,349,353,354,355,361,365,379,401,407,408,424,431,437,438],"albersheim":[2,291,349,438],"algorithm":[300,308,366,438],"alias":[314,413,438],"align":[63,109,140,150,151,153,198,247,264,286,287,301,332,366,414,424,427,431,438],"all":[20,62,84,101,106,126,128,159,160,197,240,263,265,272,285,321,344,347,366,368,377,378,391,421,423,437,438],"allow":[139,330,331,349,354,355,394,395,407,408,422,423,437,438],"along":[292,300,317,320,334,357,359,438],"alouini":[257,259],"alpha":[2,8,10,12,13,62,139,141,150,152,200,201,203,248,256,262,327,387,392,397,408,432,435],"alphabet":[24,25,26,32,33,34,90,92,93,95,313],"also":[10,62,136,168,227,235,249,305,324,325,327,383,437],"altern":[2,96,280,291,331,424,429,431],"although":235,"amalia":401,"ambigu":308,"amplifi":[10,12,14],"amplitud":[8,62,202,203,227,228,229,231,301,337,424,431,433],"an":[0,2,3,5,7,10,12,19,20,32,43,62,84,88,96,108,110,114,116,134,136,138,141,151,152,153,157,166,168,170,171,172,174,177,179,188,189,190,191,197,200,201,203,236,237,239,248,256,257,259,262,280,285,289,294,307,324,343,345,356,362,366,367,371,380,386,391,398,412,415,419,422,433,437,438],"analysi":[67,74,289,290,344,346,347,348,351,405,421,433,437,438],"analyz":437,"analyze_psk":434,"angl":[9,249,326,376,433],"angular":150,"ani":[150,310,314,340,353,413,423],"annot":[260,294,365,385,400,421,438],"answer":325,"antenna":[325,358,437],"anti":[314,413,438],"apa":437,"apart":247,"api":[437,438,439],"apm":401,"appear":[10,427],"append":[150,157,324,409,432],"appendix":[67,218,327,392,397],"appli":[9,46,62,84,89,139,140,197,203,235,247,255,261,285,295,296,305,326,336,337,341,363,366,367,368,371,374,382,385,386,387,395,398,418,437],"applic":[125,158,300,438],"approach":[10,24,32,67,75,77,78,79,80,81,88,139,150,218,227,249,299,304,351,392,397,399,433],"appropri":32,"approx":[12,13,14,156],"approxim":[200,201,289,291,308,361,437,438],"april":438,"ar":[24,26,27,32,42,43,52,55,62,63,64,84,85,89,90,96,101,103,104,105,107,109,110,125,136,138,139,140,141,143,149,150,151,152,157,158,170,172,174,189,197,198,201,203,213,217,235,236,238,240,246,247,248,255,256,261,262,263,264,265,272,274,277,280,285,286,287,289,294,298,299,300,303,304,305,307,308,322,323,324,325,328,332,333,338,339,342,344,346,347,348,351,352,356,363,364,366,368,369,370,372,374,375,376,377,378,382,383,385,386,387,389,391,393,401,406,409,410,411,414,420,422,424,427,429,431,433,435,437,439],"arang":[10,40,62,84,150,156,190,197,271,273,274,277,285,293,308,353,389,398,427,433],"arbitrari":[0,8,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,190,191,202,426,437,438],"arcsin":358,"aren":420,"arg":421,"argument":[63,64,85,109,198,264,286,287,306,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,386,388,421,428,429,438],"arithmet":[125,130,131,158,162,163],"around":[156,236,248,256,262,383],"arrai":[7,19,24,32,40,43,63,90,101,114,136,139,143,149,151,153,168,177,190,198,203,235,236,239,247,248,255,256,260,261,262,271,273,274,277,287,292,297,298,302,303,307,311,312,313,317,320,328,329,332,334,339,342,343,345,356,357,359,386,389,398,399,401,412,414,429,433],"arrang":389,"array_equ":[19,235,247,255,261,300,332,414],"arraylik":[1,2,3,4,5,6,7,8,9,10,11,19,20,21,23,24,27,29,32,35,37,40,42,43,44,46,48,53,56,57,62,63,64,84,85,88,90,94,95,96,97,98,99,100,101,103,108,109,110,125,126,128,134,139,140,150,151,153,156,158,159,160,166,171,172,173,174,188,190,191,193,194,197,198,200,202,203,204,206,207,208,209,214,218,219,227,230,235,236,237,247,248,249,250,255,256,257,259,261,262,263,264,265,278,279,280,281,282,283,284,285,286,287,291,292,293,294,298,299,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,335,337,340,343,345,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,382,384,385,388,389,390,394,395,396,398,399,400,401,403,404,406,407,408,409,410,411,412,413,415,418],"arriv":[4,322,323,406,411],"ascend":[101,106],"assum":[95,96,280,293,313,322,323,325,356,386,399,406,411,412],"astral":421,"astyp":[291,353,361],"asymmetr":410,"attack":[10,12,13],"atten":[64,85,198,287,352,438],"attenu":[12,13,64,85,198,287,325,352,392,397],"august":438,"author":437,"auto":[297,328,332,339,342,364,370,372,374,375,376,382,414,416,438],"automat":[10,11,12,227,365,419,437,438],"avail":[433,434,437],"averag":[3,6,101,200,201,227,232,233,235,237,238,247,249,252,253,261,292,293,294,321,357,374,394,430,437,438],"average_pow":[6,292,357,438],"avg":[292,293,357],"awgn":[5,235,247,255,257,259,261,293,294,301,321,362,363,380,381,399,400,409,410,418,434,437,438],"awgn_capac":[5,294,399,400,438],"ax":[9,291,292,317,320,334,357,359,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,401,438],"axi":[289,290,292,317,320,334,344,346,347,348,351,357,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,405,424,427,431,438],"axvlin":[294,305,400,424,431],"b":[3,62,84,171,174,197,263,265,266,271,273,274,277,285,291,294,322,323,327,335,369,371,384,389,420,421,435],"b_":[6,322,323,394,406,411],"b_c":307,"b_i":[171,174,176,188,200,369,370,371,372,375,376,384,388,429],"b_n":[62,67,68,69,74,75,77,80,81,84,88,108,117,156,171,180,188,197,200,218,220,224,237,263,285,306,322,323,406,411],"b_nt":433,"b_tap":[171,176,188,200,429],"backward":[136,168,188,189,438,439],"band":156,"bandpass":[3,295],"bandpass_fir":[3,295,438],"bandstop":[3,296],"bandstop_fir":[3,296,438],"bandwidth":[6,62,67,68,69,74,78,84,88,89,108,117,141,152,156,171,180,188,197,200,218,220,224,237,263,285,294,295,296,306,307,322,323,327,392,394,397,400,406,411,433,435,437,438],"barker":[297,417,437,438],"barker_cod":[297,417,438],"barrio":401,"base":[56,351,364,366,367,368,377,378,383,386,418,438],"baseband":[3,9,67,235,247,255,261,305,350,368,377,409,410,432,433,438],"basepoint":[139,140,150],"basi":[139,143,150],"bb":[67,432,433],"bb_papr":432,"bch":300,"beamwidth":[5,358],"bec":[5,24,25,26,28,29,31,90,298,299,313,418,437,438],"bec_capac":[5,299,438],"becaus":[227,305,332,349,408,414,438],"befor":[139,144,150,274,277,349,353,366,433,439],"begin":[247,261,280,301,328,338,368,391,392,397,424,431],"being":435,"below":[300,399,420,428,429],"benchmark":422,"benefici":422,"benefit":366,"ber":[6,9,42,44,101,202,204,235,247,255,257,261,362,381,434,437,438],"berlekamp":[300,438],"berlekamp_massei":[125,158,300,417,438],"best":[157,324,394,395],"beta":[10,12,14],"better":[353,395],"between":[3,6,9,12,18,64,84,85,89,90,110,123,141,148,152,172,174,186,189,197,198,201,238,249,265,285,287,291,301,305,307,320,325,334,351,364,366,374,378,382,413,433,437],"bi":[5,301,437,438],"biawgn_capac":[5,301,438],"bibtex":437,"big":[346,348],"bin":[43,236,248,256,260,262,289,290,307,321,330,331,344,346,347,348,351,363,366,378,385,405,424,431,434],"binari":[5,7,19,21,23,24,27,28,32,35,36,43,90,236,248,256,260,262,297,298,299,301,302,303,304,313,328,332,339,356,385,399,412,414,417,418,434,437,438],"binary_cod":[302,417,438],"binaryerasurechannel":[24,25,26,27,28,29,30,31,418,438],"binarysymmetricchannel":[32,33,34,35,36,37,38,39,418,438],"bipolar":[297,328,332,339,342,364,414,438],"bit":[5,6,7,9,24,29,30,32,37,38,42,43,44,45,56,59,60,90,101,103,106,202,204,205,235,236,247,248,255,256,257,260,261,262,294,298,299,301,303,304,315,316,318,335,356,362,381,399,400,403,412,437,438],"black":438,"blackman":[89,295,296,336,341],"blackmanharri":[295,296,336,341],"blank":421,"block":[0,10,19,40,41,62,67,84,108,197,200,218,239,285,311,312,437],"blockinterleav":[0,40,41,438],"bn":[67,68],"bnt":[67,69,433],"bold":387,"bool":[6,10,12,18,62,64,84,85,88,89,97,98,99,100,108,110,114,123,139,141,148,150,152,156,171,172,174,177,186,188,189,197,198,200,201,235,237,238,247,255,257,259,261,263,265,281,282,283,284,285,287,292,317,328,330,331,338,349,350,353,354,355,359,360,363,365,366,367,368,376,378,385,386,390,396,402,407,408,417],"boolean":338,"both":[20,128,138,160,170,227,249,306,308,322,325,346,353,363,364,366,367,385,386,387,406],"bottom":[62,84,197,263,265,269,272,285],"bound":[4,289,290,301,322,323,344,346,347,348,351,405,406,411,437,438],"boundari":[62,235],"bp":[1,42,45,202,205,235,247,255,261,315,316,318,403,434],"bpe":[7,356,412],"bpsk":[141,152,239,257,259,301,362,380,381,394,395,432],"bpsk_bb_papr":432,"bpsk_ber":434,"bpsk_pb_papr":432,"bpsk_ser":434,"branch":[3,62,84,197,263,265,266,274,277,285,389,421,422],"brown":335,"browser":420,"bsc":[5,32,33,34,36,37,39,90,301,303,304,313,418,437,438],"bsc_capac":[5,301,304,438],"budget":[437,438],"bug":[438,439],"bugbear":421,"build":[421,437],"built":420,"bursti":10,"byte":[7,335],"c":[19,20,24,29,30,32,37,38,40,41,56,59,60,62,63,64,65,67,75,77,78,79,80,81,90,103,104,105,106,107,125,126,128,129,130,131,132,134,135,136,137,138,158,159,160,161,162,163,164,166,167,168,169,170,202,203,216,218,235,247,255,260,261,294,299,300,301,304,305,325,328,342,358,385,399,400,409,410,415,417,433],"c_":[20,125,126,128,129,130,137,158,159,160,161,162,169,300,301,416],"c_0":[19,125,126,137,158,159,169],"c_1":[19,125,126,137,158,159,169],"c_2":158,"c_hard":301,"c_n":[19,125,158],"c_soft":301,"c_ub":301,"calcul":[4,5,7,24,29,32,37,139,289,290,294,299,301,304,305,308,321,322,323,325,326,343,344,345,346,347,348,351,358,394,395,398,399,400,405,406,411,415,424,431,437,438],"call":[12,18,63,64,84,85,89,109,110,123,136,140,141,148,151,152,168,172,174,186,189,197,198,201,238,264,265,285,286,287],"can":[101,103,104,105,107,139,150,151,153,218,235,263,289,290,293,305,321,327,332,351,356,368,371,395,398,399,405,414,422,424,428,429,431,434,437,439],"cannot":[218,353],"capac":[24,29,30,32,37,38,56,59,60,90,294,299,301,304,399,400,437,438],"carrier":[80,255,305],"cascad":[247,255,261,368],"case":[84,197,261,280,285,301,307,325,328,338,391,392,397],"caus":305,"caution":[103,104,105,107],"ccdf":[7,278,279],"ccf":438,"cdf":[344,346,347,348,351],"cdot":[20,62,84,88,108,125,128,129,130,139,151,154,158,160,161,162,197,200,227,249,263,264,275,285,286,295,296,300,301,322,323,326,336,337,339,341,344,346,347,348,350,351,361,394,395,406,411],"center":[62,139,295,296,305,324,325,333,336,341,366,367,386,393,409,410,438],"center_freq":[3,295,296,305],"central":[289,424,431],"centroid":[322,323,394,395,406,411],"cf":309,"cgl":[2,307,343,345,437],"chang":[43,47,139,326,422,439],"channel":[3,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,56,57,58,59,60,61,62,63,64,65,66,90,91,92,93,94,95,235,247,257,259,263,265,272,294,298,299,301,303,304,313,362,380,399,400,437,438],"chapter":[24,32,62,84,90,197,257,259,285,301,328,338,352,389,391],"characterist":[9,20,96,99,125,128,129,130,158,160,161,162,280,283,300,342,354,379,437,438],"characteristic_poli":[19,20,125,126,128,129,130,138,158,159,160,161,162,170,300],"charlong":438,"chaudhari":[10,139,150],"chebwin":[295,296,336,341],"chebyshev":[295,296,336,341],"check":[421,438],"chi":[290,346,348,401,405,424,431],"chi2":[290,346,348,405,424,431],"chi_":[96,97,98,424,431],"chi_n":[96,97,98,100],"chirp":218,"chu":[416,417,437,438],"ci":420,"circl":[236,248,256,262,429],"circular":[297,328,332,339,342,364,414,416],"cite":437,"claim":[291,361,401],"clairvoy":[2,280],"class":[0,2,3,6,8,10,19,24,32,40,42,56,62,67,84,88,90,96,101,103,104,105,106,107,108,125,131,139,150,156,158,163,171,188,190,197,200,202,218,227,235,237,239,247,249,255,261,263,280,285,417,418,419,428,429,434,437,438],"classmethod":[125,126,158,159,171,172,188,200],"clock":[150,305,418,438],"clock_error":[305,418,438],"clock_output":[150,153],"clockwis":[236,248,256,262],"clone":422,"close":[67,74,76,301,367,419,437,438],"closedlooppl":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,419,433,438],"closer":394,"cmap":[363,378],"cn":[280,293,424,431],"cn0":[67,80],"co":[84,150,197,239,285,350,392,397,402],"code":[42,43,45,202,205,235,236,247,248,255,256,260,261,262,297,302,315,316,318,328,329,332,339,363,385,399,403,414,417,422,434,437,438],"coeff":[126,137,159,169],"coeffici":[42,52,55,62,64,84,85,108,110,139,171,174,197,198,213,217,265,285,287,342,369,370,371,372,375,376,384,388,389,428,429],"coher":[97,98,99,100,291,301,306,307,322,323,330,331,343,345,349,353,354,355,361,401,406,407,408,411,425,437,438],"coherent_gain":[2,291,306,353,361,424,438],"coherent_gain_loss":[2,307,438],"col":[40,41],"collaps":421,"collect":378,"color":[62,88,139,150,188,291,294,305,353,361,364,366,367,368,377,378,383,386,400,424,431,432,435],"colorbar":[363,368,378],"column":[40,41,143,389],"com":[291,295,296,324,327,332,336,341,352,401,414,421,422,437],"combin":[291,328,349,361,401],"come":366,"comm":[332,414],"command":[420,421],"commit":422,"common":[424,431],"commonli":307,"commun":[10,24,32,62,67,75,77,78,79,80,81,84,88,90,139,150,197,218,227,249,257,259,285,328,338,352,389,391,392,397,433,437],"commut":[62,84,197,263,265,269,272,285],"compar":[139,150,188,200,227,237,249,257,259,291,295,296,306,324,330,331,336,341,342,349,353,354,361,366,371,381,383,394,395,401,424,431,435],"comparison":[227,249,291,361,421],"compat":439,"complement":348,"complementari":[278,279],"complex":[3,6,9,42,43,46,48,62,67,84,88,96,97,98,99,100,108,114,141,152,156,171,177,188,197,200,202,203,206,207,208,209,216,227,230,235,236,237,239,240,246,247,248,249,250,255,256,260,261,262,263,280,281,282,283,284,285,293,294,305,314,321,330,331,337,349,350,353,354,355,363,364,366,367,368,370,372,374,375,376,382,385,386,402,407,408,409,410,413,418,424,427,428,429,431,433,434,437,438],"complex128":[3,10,11,42,48,62,84,88,108,114,156,171,177,188,197,200,202,206,207,208,209,216,235,237,239,240,246,247,255,260,261,263,285,337,409,416,417,418],"complex_symbol":[235,247,255,261],"compon":[337,409,410,413],"composit":308,"composite_snr":[4,308,438],"compress":[305,438],"compromis":[141,152],"comput":[2,7,42,44,53,56,59,84,90,96,97,98,99,100,114,139,141,150,152,177,202,204,214,227,235,247,249,255,257,259,261,278,279,280,281,282,283,284,289,290,292,293,306,307,317,320,325,330,331,334,343,344,345,346,347,348,349,351,353,354,355,357,359,364,366,405,407,408,428,429,433,435,437,438],"computation":437,"concaten":[150,429],"condit":[301,424,431],"config":[421,424,427,428,429,431,432,433,434,435],"configur":[56,59,90,125,158,433],"confus":325,"conj":[177,369,370,371,372,375,376,384,388,429,433],"conjug":[409,410,429],"connect":[62,84,197,263,265,269,272,285],"consecut":[41,43,236,248,256,262],"consid":[139,235,335,366,398],"consist":[62,84,88,103,104,105,106,107,108,121,139,147,150,156,197,237,263,285],"constant":[218,235,239,241,243,308,322,323,325,326,353,374,382,398,406,411,424,429,431,433],"constel":[9,235,247,255,258,261,293,321,337,363,398,416,437,438],"constrained_layout":387,"construct":19,"contain":[101,191,293,328,335],"content":314,"contigu":[424,431],"continu":[9,42,43,188,235,377,395,427,437,438],"contribut":351,"control":[10,11,12,67,141,152,227,239,241,392,397,433,437,438],"conveni":[301,428,429],"convent":[247,261,421],"convers":[433,437,438],"convert":[1,3,125,138,158,170,202,206,208,235,247,255,261,310,315,316,318,319,330,331,335,340,349,353,354,355,403,404,407,408,409,410],"convolut":[63,109,140,142,150,151,153,154,197,264,286,289,290,344,346,347,348,351,405],"convolv":108,"coordin":383,"copi":413,"correct":[305,438],"correctli":[322,323,406,411],"correl":[2,9,139,280,297,322,323,328,332,338,339,342,364,391,401,406,411,414,416,437,438],"correspond":[20,101,106,126,128,134,139,149,154,159,160,166,268,305,342,366,378],"cosin":[8,88,141,152,188,203,240,246,248,256,262,368,386,392,394,395,397,428,437,438],"cost":366,"could":305,"count":[101,104,321],"count_nonzero":[24,32,90],"counter":[236,248,256,262],"cov":422,"cp":239,"cpfsk":235,"cpm":[8,9,42,43,44,45,46,47,48,49,50,51,52,53,54,55,377,437,438],"cram\u00e9r":[4,322,323,406,411,437,438],"creat":[10,12,19,20,24,28,32,36,40,41,42,43,56,58,62,64,67,74,84,85,88,89,90,95,101,102,108,110,125,126,128,134,138,139,141,150,152,156,157,158,159,160,166,170,171,172,174,188,189,190,191,197,198,200,201,202,203,218,220,235,236,237,238,239,241,247,248,255,256,258,261,262,263,265,285,287,293,297,321,326,328,332,339,350,366,367,394,395,398,402,409,410,414,416,427,433,435],"create_x":[424,431],"crest":[6,309],"crest_factor":[6,309,357,438],"critic":[74,83,220,221,366,367,433],"crlb":[4,308,322,323,406,411,438],"cross":[328,332,338,339,342,391,414,416,438],"cryptographi":[125,158,300],"cubic":150,"cumsum":435,"cumul":[278,279],"current":[10,15,125,135,139,144,150,154,158,167,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,398,422],"curv":[9,96,99,257,259,280,283,291,308,361,362,379,380,381,438],"custom":[43,62,66,84,86,190,197,199,203,248,256,262,285,288,438],"cutoff":[336,341],"cutoff_freq":[3,336,341],"cw":314,"cycl":[326,364,366,367,383,386],"cyclic":416,"d":[7,63,88,108,112,125,139,140,142,150,151,153,154,156,158,237,289,300,320,325,334,344,346,347,348,358,420,421,422,424,431,437,438],"d200":421,"d205":421,"d212":421,"d213":421,"d415":421,"da":[227,249],"da_error":[227,249],"damp":[67,74,83,218,220,221,433],"damping_factor":[67,74,218,220,221],"dash":[291,364,366,367,386],"data":[8,139,227,232,249,252,311,312,335,356,386,412,437],"data_aided_error":[227,232,249,252],"datetimez":421,"db":[1,5,6,44,53,62,64,67,78,80,85,97,99,101,103,104,105,107,188,198,204,214,235,247,255,257,259,261,281,283,287,291,292,293,294,295,296,301,306,307,308,310,315,316,317,318,319,321,322,323,324,325,327,330,331,336,337,340,341,343,345,349,352,353,354,357,358,359,360,361,362,363,364,365,366,367,373,380,390,396,399,400,401,403,404,406,408,411,424,431,432,434,435,438],"dbi":[325,358],"dbm":[310,340],"dbv":[310,340],"dc":[188,324,367],"dd":[249,433,438],"dd_error":[227,249],"de":[257,259,433,438],"debug":423,"decad":[114,177,369,370,372,375,376,428,433],"decai":[10,12,14,427,429],"decemb":438,"decibel":[292,310,317,340,359,360,390,396,437,438],"decide_symbol":[202,206,235,247,255,261,433,434,438],"decim":[3,42,43,46,48,52,62,84,85,86,87,197,202,203,206,207,208,209,213,216,235,236,247,248,255,256,260,261,262,263,265,267,269,272,285,287,314,342,352,434,437,438],"decis":[32,42,46,202,206,207,227,230,233,235,247,249,250,253,255,261,301,433],"decision_directed_error":[227,233,249,253],"decod":[8,300,311],"decompos":[3,62,84,197,285,389],"decomposit":[274,277,438],"decorrel":401,"decreas":[10,325,349],"def":[424,427,431,432,434],"default":[9,20,43,116,122,126,128,134,136,141,152,159,160,166,168,236,248,256,260,262,292,297,300,317,320,328,332,334,339,342,357,359,363,370,372,374,375,376,378,382,385,387,414,434,438],"default_rng":[28,36,58,61,95,293,298,303,313,424,431],"defin":[67,90,108,125,129,130,131,133,137,139,150,158,161,162,163,165,169,171,188,293,301,307,313,327,353,354,355,366,367,379,392,397,408,416,419,429,437],"definit":[89,295,296,336,341,366,367,369,370,371,372,374,375,376,382,384,388,438],"deg":[337,433],"degre":[19,42,43,50,125,133,139,158,165,202,203,211,235,236,247,248,255,256,258,261,262,300,326,328,337,338,339,342,350,358,391,401,402,417,424,431,433,438],"deinterleav":[40,190,193,195],"delai":[3,9,62,63,84,88,108,109,112,115,119,139,140,141,142,150,151,153,154,156,157,197,218,237,239,263,264,268,285,286,311,312,324,333,370,375,393,433,437,438],"delta":[43,47,75,77,116,156,157,179,305,307,324,326,343,345,371,398,428,429],"demodul":[8,42,46,150,202,207,235,247,255,261,438],"demonstr":[305,389],"denomin":429,"denot":[289,290,344,346,347,348,351,405],"densiti":[5,9,80,289,290,301,330,331,344,346,347,348,351,354,355,365,368,374,394,399,405,406,407,411,424,431,432,435,437],"depend":[139,300,325,420,421,423,438],"deprec":433,"deprecationwarn":433,"deriv":[88,344,346,347,348,351],"descrambl":[19,21],"descript":150,"design":[3,43,62,64,66,84,85,86,141,152,156,197,198,199,203,248,256,262,285,287,288,295,296,324,336,341,352,420,437,438],"design_bandpass_fir":438,"design_bandstop_fir":438,"design_frac_delay_fir":438,"design_highpass_fir":438,"design_lowpass_fir":438,"design_multirate_fir":438,"design_multirate_tap":438,"designbandpassfir":295,"designbandstopfir":296,"designfracdelayfir":324,"designhighpassfir":336,"designlowpassfir":341,"designmultiratefir":352,"desir":[2,10,12,16,139,291,293,305,349,353,361,401,407,408,431,434],"detail":[89,150,295,296,336,341,366,367,374,382],"detect":[96,97,98,99,100,227,230,232,233,249,250,252,253,280,281,282,283,284,291,301,306,307,330,331,349,353,354,355,361,365,373,379,401,407,408,437,438],"detection_pdf":438,"detector":[9,32,67,73,74,96,220,227,234,249,254,280,291,330,331,349,353,354,355,361,365,407,408,433,437,438],"detector_pdf":[9,330,331,354,355,365,407],"determin":[41,289,290,300,338,344,346,347,348,351,378,405,417,424,431],"detrend":[374,382],"dev":[421,423],"develop":[421,422,423],"deviat":[43,47,322,323,406,411,424,431],"df":[394,402,406,411],"dft":[9,307,366,367,437,438],"diagram":[9,10,19,62,67,84,108,197,200,218,235,239,247,255,261,285,311,312,368,437,438],"diamet":[325,358],"dictat":[63,109,264,286,342],"diff":[364,366,367,386,432],"diff_decod":[8,311,312,438],"diff_encod":[8,235,247,255,257,259,261,311,312,438],"differ":[4,7,43,138,170,171,200,236,248,256,260,262,291,295,296,308,322,324,332,336,341,342,353,364,366,367,371,386,405,406,414,416,435,438],"differenti":[3,8,88,89,235,257,259,301,311,312,364,366,367,386,437,438],"digit":[10,24,32,67,75,77,78,79,80,81,88,90,139,150,218,227,249,257,259,328,338,391,392,397,433,437,438],"dipol":325,"direct":[136,168,227,233,249,253,438],"directori":[420,422],"dirhtml":420,"disabl":421,"discard":[3,62,84,285,314],"discret":[9,10,62,67,75,77,78,79,80,81,88,90,95,139,150,188,200,218,227,237,249,293,313,319,366,367,392,395,397,404,418,427,433,437,438],"discretememorylesschannel":[90,91,92,93,94,95,418,438],"dish":[325,358],"displai":[335,363,369,370,372,374,375,376,382,385],"displaystyl":[261,392,397],"dist":421,"distanc":[5,320,325,334,437,438],"distinct":[235,247,261],"distribut":[2,7,278,279,289,290,330,331,344,346,347,348,351,365,405,424,431,438],"divis":[328,338,391],"dmc":[90,91,92,93,95,313,418,437,438],"do":427,"doc":421,"document":438,"doe":[314,366,413],"doesn":438,"dog":335,"dollar":420,"domain":[3,6,292,293,305,309,314,317,320,326,334,337,350,357,359,360,364,366,367,369,374,378,382,386,390,394,395,396,398,409,410,413,418,424,431,437,438],"domin":401,"done":[84,308,353,398,420],"doppler":305,"dot":[20,95,125,126,128,129,130,132,134,135,137,158,159,160,161,162,164,166,167,169,202,203,216,235,247,255,260,261,289,300,313,342,344,347,385],"doubl":[325,358],"down":[40,389],"downsampl":[3,62,84,285,314,438],"dsp":[295,296,324,336,341,352,437],"dt":[322,323,395,402],"dtft":[9,305,366,367,437,438],"dtype":[62,84,88,108,114,150,156,171,177,188,197,200,235,237,239,240,246,247,255,261,263,285,297,328,332,339,342,356,383,386,412,414,417,433],"dtypelik":[356,412],"dtz":421,"due":[154,307,353,435],"durat":[3,305,395,402],"dure":307,"durisi":301,"dw":351,"dwell":401,"dx":[289,290,301,405],"dy":301,"dz":[344,346,347,348],"e":[12,13,14,24,26,27,106,227,249,280,281,282,283,284,292,298,299,301,317,322,323,339,366,367,406,411,416,421,422,428,429,434],"e2":416,"e501":421,"e713":421,"e714":421,"e_":[1,9,42,53,103,104,105,106,107,202,214,235,247,255,259,261,293,301,315,318,319,321,363,380,404,434,437],"e_b":[1,5,9,42,44,103,104,105,106,107,202,204,235,247,255,257,261,315,316,318,362,381,399,403,437,438],"each":[3,62,63,64,84,85,109,139,140,151,197,198,263,264,265,269,272,273,285,286,287,289,290,305,321,335,342,344,346,347,348,351,352,354,374,378,382,401,405,413,438],"easier":150,"easili":[420,421,423,428,429],"ebn0":[1,9,42,44,202,204,235,247,255,257,261,315,316,362,381,399,434],"ebn0_to_esn0":[1,53,214,259,315,434,438],"ebn0_to_snr":[1,235,247,255,261,316,438],"edg":395,"edit":[421,429],"effect":[156,305,308,322,406,438],"effici":[62,136,139,168,235,314,349,358,381,399,400,413],"either":[20,128,151,153,160,230,239,250,289,290,321,344,346,347,348,351,405],"electromagnet":[5,415],"element":[7,41,191,335,356,412,433],"ell_":139,"ell_0":143,"ell_1":143,"ell_k":[139,143,150],"ell_p":143,"els":[421,431,432],"empir":[289,290,344,346,347,348,351,405,424,431],"en":[19,309,339,342,357,416],"enabl":[421,438],"encod":[255,257,259,311,312,437],"end":[136,168,247,261,280,301,325,328,338,368,391,392,397,409,421,424,431],"endpoint":[114,177,429],"energi":[2,5,9,44,53,96,204,214,257,259,280,281,282,283,284,301,315,316,317,318,319,325,327,333,362,380,381,392,393,394,395,397,399,403,404,437,438],"energydetector":[2,96,97,98,99,100,438],"enough":356,"enr":[9,280,281,283,373],"ensur":[141,152,322,323,406,411,433],"entir":[292,317,320,334,357,359,438],"entropi":301,"enumer":401,"envelop":[235,322,323,395,428,429],"epsilon":305,"equal":[62,125,235,301,306,308,328,424,431],"equat":[75,77,78,79,80,81,97,98,100,171,200,247,255,261,281,282,284,291,308,322,323,325,361,401,406,411],"equival":[62,84,138,157,170,197,285,293,294,300,319,322,323,324,332,368,398,404,406,411,414,422,424,427,431],"eras":[24,298],"erasur":[5,24,26,27,28,31,90,298,299,313,418,437],"error":[6,9,12,13,14,32,42,44,53,67,73,74,80,101,102,103,105,106,107,202,204,214,218,220,227,230,232,233,234,235,247,249,250,252,253,254,255,257,259,261,291,304,305,321,322,323,361,362,380,381,401,406,411,418,421,433,437,438],"error_r":[101,105,106,305,434],"errorr":[6,101,102,103,104,105,106,107,434,438],"esn0":[1,9,42,53,202,214,235,247,255,259,261,318,319,380,434],"esn0_to_ebn0":[1,44,204,257,318,438],"esn0_to_snr":[1,319,434,438],"estim":[2,46,67,206,207,291,322,323,361,374,382,401,406,411,433,437],"eta":358,"euclidean":[6,320,437,438],"evalu":[139,351,428,429],"even":[64,85,141,152,157,198,261,287,295,296,324,327,328,336,338,339,341,352,383,391,392,397],"evenli":[114,177],"event":[344,346,347,348],"everi":[3,62,84,101,285,314,427],"evm":[6,321,437,438],"exactli":[156,349],"examin":[156,235,247,255,261,328,339,353,424,431],"exampl":[10,19,24,32,40,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,197,200,201,218,219,220,221,222,223,224,225,226,227,235,237,238,239,240,241,242,243,244,245,246,247,249,255,257,258,259,260,261,271,273,274,276,277,278,279,281,283,285,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,380,381,383,384,385,386,387,388,389,391,392,393,394,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,424,431,433,438],"exce":[278,354,355],"exceed":[278,279,289,290,344,346,347,348,351,405],"excess":[141,152,392,397,435],"exclud":421,"exclus":386,"execut":423,"exist":297,"exp":[10,62,177,239,240,246,247,255,261,301,326,327,337,350,369,370,371,372,375,376,384,388,402,416,427,429,433],"expens":[392,397],"experi":438,"explicit":438,"explicitli":[293,353],"exponenti":[3,62,240,246,314,350,402,409,410,413,427,428,429,438],"express":351,"extend":421,"extens":421,"extract":433,"extrapol":353,"ey":[9,235,247,255,261,368,437,438],"f":[5,20,43,47,62,75,77,84,88,99,114,115,119,125,128,129,130,139,150,156,158,160,161,162,177,188,197,239,240,285,293,305,307,322,323,325,326,327,338,343,345,350,353,354,358,366,367,391,392,394,397,401,402,406,411,415,416,421,424,427,428,429,431,432,433,434,435],"f401":421,"f403":421,"f_":[42,43,47,54,62,63,67,74,82,84,114,115,117,119,177,180,197,202,203,215,235,236,247,248,255,256,261,262,263,264,275,285,286,289,295,296,301,305,314,316,319,326,327,336,341,350,364,366,367,368,369,370,372,374,375,376,377,378,382,386,394,395,398,402,403,404,409,410,413,427,428,429,433,435],"f_c":[305,336,341],"f_i":62,"f_start":62,"f_stop":62,"f_x":[289,290,301,344,346,347,348,351,405],"f_y":[290,301,346,348,351,405],"f_z":[289,290,344,346,347,348,351,405],"fa":[2,9,96,97,98,99,100,280,281,282,283,284,291,322,323,349,353,354,355,361,379,401,406,407,408,411,424,431],"face":383,"facecolor":[424,427,428,429,431,432,433,434,435],"fact":[332,414],"factor":[2,3,6,67,74,83,200,201,203,218,220,221,248,256,262,308,309,314,322,323,351,366,406,408,411,413,433],"fade":[257,259],"fals":[2,6,12,62,64,84,85,89,96,97,98,99,100,108,110,114,141,152,171,172,174,177,189,197,198,200,201,235,237,238,247,255,257,259,261,265,280,281,282,283,284,285,287,291,292,298,303,305,313,317,330,331,338,349,350,353,354,355,359,360,361,363,365,366,368,374,378,379,382,386,390,396,401,402,407,408,409,424,429,431,435,437,438],"far":325,"farrow":[3,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,398,426,437,438],"farrowfractionaldelai":[3,139,140,141,142,143,144,145,146,147,148,149,150,438],"farrowresampl":[3,150,151,152,153,154,155,427,438],"fashion":422,"fast":366,"fdoa":[4,322,437,438],"fdoa_crlb":[4,322,395,438],"featur":439,"februari":438,"fec":399,"feed":40,"feedback":[20,125,128,129,130,158,160,161,162,171,174,175,188,200,300,342,369,370,371,372,375,376,384,388,417,429],"feedback_poli":[20,125,126,128,129,130,138,158,159,160,161,162,170,300],"feedforward":[62,64,84,85,88,108,110,124,156,171,174,176,188,197,198,200,237,263,265,274,277,285,287,369,370,371,372,375,376,384,388,389,428,429],"fft":[62,314,364,366,374,382,409,410,413],"fibonacci":[19,22,125,126,127,128,129,130,131,132,134,135,136,137,138,158,170,300,342,417,437,438],"fibonacci_lfsr":[138,170],"field":[19,125,126,131,136,138,158,159,163,168,170,297,300,325,328,332,339,342,414,417],"fieldarrai":[125,126,127,131,132,135,136,137,158,159,163,164,167,168,169,297,300,328,332,339,342,414,417,421],"fig":[291,361,401],"figsiz":[235,247,255,261,368,369,387,401,428,429,433],"figur":[10,24,32,62,84,88,97,99,139,150,156,188,197,200,227,235,237,239,247,249,255,257,258,259,260,261,281,283,285,289,290,291,293,294,295,296,297,299,301,304,305,306,307,308,314,321,322,323,324,325,326,327,328,330,331,332,333,336,337,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,362,363,364,365,366,367,368,369,370,371,372,375,376,377,380,381,383,384,385,386,387,388,392,393,394,395,397,398,399,400,402,405,406,407,408,409,410,411,413,414,416,424,427,428,429,431,432,433,434,435],"file":[421,423],"fill":356,"fill_betweenx":62,"filler":301,"fillstyl":427,"filter":[42,46,52,55,62,63,64,66,67,71,72,74,76,84,85,86,87,88,89,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,140,141,142,146,147,148,149,150,151,152,153,154,155,156,157,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,197,198,199,200,201,202,207,213,217,218,219,220,221,222,223,224,225,226,235,237,238,247,255,261,263,264,265,268,271,273,274,276,277,285,286,287,288,295,296,314,322,323,324,327,333,336,341,352,368,369,370,371,372,375,376,384,388,389,392,393,397,406,411,413,419,426,435,437,438],"final":[63,109,264,286],"find":[291,300,417],"finit":[3,19,108,125,131,158,163,437,438],"fir":[62,63,64,84,85,87,88,89,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,139,142,149,150,154,156,157,197,198,200,201,235,237,238,247,255,261,263,264,265,268,271,273,274,276,277,285,286,287,295,296,324,336,341,352,368,369,370,371,372,375,376,384,388,389,426,432,437,438],"fir_10":88,"fir_2":88,"fir_20":88,"fir_40":88,"fir_6":88,"fir_80":88,"firinterpol":438,"first":[62,84,101,136,140,151,154,197,198,235,247,268,285,287,308,322,328,338,356,364,371,386,391,406,412,421,423,424,431,438],"fit":421,"fix":[141,152,325,438,439],"fixer":421,"fl":[75,77],"flag":422,"flake8":421,"flat":[156,324],"flfsr":[19,20,22,125,126,127,128,129,130,131,132,133,134,135,136,137,138,158,170,300,417,438],"flip":[32,303,405],"float":[2,3,6,8,9,10,12,13,14,15,16,17,24,28,30,31,32,36,38,39,42,43,47,50,56,60,62,64,65,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,88,89,90,99,101,103,104,105,107,108,114,115,117,119,139,141,150,152,156,157,171,172,177,178,180,188,197,198,200,201,202,203,211,218,220,221,223,224,225,227,228,229,231,234,235,236,237,239,241,242,243,244,247,248,249,254,255,256,258,261,262,263,275,283,285,287,289,290,292,293,294,295,296,298,303,305,309,321,324,326,327,330,331,336,337,341,344,346,347,348,350,351,352,353,357,359,360,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,381,382,385,386,390,392,394,395,396,397,398,402,405,418],"float64":[1,2,3,4,5,6,7,8,24,29,32,37,62,84,88,90,91,96,97,98,99,100,101,106,108,114,156,171,177,188,197,200,202,204,212,214,227,232,233,235,237,239,240,246,247,249,250,252,253,255,257,259,261,263,278,279,280,281,282,283,284,285,291,294,295,296,297,299,301,304,306,307,308,310,315,316,317,318,319,320,321,322,323,324,325,327,328,332,333,336,339,340,341,342,343,345,349,352,353,354,355,358,361,365,392,393,394,395,397,399,400,401,403,404,406,407,408,410,411,414,415,417],"fluctuat":401,"flush":[62,63,84,88,108,109,113,156,197,237,263,264,285,286,438],"fly":139,"foa":[4,323,437,438],"foa_crlb":[4,323,395,438],"fold":[289,314],"follow":[96,101,289,290,326,337,344,346,347,348,351,363,378,382,385,387,389,398,405,424,431,433,437],"form":[139,143,149,291,301,438],"format":[240,246,297,328,332,339,342,414,438],"formula":[289,290,328,405],"forward":[188,189,239,246,438],"found":[141,152,328],"four":[289,427],"fourier":[9,62,366,367,437,438],"fourth":427,"fox":335,"fpsl":438,"frac":[67,75,77,80,81,88,96,97,98,100,108,112,139,150,156,171,188,198,200,218,237,247,255,261,280,281,282,287,291,292,293,294,301,307,308,309,315,316,318,319,321,322,323,325,326,327,337,340,344,346,347,348,350,351,357,358,361,366,392,394,395,396,397,398,399,400,402,403,404,406,408,411,415,416,424,431,433],"fraction":[3,62,84,139,140,141,150,156,157,197,263,275,285,305,324,327,427,437,438],"fractional_delay_fir":[3,324,438],"fractionaldelai":[3,156,157,438],"fred":[62,84,197,285,352,389],"free":[5,141,152,235,247,255,261,325,437],"free_space_path_loss":[5,325,438],"freedom":[401,424,431],"freq":[2,3,5,62,84,88,108,114,156,171,177,188,197,200,237,239,240,263,285,305,307,314,325,326,350,358,366,367,402,409,410,413,415,427,433],"freq_estim":433,"freq_offset":[67,75,77,305,345],"freq_rat":[326,402],"frequenc":[2,5,42,43,47,51,62,67,75,77,79,84,88,108,114,115,119,150,156,171,177,188,197,200,218,235,237,239,240,263,285,295,296,305,307,314,322,323,324,325,326,336,341,343,345,350,358,366,367,369,370,372,374,375,376,382,402,406,409,410,411,413,415,418,435,437,438],"frequency_lock_tim":[67,75],"frequency_offset":[326,418,438],"frequency_respons":[62,84,88,108,114,156,171,177,188,197,200,237,263,285,438],"frequency_response_log":438,"freqz":435,"from":[1,62,101,115,119,125,126,158,159,171,172,188,198,200,216,260,263,265,269,272,287,291,305,308,310,315,316,318,319,322,323,326,339,340,342,361,366,374,382,401,403,404,406,411,417,420,424,428,429,431,433,437],"fsk":239,"fspl":[5,325,438],"full":[62,63,84,109,140,142,150,151,153,154,197,263,264,285,286,364,438],"function":[9,67,76,88,108,156,171,172,200,218,239,278,279,291,294,300,301,305,306,307,308,314,325,327,330,331,332,343,345,353,354,355,361,362,363,365,366,367,368,371,373,374,378,379,380,382,383,384,392,397,399,400,401,407,413,414,428,429,433,435,437,438],"fundament":[96,97,98,100,280,281,282,284],"furthermor":[325,366],"futur":433,"g":[5,106,338,358,391,422],"g_":[291,353,361,431],"g_c":[306,424],"g_i":337,"g_nc":[291,353,431],"g_q":337,"gain":[2,5,10,11,12,15,17,18,67,70,71,72,73,74,171,172,178,188,200,218,220,223,225,227,234,239,241,242,249,254,291,295,296,306,307,322,323,324,325,327,333,336,341,343,345,353,358,361,392,393,397,406,411,419,424,431,433,437,438],"galoi":[19,20,125,126,128,129,130,131,132,134,135,136,137,138,158,159,160,161,162,163,164,166,167,168,169,170,297,300,328,332,339,342,414,417,437,438],"galois_lfsr":[138,170],"gamma":[2,96,98,100,280,282,284,291,308,322,323,354,355,365,401,406,407,408,411],"gamma_1":[308,322,406],"gamma_2":[308,322,406],"gardner":[125,158,300],"gauss_0p1":435,"gauss_0p2":435,"gauss_0p3":435,"gaussdesign":327,"gaussian":[5,8,88,188,200,237,293,294,301,327,383,418,424,431,437,438],"gca":[291,330,331,424,427,431,434],"gcd":416,"ge":[256,262,291,361,392,397,401],"gener":[3,28,36,58,61,95,235,247,255,261,263,293,297,298,300,302,303,313,328,329,332,338,339,342,365,379,391,402,414,416,417,420,424,431,434,438],"get":420,"get_window":[89,295,296,336,341,366,367,374,382,438],"gf":[19,125,126,129,130,131,132,134,135,136,137,138,158,159,161,162,163,164,166,167,168,169,170,297,300,328,332,339,342,391,414],"ghz":[305,325,358,415],"git":[420,422],"github":[421,437],"giusepp":301,"given":[2,56,59,90,96,101,103,104,105,107,138,139,140,150,151,153,170,263,274,277,278,279,280,289,290,291,301,307,308,321,322,323,344,346,347,348,351,354,355,361,366,395,405,406,411,428,429],"glfsr":[125,138,158,159,160,161,162,163,164,165,166,167,168,169,170,300,417,438],"global":421,"gmsk":235,"go":[236,248,256,262],"goal":[139,437],"gold":[328,417,437,438],"gold_cod":[328,338,391,417,438],"good":[141,152,328],"googl":421,"gouraud":382,"grai":[43,235,236,247,248,255,256,260,261,262,329,363,385,417,434,437],"gray_cod":[329,417,438],"greater":[83,294,308,322,323,392,397,400,406,411],"grid":[227,249,387],"group":[9,62,84,88,108,115,156,197,237,263,285,324,370,437,438],"group_delai":[9,62,84,88,108,115,156,197,237,263,285,324,370,428,429,438],"guarante":[328,439],"h":[2,3,9,42,43,47,51,52,55,62,64,84,85,88,96,108,110,114,116,124,150,156,171,177,179,188,197,198,200,202,203,212,213,217,218,235,237,247,248,255,256,261,262,263,265,271,274,277,280,285,287,295,296,301,324,327,330,331,336,341,352,354,355,365,369,371,372,376,389,392,397,408,424,431,432,433,435],"h0":[2,330,331,354,355,365,407,424,431,438],"h0_theori":438,"h1":[2,330,331,354,365,424,431,438],"h1_theori":438,"h_":[67,88,433],"h_0":149,"h_0p1":[327,392,397],"h_0p2":327,"h_0p3":327,"h_0p5":[392,397],"h_0p9":[392,397],"h_1":149,"h_16":[324,392,397],"h_32":324,"h_4":[392,397],"h_64":324,"h_8":[324,392,397],"h_b":[32,304],"h_blackman":[295,296,336,341],"h_blackman_harri":[295,296,336,341],"h_chebyshev":[295,296,336,341],"h_half_sin":333,"h_ham":[295,296,336,341],"h_hann":[295,296,336,341],"h_i":[3,62,84,197,263,273,274,277,285,389,428],"h_k":149,"h_kaiser":[295,296,336,341],"h_m":139,"h_p":149,"h_pad":387,"h_rc_0p1":435,"h_rc_0p5":435,"h_rc_0p9":435,"h_rect":[393,435],"h_srrc":[369,370,371,372,375,376,384,388,434],"h_srrc_0p1":435,"h_srrc_0p5":435,"h_srrc_0p9":435,"h_theori":188,"ha":[62,109,141,152,188,197,235,247,255,264,286,293,295,296,305,314,324,325,327,336,341,358,366,367,381,392,397,401,413,416,424,431,433,434,435],"hadamard":[332,414,417,437,438],"hadamard_cod":[332,414,417,438],"hadamardcod":332,"half":[8,235,247,333,358,437,438],"half_sin":[8,236,333,438],"ham":[6,114,295,296,334,336,341,366,437,438],"hann":[295,296,336,341,374,382],"hard":[32,301],"harri":[62,84,197,285,295,296,336,341,352,389],"hat":[6,9,42,46,103,202,206,207,227,230,235,247,249,250,255,261,321,363,385],"have":[63,157,289,297,306,314,324,332,338,356,364,366,367,386,391,412,413,414,424,431],"he":335,"height":189,"help":[291,295,296,324,327,332,336,341,352,401,414],"helper":438,"here":[428,429,437],"heurist":[249,419,433,438],"hexdump":[7,101,335,437,438],"high":[322,323,332,353,406,411,414],"higher":[325,392,397,435],"highpass":[3,336],"highpass_fir":[3,336,438],"hist":[289,290,321,330,331,344,346,347,348,351,405,424,431],"histogram":[321,363,368,378],"histogram2d":[363,378],"histtyp":[289,290,330,331,344,346,347,348,351,405,424,431],"hold":[62,84,197,198,263,265,269,285,287,322,323,356,406,411,438],"home":420,"hook":421,"horizont":337,"horner":139,"hostett":[437,438],"hostetter_sdr_2023":437,"how":[10,327,330,331,333,349,353,354,355,364,366,367,368,377,378,386,392,393,397,407,408,414,423],"howev":[24,32,63,103,104,105,107,109,156,218,264,286,291,299,301,304,332,342,353,364,414,427],"html":[291,295,296,324,327,332,336,341,352,401,414,420],"http":[19,291,295,296,309,324,327,332,336,339,341,342,352,357,401,414,416,420,421,422,437],"hypothes":[96,280],"hypothesi":[2,330,331,408,424,431],"hz":[67,68,74,75,77,80,114,115,117,119,177,180,220,224,294,305,306,307,310,314,322,323,325,326,327,340,343,345,350,358,394,402,406,409,410,411,415,427],"i":[7,10,12,13,14,18,20,24,28,32,36,43,47,58,61,62,63,64,67,74,83,84,85,88,89,90,95,96,97,98,99,100,101,106,108,109,114,116,122,123,125,126,128,129,130,132,133,134,135,136,138,139,140,141,142,148,149,150,151,152,153,154,156,158,159,160,161,162,164,165,166,167,168,170,171,174,176,177,179,185,186,188,191,195,196,197,198,200,201,203,218,220,221,224,227,235,237,240,247,248,249,255,256,261,262,263,264,265,269,272,274,275,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,298,299,300,301,303,304,305,306,307,308,310,313,315,316,317,318,319,320,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,390,391,392,393,394,395,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,412,414,415,416,420,421,422,423,424,427,428,429,431,432,433,434,435,437,438,439],"id":421,"ideal":[150,297,394,395,434],"ident":[138,170,289,344,347],"identifi":[322,323,406,411],"idft":62,"ieee":19,"ignor":[368,421],"iir":[9,67,76,116,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,200,201,218,222,237,369,370,371,372,375,376,384,388,426,428,433,437,438],"iir_back":188,"iir_forw":188,"iir_trap":188,"im":227,"imaginari":[364,366,367,386],"imbal":[337,418,437],"immateri":420,"immedi":422,"impair":438,"implement":[0,2,3,8,10,19,24,32,40,42,62,84,88,90,96,108,125,139,150,156,158,171,188,190,197,200,202,218,222,227,235,237,239,247,249,255,261,263,280,285,291,300,361,401,417,418,419,427],"impli":325,"import":[43,203,227,248,256,262,422,424,427,428,429,431,432,433,434,435,437],"improv":[2,306,322,323,353,395,406,411,438],"impuls":[3,9,62,84,88,108,116,150,156,171,179,188,197,200,237,263,285,295,296,324,327,336,341,352,369,371,392,397,435,437,438],"impulse_respons":[9,62,84,88,108,116,156,171,179,188,197,200,237,263,285,295,296,324,327,333,336,341,352,371,392,393,397,428,429,435,438],"includ":[114,177,421,422,423,437,438],"incorpor":[308,322,323,406,411],"increas":[62,89,294,325,358,395,400,429,438],"increment":[239,240,241,243,433],"independ":[139,247,289,290,294,344,346,347,348,351,400,401,405],"index":[42,43,47,150,202,235,247,255,261,268,328,332,339,342,368,377,378,385,414,417,420],"indic":[10,12,18,43,62,64,84,85,88,89,97,98,99,100,108,110,123,139,140,141,148,150,152,156,171,172,174,186,188,189,195,196,197,198,200,201,203,236,237,238,247,248,255,256,257,259,261,262,263,265,268,281,282,283,284,285,287,292,317,327,328,330,331,333,337,338,342,349,350,353,354,355,359,360,363,364,365,366,367,368,376,377,378,386,390,392,393,396,397,402,407,408,414,424,431],"inf":345,"infinit":[3,171,188,437,438],"inform":[90,255,301,315,316,318,332,403,414],"infrastructur":423,"infti":[289,290,293,301,308,322,323,351,367,394,395,405,406,411],"ini_opt":423,"initi":[17,20,125,126,128,132,134,136,138,158,159,160,164,166,168,170,227,231,249,251,342,424,431,433],"initial_st":[125,126,132,138,158,159,164,170,300],"inlin":[424,427,428,429,431,432,433,434,435],"inlinebackend":[424,427,428,429,431,432,433,434,435],"input":[2,5,8,10,11,19,21,23,24,25,27,32,33,35,40,41,56,57,62,63,64,67,75,77,80,81,84,85,88,89,90,92,94,95,108,109,110,116,121,122,125,127,139,140,141,144,147,150,151,152,153,154,156,171,172,173,174,179,185,188,189,190,191,193,194,195,196,197,198,200,201,218,219,237,238,239,240,247,255,257,259,261,263,264,265,268,269,278,285,286,287,291,293,294,298,299,301,303,304,308,310,311,312,313,314,330,331,340,349,353,354,355,356,371,384,398,401,407,408,412,413,418,428,429,431,433,438],"insert":[3,197,285,413],"insid":429,"insight":368,"inst_evm":321,"instanc":[103,104,105,107,235],"instantan":[6,42,43,51,321,390,438],"instanti":[24,30,32,38,56,60,90],"instead":[62,84,139,197,285,326],"instruct":423,"int":[3,7,8,9,24,28,32,36,40,41,42,43,45,49,54,56,58,61,62,64,84,85,88,89,90,95,101,103,104,107,108,111,112,114,115,116,118,119,122,125,133,136,139,141,142,144,145,150,152,153,154,156,157,158,165,168,171,177,179,181,185,188,190,192,197,198,200,202,203,205,210,215,232,233,235,236,237,238,239,240,246,247,248,252,253,255,256,261,262,263,265,266,267,268,270,271,273,285,287,289,291,292,293,295,296,297,298,302,303,311,312,313,314,317,320,324,327,328,329,330,331,332,333,334,335,336,339,341,342,344,347,349,352,353,354,355,356,357,359,361,365,366,367,368,369,370,371,372,374,375,376,377,378,382,383,384,386,389,391,392,393,397,401,407,408,412,413,414,416,417,434],"int64":[101,297,328,332,339,342,414,417],"int_":[6,7,8,19,21,23,24,25,26,27,32,33,34,35,40,42,46,90,92,93,94,125,127,190,195,196,202,206,207,235,247,255,261,289,290,298,301,302,303,311,312,313,322,323,329,334,351,356,394,395,405,406,411,412,417,418],"integ":[62,84,114,140,177,197,263,267,270,285,342,356],"integr":[3,6,67,72,97,98,99,100,188,189,200,201,218,220,223,237,291,301,306,307,322,323,330,331,343,345,349,353,354,355,361,395,406,407,408,411,419,423,425,429,437,438],"integral_gain":[218,223],"integration_tim":343,"intens":437,"intercept":308,"interest":10,"interfer":368,"interleav":[40,41,190,191,192,193,194,195,196,437,438],"interoper":437,"interpol":[3,42,55,62,84,139,141,145,150,152,197,198,199,202,217,235,247,255,261,263,265,269,270,272,285,287,352,413,432,434,437,438],"interpret":342,"intersymbol":368,"introduc":439,"invers":[7,62,279,322,323,343,345,406,411],"inverse_map":[40,190,195],"invok":423,"ipykernel":420,"ipykernel_10104":433,"ipympl":420,"ipynb":421,"iq":[337,418,437],"iq_imbal":[337,418,438],"irreducible_poli":[128,160],"is_preferred_pair":[328,338,391,417,438],"isf":[424,431],"isi":[247,255,261,368],"iso":325,"isort":421,"isotrop":325,"issu":437,"iter":[136,168,391,417],"its":[12,13,14,108,125,126,134,136,158,159,166,171,172,188,200,291,293,361,367,394,428,429,435],"itself":289,"j":[62,84,114,139,171,174,175,177,188,191,195,196,197,200,235,239,247,255,261,263,274,277,285,293,313,326,330,331,337,339,349,350,353,354,355,366,367,402,407,408,416,428,429],"jacobian":351,"jame":300,"januari":438,"jason":300,"jcharlong":438,"jn_c":[330,331,349,353,354,355,407,408],"john":[24,32,90,257,259,328,338,391],"joint":351,"jq":247,"json":[421,423],"juli":438,"jump":335,"june":438,"jupyt":438,"just":342,"justin":438,"k":[6,8,9,19,42,43,45,46,48,49,62,88,103,125,139,140,149,150,151,153,158,188,202,203,205,206,207,208,209,210,227,230,235,247,249,250,255,256,261,262,291,294,305,311,312,315,316,318,321,353,361,363,366,385,386,399,400,403,424,431,432,435],"k0":[67,70,74,220,239,433],"k1":[67,71,218,433],"k2":[67,72,218,433],"k_0":[67,70,74,220,239,241,242,433],"k_1":[67,71,218,225,433],"k_2":[67,72,218,223,433],"k_p":[67,73,74,220,227,234,249,254,433],"kai":[96,97,98,100,280,281,282,284],"kaiser":[3,62,64,66,84,85,86,197,198,199,285,287,288,295,296,324,336,341,352,438],"kasami":[339,417,437,438],"kasami_cod":[339,417,438],"kei":[8,235,247,255,257,258,259,260,261,430,437,438],"keyword":[362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,386,388,428,429,438],"khz":[305,307,326,406,411],"km":325,"knee":308,"knowledg":280,"known":[227,230,249,250,293,307,332,366,414],"kp":[67,73,74,220,433],"ksp":[409,410],"kwarg":[362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,386,388,438],"l":[63,109,140,151,153,156,157,173,201,237,238,264,286,324],"l_":324,"label":[43,62,84,88,97,99,139,150,156,188,197,200,227,236,237,248,249,256,257,259,262,281,283,285,289,290,291,293,295,296,301,305,307,308,321,322,323,324,325,326,327,336,337,341,343,344,345,346,347,348,349,351,353,354,361,362,364,366,367,368,369,370,372,373,374,375,376,377,378,380,381,382,386,392,394,395,397,398,401,405,406,408,411,424,427,431,432,433,434,435],"lack":353,"lag":[342,364],"lagrang":[139,141,143,145,150,152,438],"lagrange_poli":[139,143,150],"lambda":[5,325,415,424,431],"lambda_":[424,431],"larg":[289,332,339,342,366,414,421],"larger":[296,333,337,363,385,393],"last":[235,247,356,420],"latest":[422,437],"law":[291,330,331,349,353,354,355,361,407,408,438],"lazi":335,"ldot":[139,143,149],"le":[88,140,141,152,157,237,291,324,350,358,361,392,397,401,402],"lead":[235,337,434],"leakag":366,"leaki":[3,200,201,237,437,438],"leakyintegr":[3,200,201,237,438],"least":[300,347],"left":[96,97,98,125,156,158,171,247,249,255,261,280,281,282,284,291,292,293,294,301,305,307,308,317,320,321,322,323,325,326,327,328,330,331,337,349,350,351,353,354,355,358,359,360,361,390,392,395,396,397,399,400,402,407,408,416,424,431],"legend":[62,88,150,156,188,227,249,289,290,291,301,305,307,308,322,323,325,343,344,345,346,347,348,349,351,353,354,361,398,401,405,406,408,411,424,431,432,433,435],"len":395,"length":[3,9,43,46,48,62,63,64,84,85,88,89,99,108,109,111,116,122,124,140,150,151,153,156,157,173,190,193,194,197,198,201,203,207,209,236,237,238,248,256,262,263,264,285,286,287,295,296,297,302,306,307,324,326,327,328,329,332,333,336,339,341,342,352,353,364,366,369,371,374,378,382,384,392,393,397,409,414,416,421,427,432,435,438],"leq":[291,301,344,346,347,348,361,401],"less":[83,291,294,308,322,323,328,349,361,400,401,406,411],"let":[351,353],"level":438,"lf":[67,433],"lfilter":171,"lfloor":[88,108,112,156,237],"lfsr":[19,22,125,126,127,128,129,130,131,132,134,135,136,137,138,158,159,160,161,162,163,164,166,167,168,169,170,300,342,417,437,438],"lib":[424,431],"librari":[421,422,423,427,434,437,439],"light":305,"like":[9,235,301,383,422,437,438],"likelihood":[46,206,207,227,419,433,438],"limit":[5,9,289,294,363,381,385,399,400,434,437,438],"limits_":[96,108,171,280],"line":[335,364,366,367,383,386,387,421,432],"linear":[1,10,15,17,62,88,125,129,131,133,137,141,152,158,161,163,165,169,197,198,199,202,203,232,233,235,247,252,253,255,261,285,287,288,291,293,300,301,308,310,326,330,331,340,342,349,353,354,355,364,365,372,374,379,382,385,407,408,424,431,437,438],"linearli":[24,198,287,294,400],"linearmodul":[8,9,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,232,233,252,253,255,385,438],"linecollect":378,"linestyl":[88,139,150,188,227,235,247,249,255,261,291,294,301,305,361,363,378,385,387,400,416,424,427,431,434],"linewidth":[378,387,416],"link":[325,437,438],"linspac":[24,32,88,97,114,139,150,177,188,257,259,281,289,290,291,294,299,301,304,307,308,325,330,331,343,344,345,346,347,348,351,353,354,361,362,380,381,395,400,405,424,429,431,432,433,434],"lint":[421,422],"list":391,"ll":325,"ln":[291,327],"lo":[67,326,402,433],"lobe":[366,367,435],"loc":[156,289,290,305,325,344,346,347,348,351,353,354,405],"local":[67,326,420,433],"localhost":420,"locat":[308,420,423],"lock":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,218,219,220,221,222,223,224,225,226,239,240,241,242,243,244,245,246,436,437],"lock_tim":[67,77,433],"log":[10,301,369,370,372,374,375,376,378,428,429,433],"log10":[114,177],"log2":301,"log_":[291,292,306,307,310,317,325,357,359,360,361,390,396],"log_2":[42,45,202,205,235,247,255,261,294,315,316,318,399,400,403],"logarithm":[294,369,370,372,374,375,376,400,428,429],"loglog":[322,323,379,406,411],"logspac":[99,114,177,283,291,306,322,323,349,353,354,399,401,406,408,411],"long":[307,367,394,395,421],"longer":[365,368,392,397,409],"lookahead":[139,144,150],"loop":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,218,219,220,221,222,223,224,225,226,239,240,241,242,243,244,245,246,436,437,438],"loop_filt":433,"loopfilt":[218,219,220,221,222,223,224,225,226,419,433,438],"loss":[2,307,325,343,345,366,437,438],"low":[342,353],"lower":[4,156,235,247,261,305,322,323,392,397,406,411,424,431,437,438],"lowpass":[3,341],"lowpass_fir":[3,114,341,438],"lyon":429,"m":[8,42,43,45,46,48,49,62,84,95,125,139,140,150,158,171,174,176,188,197,200,202,203,205,206,207,208,209,210,216,227,235,247,249,255,256,260,261,262,263,271,273,285,300,302,305,306,307,313,315,316,318,322,323,325,326,328,329,332,338,339,342,343,345,364,385,391,403,414,417,420,421,422,423,424,431,437,438],"m_sequenc":[342,364,417,438],"made":438,"mag":[364,366,367],"magic":421,"magnitud":[6,9,10,12,16,88,156,188,200,237,321,324,342,364,369,372,416,437,438],"magnitude_respons":[9,88,114,156,177,188,200,237,295,296,324,327,333,336,341,352,372,392,393,397,428,429,433,435,438],"mai":[43,236,248,256,260,262,289,321,363,378,382,385,387,429,438],"main":[366,367,422,435],"major":439,"make":[394,395,433,439],"mani":[401,414,421],"manual":[235,247,255,261,421,423],"map":[8,9,40,190,191,195,196,202,203,208,216,235,239,247,255,260,261,321,385,437,438],"map_symbol":[202,208,235,247,255,261,293,321,337,363,398,432,433,434,438],"mapsto":[191,195,196,202,203,216,235,247,255,260,261,385],"march":438,"margin":301,"mark":[291,361],"marker":[84,139,150,197,239,285,363,383,385,386,398,427,434],"markers":385,"massei":[300,438],"match":[42,43,46,52,202,203,207,213,235,247,248,255,256,261,262,305,322,323,368,406,411,438],"math":420,"mathbb":[202,203,216,235,247,255,260,261,294,301,385,416],"mathcal":[2,7,9,24,25,26,27,32,33,34,35,90,92,93,94,95,96,278,279,280,281,282,283,284,289,293,301,313,330,331,354,355,365,408,424,431],"mathrm":[125,158,280,297,300,328,330,331,332,339,342,349,353,354,355,407,408,414,424,431],"mathwork":[291,295,296,324,327,332,336,341,352,401,414],"matlab":[9,197,198,199,285,287,288,383,437,438],"matplotlib":[9,362,363,364,365,366,367,368,370,372,373,374,375,376,377,378,380,382,383,385,386,387,388,424,427,428,429,431,432,433,434,435,437],"matric":389,"matrix":[3,40,90,91,95,313,389],"matt":[437,438],"max":[308,321,344,346,359,360,424,431],"max_":[90,301],"max_f":[114,177],"max_frequency_offset":[2,343,438],"max_iid_rv":[7,344,438],"max_integration_tim":[2,345,438],"max_open_warn":387,"max_rv":[7,346],"maximum":[2,7,43,46,114,177,206,207,227,301,327,333,342,343,344,345,346,363,385,392,393,397,419,433,437,438],"maximum_length_sequ":342,"maxkb":421,"mean":[6,139,150,289,321,322,323,374,382,394,395,396,406,408,411,424,431,435],"meant":[12,13,14,67],"measur":[101,103,292,293,309,310,317,320,321,322,323,334,340,357,359,360,390,394,395,396,406,411,424,431,433,437,438],"median":374,"memoryless":[90,95,313,418,437],"meter":[325,358,415],"method":[3,9,46,66,86,189,198,199,206,207,265,269,272,287,288,295,296,301,324,336,341,352,374,382,428,429,438],"methodologi":401,"mf":[235,247,255,261,368],"mf_sampl":[235,247,255,261],"mhostett":[422,437,438],"mhz":[305,307,310,326,340,406,411],"michael":[10,67,75,77,78,79,80,81,88,139,150,218,227,249,392,397],"mid":[354,355,408],"min":[347,348,424,431],"min_iid_rv":[7,347,438],"min_rv":[7,348],"min_snr":[2,291,349,361,401,438],"minim":[133,165,291,297,300,417],"minimum":[2,7,8,235,291,347,348,349,401,437,438],"minor":[438,439],"minut":420,"minvers":423,"misalign":[332,414],"miscellan":437,"mix":[3,62,350,432,437,438],"ml":[227,231,419,433],"mle":[202,206,235,247,255,261],"mlped":[227,228,229,230,231,232,233,234,419,433,438],"mod":416,"mode":[12,17,18,63,64,85,87,89,109,110,113,120,123,140,141,142,148,151,152,153,154,172,174,183,186,189,198,201,238,264,265,276,286,287,297,328,332,339,342,364,368,414,416,438],"model":[2,24,32,90,125,158,300,401,438],"modem":[232,233,235,247,252,253,255,261],"modifi":[134,135,166,167,438],"modul":[32,42,43,47,48,49,202,203,209,210,212,227,232,233,235,239,247,248,249,252,253,255,256,257,259,261,262,315,316,318,321,362,368,377,380,381,385,386,394,395,399,400,403,420,423,434,437,438],"month":437,"more":[9,43,136,168,236,248,256,260,262,289,290,325,344,346,347,348,351,367,383,394,405,438],"most":[2,343,345,356,412],"move":[3,200,201,237,238,305,437,438],"movingaverag":[3,200,237,238,438],"mph":305,"msk":[8,235,236,377,437,438],"mu":[139,140,143,149,150,289],"mu_f":[394,406,411],"mu_t":[322,323,395],"much":[308,435],"multi":421,"multipl":[7,114,177,193,194,356,383,412,434,438],"multipli":[10,67,88,197,285,326],"multiply_distribut":438,"multiply_rv":[7,351,438],"multir":[3,62,63,84,154,197,285,352,389,438],"multirate_fir":[3,64,85,198,287,352,438],"multirate_tap":438,"must":[20,64,85,128,139,160,193,194,198,287,293,295,296,301,305,322,327,336,339,341,350,352,378,392,397,402,406,416,424,431],"mutual":[90,301,386],"mw":[310,340],"myst":420,"n":[1,3,5,6,7,9,10,11,19,20,21,23,40,42,43,46,48,51,52,55,62,63,64,67,84,85,88,89,95,96,99,103,104,105,106,107,108,109,110,111,112,113,115,116,118,119,121,122,124,125,126,127,128,129,130,132,134,135,136,137,139,140,149,150,151,153,156,157,158,159,160,161,162,164,166,167,169,171,173,174,175,179,181,185,188,189,190,191,193,194,197,198,200,202,203,207,209,212,213,217,218,219,235,237,239,240,246,247,248,255,256,261,262,263,264,265,269,271,272,273,274,277,278,279,280,282,284,285,286,287,289,291,292,293,294,295,296,297,300,301,302,305,306,309,313,314,315,316,317,318,319,320,321,324,326,328,329,330,331,332,334,336,337,339,341,344,347,349,350,352,353,354,355,357,359,360,361,364,366,367,368,369,370,371,372,374,375,376,377,378,382,384,386,389,390,394,395,396,398,399,400,402,403,404,407,408,409,410,413,414,416,417,418,433,435,437,438],"n0":434,"n_":[2,97,98,99,100,291,330,331,349,353,354,355,361,401,407,408,431],"n_0":[1,5,9,12,13,14,42,44,53,80,103,104,105,106,107,202,204,214,235,247,255,257,259,261,293,301,315,316,318,319,321,322,323,362,363,380,381,399,403,404,406,411,434,437,438],"n_c":[306,330,331,349,353,354,355,407,408,424,438],"n_f":369,"n_freq":369,"n_input":[150,153],"n_nc":[2,96,97,98,99,100,291,330,331,349,353,354,355,361,401,407,408,431,438],"n_output":[150,153],"n_point":[232,233,252,253],"n_symbol":[395,432],"n_t":369,"n_time":[369,429],"n_var":[289,344,347],"name":125,"nan":[322,323,353,406,411],"nand":293,"narrow":[392,394,397],"natur":[67,79,154],"nb":420,"nc":[2,97,98,99,100,291,330,331,349,353,354,355,361,401,407,408,431],"nco":[67,70,74,220,239,240,241,242,243,244,245,246,419,433,437,438],"ncx2":[424,431],"ndarrai":[1,2,3,4,5,6,7,8,10,11,19,21,23,24,25,26,27,29,32,33,34,35,37,40,42,44,46,48,51,53,56,57,59,62,63,84,88,90,91,92,93,94,96,97,98,99,100,101,106,108,109,113,114,115,116,119,121,122,124,125,127,139,140,143,147,149,150,151,153,156,171,173,175,176,177,179,182,184,185,187,188,190,193,194,195,196,197,200,202,204,206,207,208,209,212,214,216,218,219,227,230,232,233,235,237,239,240,246,247,249,250,252,253,255,257,259,260,261,263,264,274,277,278,279,280,281,282,283,284,285,286,291,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,332,333,334,336,337,339,340,341,342,343,345,349,350,352,353,354,355,356,358,361,365,383,386,389,392,393,397,398,399,400,401,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418],"ndim":433,"ne":[139,416],"nearest":367,"nearli":435,"necessari":[353,420],"need":[84,139,144,150,197,285,420,421,423],"neg":[62,136,168,308,325,337],"new":[24,28,32,36,42,43,56,58,61,90,95,101,102,125,128,134,139,141,150,152,158,160,166,200,202,203,235,236,247,248,255,256,261,262,305,326,398],"new_sample_r":427,"next":[125,136,158,168,366,383,391,401,422],"nfrom":291,"nois":[2,5,9,10,44,53,62,67,68,69,74,80,84,88,96,97,98,99,100,101,103,104,105,106,107,108,117,156,171,180,188,197,200,204,214,218,220,224,235,237,247,255,257,259,261,263,280,281,282,283,284,285,291,293,294,301,306,308,315,316,318,319,322,323,330,331,349,353,354,355,362,365,380,381,399,400,401,403,404,406,407,408,411,418,424,431,433,437,438],"noise_bandwidth":[62,67,74,84,88,108,117,156,171,180,188,197,200,218,220,224,237,263,285,322,323,406,411,438],"noiseless":[235,247,255,261,321],"noisi":[42,202,235,247,255,261,293],"nomin":[381,399,400],"non":[63,97,98,99,100,109,140,151,264,286,291,330,331,333,342,349,353,354,355,361,364,366,386,393,401,407,408,421,424,425,437,438],"non_coherent_gain":[2,291,353,361,431,438],"none":[9,19,20,24,28,32,36,42,44,56,58,61,62,84,88,89,90,95,99,108,114,116,122,125,126,128,134,139,140,156,158,159,160,166,177,197,203,218,226,237,240,248,256,262,263,283,285,291,292,293,294,295,296,298,303,305,313,317,320,322,323,328,330,331,334,336,339,341,342,349,351,354,355,356,357,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,391,401,406,407,408,411,412,418,424,427,431,432,434],"norm":[139,289,290,321,327,333,344,346,347,348,351,378,392,393,397,405,424,431],"normal":[7,43,67,69,74,218,220,224,278,279,289,290,295,296,321,327,330,331,333,336,341,344,346,347,348,351,366,367,369,370,372,374,375,376,382,392,393,394,395,397,405,424,431,433,435],"northeast":337,"northwest":337,"note":[10,19,24,32,40,62,84,88,90,96,97,98,100,108,125,129,130,139,150,156,158,161,162,171,188,197,200,218,227,235,237,239,247,249,255,261,263,269,272,274,277,280,281,282,284,285,289,290,291,293,294,297,299,300,304,306,307,311,312,324,326,327,328,337,338,343,344,345,346,347,348,351,353,354,355,358,361,366,367,368,383,389,391,392,397,398,399,400,401,405,408,416],"notebook":438,"notic":[10,136,138,139,168,170,305,308,326,342,349,353,364,366,367,395,409,410,424,427,431,435],"notion":389,"novemb":438,"now":[326,349,409,410,427,438],"np":[10,19,24,25,26,32,33,34,40,62,84,88,90,91,92,93,97,99,101,114,139,150,156,177,188,190,195,196,197,200,202,212,216,235,237,239,247,255,257,259,260,261,271,273,274,277,281,283,285,289,290,291,293,294,298,299,300,301,303,304,306,307,308,313,321,322,323,325,326,330,331,332,337,343,344,345,346,347,348,349,351,353,354,361,362,363,368,369,370,371,372,375,376,377,378,380,381,384,386,388,389,394,395,398,399,400,401,405,406,408,411,414,424,427,428,429,431,432,433,434,435],"npt":[43,64,85,114,177,198,203,236,248,256,262,287,369,370,371,372,375,376,384,388],"npy":421,"nstandard":[322,323,406,411],"nu":[424,431],"nuisanc":438,"null":[2,96,280,330,367,408,424,431,435],"numba":[437,438],"number":[28,36,41,42,43,45,54,58,61,62,63,64,65,84,95,97,98,99,100,101,103,104,107,114,115,116,119,122,136,139,141,144,150,152,153,168,177,179,185,197,202,203,205,215,232,233,235,236,246,247,248,252,253,255,256,261,262,263,265,266,274,277,285,289,291,293,298,303,306,313,315,316,318,327,330,331,333,335,344,347,349,353,354,355,356,361,363,365,366,367,368,369,370,371,372,374,375,376,377,382,384,389,392,393,397,398,401,403,407,408,412],"numer":[7,67,239,241,289,290,301,343,344,345,346,347,348,351,405,419,429,433,437,438],"numpi":[28,36,43,58,61,62,64,84,85,88,95,108,115,119,150,153,156,197,198,203,236,237,248,256,262,263,285,287,293,298,303,313,363,364,412,421,424,427,428,429,431,432,433,434,435,437,438],"nyquist":[247,255,261,295,296,314,336,341,368,413,435],"o":[84,150,197,285,427],"object":[42,43,67,74,101,102,202,203,235,236,247,248,255,256,261,262,300,332,369,370,371,372,375,376,384,388,414,433,438],"observ":[140,142,151,153,154,227,249,324,354,355,358,368,407],"obtain":[101,289,290,405],"occur":[307,344,346,347,348],"odd":[64,85,157,198,261,287,324,328,338,352,391,409],"off":[203,248,256,262],"offset":[2,8,42,43,50,75,77,84,139,150,197,202,203,211,235,236,239,240,241,244,247,248,255,256,258,261,262,285,294,305,307,326,343,345,350,371,386,398,400,418,433,437,438],"offset_r":[326,398,438],"often":[139,427],"omega":[9,62,84,88,108,114,115,119,150,156,171,177,188,197,200,237,239,241,243,263,285,369,370,372,375,376,433],"omega_":[67,78],"omega_3db":[67,78],"omega_n":[67,79,433],"omnidirect":325,"one":[43,108,136,168,171,236,247,248,256,260,262,308,325,327,335,347,369,370,372,374,375,376,382,391,401,409,421,428,429,432,435],"ones":[20,126,128,159,160,198,287,424,431,433],"onli":[17,43,63,64,67,85,87,109,113,114,120,142,154,177,183,198,203,227,236,248,256,260,262,264,276,286,287,293,297,322,323,325,330,331,332,333,338,342,344,346,349,353,354,355,363,364,366,368,378,391,393,399,406,407,408,411,414,423,424,431,433,434],"onto":[75,77,81],"oo":438,"open":[368,437],"oper":[9,12,96,99,280,283,328,354,379,433,437,438],"oplu":[311,312,328,334],"optim":[141,152,438],"optimum":[257,259],"option":[240,246,369,370,372,374,375,376,382,438],"oqpsk":[8,235,247,248,438],"order":[3,42,43,49,62,63,64,67,84,85,88,89,101,106,108,109,118,125,126,132,133,134,135,136,137,138,139,141,145,150,152,156,158,159,164,165,166,167,168,169,170,171,181,188,197,198,200,202,203,210,218,220,235,237,247,255,256,261,262,263,264,271,273,285,286,287,293,295,296,297,300,315,316,318,321,327,328,332,336,339,341,342,352,363,368,377,392,394,395,397,398,403,414,419,429,432,433,434,438],"org":[19,309,339,342,357,416],"origin":[12,13,14,136,168,247,261,305,308,322,323,344,346,347,348,406,411,413,427],"oscil":[67,239,241,326,419,433,437,438],"other":[103,104,105,107,305,308,342,401,427,439],"otherwis":[150,328],"out":[19,24,32,40,62,84,90,101,114,125,126,129,130,131,132,134,135,136,137,138,156,158,159,161,162,163,164,166,167,168,169,170,177,190,197,227,235,247,255,258,260,261,263,271,273,274,275,277,278,279,285,297,298,300,302,303,306,307,310,311,312,313,315,316,318,319,321,325,328,329,330,331,332,338,339,340,342,343,345,349,353,354,355,356,358,387,389,391,394,395,399,403,404,407,412,414,415],"output":[10,11,12,16,19,21,23,24,26,27,32,34,35,40,41,57,62,63,84,90,93,94,95,109,116,122,125,127,136,138,139,140,150,151,153,154,158,168,170,172,174,179,185,189,191,195,196,197,198,200,201,207,218,219,237,239,240,246,263,264,265,268,272,275,285,286,287,291,293,294,297,298,299,300,301,303,304,306,312,313,321,322,323,328,332,339,340,342,353,354,355,356,361,364,371,384,398,406,408,411,412,414,417,420,427,428,429,431,433,438],"outsid":[156,429],"over":[10,125,129,130,131,132,134,135,136,137,158,161,162,163,164,166,167,168,169,257,259,297,300,306,326,328,332,335,339,342,414,438],"overdamp":[74,83,220,221],"overlai":62,"overlap":[374,382,432],"oversampl":[366,367,395],"overwritten":[363,378,382,385],"p":[5,7,24,28,29,31,32,36,37,39,62,84,90,91,95,125,139,141,143,145,150,152,158,197,198,239,240,263,270,275,278,279,285,287,289,290,298,299,300,301,303,304,313,344,346,347,348,351,352,354,355,390,405,418],"p_":[2,9,96,97,98,99,100,257,259,280,281,282,283,284,291,292,293,310,313,321,322,323,340,349,353,354,355,357,359,361,362,374,379,380,401,406,407,408,411,424,431],"p_b":[44,204],"p_d":[2,9,96,97,99,280,281,283,291,330,331,349,354,361,373,379,401,424,431,438],"p_d_mea":[424,431],"p_e":[53,214],"p_fa":[2,9,96,97,98,99,100,280,281,282,283,284,291,330,331,349,353,354,355,361,365,379,401,407,408,424,431,438],"p_fa_mea":[424,431],"p_h0":365,"p_h1":365,"p_rc_0p1":435,"p_rc_0p5":435,"p_rc_0p9":435,"p_rect":435,"p_srrc_0p1":435,"p_srrc_0p5":435,"p_srrc_0p9":435,"pacf":438,"pack":[7,101,103,235,247,255,261,335,356,437,438],"packag":[422,437],"pad":307,"page":420,"pair":[328,338,391,417,437,438],"papr":[6,235,247,261,357,432,438],"papr_bb_0p1":432,"papr_bb_0p5":432,"papr_bb_0p9":432,"papr_bb_rect":432,"papr_pb_0p1":432,"papr_pb_0p5":432,"papr_pb_0p9":432,"papr_pb_rect":432,"par":325,"parabol":[5,325,358,395],"parabolic_antenna":[5,325,358,438],"parallel":[62,84,197,263,265,272,285],"paramet":[11,12,17,20,21,23,27,28,35,36,41,43,44,46,48,53,57,58,61,63,64,74,75,77,80,85,89,94,95,97,98,99,100,103,104,105,107,109,110,114,115,116,117,119,122,126,127,128,134,136,140,141,151,152,153,157,159,160,166,168,172,173,174,177,179,180,185,189,191,193,194,198,201,203,204,206,207,208,209,214,219,220,230,231,232,233,236,238,240,241,246,248,250,252,253,256,257,259,262,264,265,278,279,281,282,283,284,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,424,431],"parameter":353,"parser":420,"part":[300,364,366,367,386,433],"partit":[263,265,269,272],"pass":[24,27,28,32,35,36,43,56,57,58,61,62,84,88,90,94,95,108,113,156,197,237,263,265,269,285,293,298,303,305,313,321,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,386,388,418,420,422,428,429,438],"passband":[3,156,295,296,305,324,327,333,336,341,392,393,397,409,410,432,438],"patch":439,"path":[325,437],"pb":432,"pb_papr":432,"pccf":438,"pcolormesh":[363,378,382],"pdf":[9,289,290,301,344,346,347,348,351,354,355,365,401,405,407,424,431,437,438],"peak":[6,235,247,261,309,321,322,323,357,359,360,366,406,411,430],"peak_pow":[6,357,359,438],"peak_voltag":[6,309,360,438],"ped":[67,73,74,220,227,231,232,233,249,250,251,252,253,254,419,433,437,438],"peebl":[2,353,361,438],"pei":301,"pep585":421,"per":[7,42,43,45,46,47,48,54,63,109,150,202,203,205,207,209,215,235,236,240,247,248,255,256,261,262,264,286,293,294,301,315,316,318,319,326,327,333,335,356,363,368,377,392,393,397,403,404,412,421,432,435,438],"percent":438,"percentil":[321,382],"perf":421,"perfect":280,"perfectli":156,"perflint":421,"perform":[10,11,63,67,109,140,141,151,152,153,157,257,259,264,286,306,314,324,353,354,394,395,413,419,424,428,429,431,434,437,438],"period":[74,220,224,235,338,391,416,438],"periodogram":[9,62,314,374,394,409,410,413,432,437,438],"permut":[40,190,191,195,196],"persist":[247,255,261,363,368,378,434,438],"phase":[3,9,42,43,47,50,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,108,119,141,152,156,197,202,203,211,218,219,220,221,222,223,224,225,226,227,230,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,285,291,326,337,342,350,368,375,376,377,389,401,402,418,424,430,431,436,437,438],"phase_delai":[9,62,84,88,108,119,156,197,237,263,285,375,438],"phase_err":[67,433],"phase_error":433,"phase_error_vari":[67,80],"phase_est":[67,433],"phase_lock_tim":[67,81],"phase_offset":[42,43,50,202,203,211,235,236,247,248,255,256,258,261,262,293,321,337,363,368,385,386,398,432,433,434],"phase_respons":[9,114,177,376,438],"phase_tre":[9,235,377,438],"phi":[9,42,43,50,62,84,88,108,119,156,197,202,203,211,235,236,237,247,248,255,256,258,261,262,263,285,326,337,350,375,402],"physic":325,"pi":[8,10,40,43,47,62,84,88,150,177,188,190,191,195,196,197,227,239,247,249,255,261,262,285,293,301,307,322,323,325,326,327,337,350,358,366,367,369,370,371,372,375,376,384,388,392,397,402,406,411,416,427,428,429,433,437,438],"pi4_qpsk":261,"pickleshar":420,"piecewis":[3,139,150],"pimpsk":[8,261,262,438],"pin":438,"pip":[420,421,422,423,437],"pixel":[294,400],"pl":[77,81,421],"place":[191,195,196],"plane":429,"pleas":437,"pll":[67,68,69,74,75,76,77,78,79,80,81,82,83,419,437,438],"plot":[10,24,32,62,84,88,97,99,114,115,116,119,122,139,150,156,177,179,185,188,197,200,227,235,237,239,247,249,255,257,258,259,260,261,281,283,285,289,290,291,293,294,295,296,297,299,301,304,305,306,307,308,314,321,324,325,326,327,328,330,331,332,333,336,337,339,341,342,343,344,345,346,347,348,350,351,352,353,354,355,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,392,393,394,395,397,398,399,400,402,405,407,409,410,413,414,416,424,427,428,429,431,433,434,435,437,438],"plr0912":421,"plr0913":421,"plr0915":421,"plr2004":421,"plr5501":421,"plt":[10,24,32,62,84,88,97,99,139,150,156,188,197,200,227,235,237,239,247,249,255,257,258,259,260,261,281,283,285,289,290,291,293,294,295,296,297,299,301,304,305,306,307,308,314,321,322,323,324,325,326,327,328,330,331,332,333,336,337,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,380,381,383,384,385,386,388,392,393,394,395,397,398,399,400,401,402,405,406,407,408,409,410,411,413,414,416,424,427,428,429,431,432,433,434,435],"plu":[67,218,220,419,438],"plw0603":421,"pm":[367,435],"pn":[328,338,391],"point":[114,141,152,177,232,233,252,253,353,363,365,366,367,374,382],"pole":[9,171,172,177,182,188,200,369,370,371,372,375,376,384,388,428,437],"poli":[19,125,126,129,130,131,134,137,138,158,159,161,162,163,166,169,170,300,339,342,391,417],"poly1":[328,338,417],"poly1d":139,"poly2":[328,338,417],"polylik":[19,20,125,128,158,160,328,338,339,342,391,417],"polynomi":[3,20,128,129,130,133,139,141,143,145,150,152,160,161,162,165,300,328,338,339,342,391,417,438],"polyphas":[62,63,64,66,84,85,86,197,198,199,263,264,265,266,268,269,272,273,274,277,285,286,287,288,314,352,389,413,437,438],"polyphase_decompos":[3,389,438],"polyphase_matrix":438,"polyphase_ord":[62,64,84,85,197,198,263,271,273,285,287,352,438],"polyphase_tap":[62,84,197,263,271,273,274,277,285],"polyphasefir":[3,62,84,197,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,285,438],"posit":[62,150,191,195,196,305,308,328,337],"possibl":[325,437],"post":[291,361],"power":[5,9,139,235,247,255,261,292,293,294,301,310,321,322,323,327,330,331,333,340,357,358,359,366,367,374,390,392,393,394,397,399,400,406,411,424,430,431,435,437,438],"ppb":[305,438],"ppi":[218,220,419],"ppm":[305,398,438],"pr":[95,313],"pre":422,"precis":[322,323,332,353,395,406,411,414],"prefer":[328,338,391,417,437,438],"preferred_pair":[328,338,391,417,438],"present":[247,255,261,354,424,431],"preserv":[12,18,64,84,85,89,110,123,141,148,152,172,174,186,189,197,198,201,238,265,285,287],"prevent":[84,197,247,261,285],"previou":[62,64,84,85,88,89,108,110,121,139,141,147,150,152,156,172,174,189,197,198,200,201,237,238,263,265,285,287,311,312],"prime":416,"primit":[125,158,328,338,339,342,391,417,438],"primitive_poli":[20,125,126,128,129,130,131,132,134,135,136,137,138,158,159,160,161,162,163,164,166,167,168,169,170,339,342],"print":[125,126,138,150,158,159,170,300,305,335,424,427,428,429,431,433],"print_figure_kwarg":[424,427,428,429,431,432,433,434,435],"proaki":[24,32,90,257,259,328,338,391],"probabl":[2,9,24,28,31,32,36,39,90,91,95,96,97,98,99,100,278,279,280,281,282,283,284,289,290,291,298,299,301,303,304,313,330,331,344,346,347,348,349,351,353,354,355,361,365,368,373,379,401,405,407,408,424,431,437,438],"process":[62,84,96,97,98,100,125,127,153,197,200,237,280,281,282,284,285,308,352,389,429,433,437],"prod_":[139,344,347],"produc":[2,62,63,109,125,133,136,138,140,151,158,165,168,170,197,263,264,265,272,285,286,300,306,327,342,343,345,364,391,417,435],"product":[4,7,306,308,322,323,327,351,406,411,435,437,438],"progress":437,"propag":401,"properti":[13,14,15,16,18,22,25,26,30,31,33,34,38,39,45,47,49,50,51,52,54,55,60,65,66,68,69,70,71,72,73,76,78,79,82,83,86,91,92,93,112,118,121,123,124,129,130,131,132,133,135,137,142,143,144,145,147,148,149,154,161,162,163,164,165,167,169,175,176,178,181,182,184,186,187,195,196,199,205,210,211,212,213,215,216,217,221,222,223,224,225,228,229,234,242,243,244,254,258,260,266,267,268,269,270,271,272,273,274,275,277,288,328,438],"proport":[63,67,71,218,220,225,264,286,322,323,325,358,406,411,419,438],"proportional_gain":[218,225],"prototyp":[3,62,64,84,85,197,198,263,264,265,271,274,277,285,286,287,389,438],"provid":[2,42,44,53,106,202,204,214,235,247,255,257,259,261,301,305,328,343,345,353,365,368,378,421,437],"psd":[9,44,53,204,214,257,259,315,316,318,319,362,380,381,394,399,403,404,406,411],"psk":[8,227,247,249,255,256,257,258,259,260,261,262,293,321,337,362,363,368,380,381,385,386,394,395,398,432,433,437,438],"psk16":[257,259,362,380,434],"psk16_bb_papr":432,"psk16_ber":434,"psk16_pb_papr":432,"psk16_ser":434,"psk8":[257,259,362,380,434],"psk8_bb_papr":432,"psk8_ber":434,"psk8_bin":434,"psk8_grai":434,"psk8_pb_papr":432,"psk8_ser":434,"public":438,"puls":[42,43,46,48,51,52,55,88,188,202,203,207,209,212,213,217,235,247,248,255,256,261,262,327,333,368,386,392,393,394,395,397,401,430,437,438],"pulse_shap":[42,43,46,48,51,202,203,207,209,212,235,247,248,255,256,261,262,368,386,394,395,432,434],"purpos":438,"py":[421,423,433],"pycodestyl":421,"pydocstyl":421,"pyflak":421,"pylint":[421,438],"pypi":437,"pyplot":[9,362,363,364,365,370,372,373,374,375,376,378,380,382,383,385,386,387,388,424,427,428,429,431,432,433,434,435],"pyproject":[421,423],"pytest":[422,423],"python":[420,437,438],"python3":[420,421,422,423,437],"pyupgrad":421,"q":[7,62,84,85,197,235,247,263,267,275,278,279,280,281,282,284,285,287,301,342,352,416,438],"q_":[96,97,98,100],"qam":[315,316,318,403],"qasim":[10,139,150],"qinv":[7,278,279,438],"qpsk":[227,247,249,255,257,258,259,261,293,321,362,363,368,380,385,386,398,433,437,438],"qpsk_bb_papr":432,"qpsk_ber":434,"qpsk_pb_papr":432,"qpsk_ser":434,"quad":[88,237],"quadrat":[326,438],"quadratur":[8,247,337,368],"quantiti":[103,104,105,106,107],"quartic":438,"quick":335,"quickli":10,"quit":[332,414],"r":[3,10,40,41,62,84,150,151,153,154,197,263,264,275,285,286,301,308,314,315,316,318,321,322,323,327,344,346,347,348,350,351,392,397,402,403,406,408,409,410,411,413,420,421,422,423,429,432,433,435],"rad":[114,177],"rad2deg":433,"radar":401,"radian":[67,78,79,80,227,230,232,233,239,240,241,243,244,249,250,252,253,261,433],"radio":437,"rainbow":[363,378],"rais":[8,88,141,152,188,203,248,256,262,368,386,392,394,395,397,428,437],"raised_cosin":[8,203,248,256,262,383,392,435,438],"ramp":[198,218,287],"randint":[19,24,32,90,235,247,255,261,293,298,303,313,321,337,363,368,377,386,394,395,398,432,433,434],"randn":[10,62,200,237,386],"random":[10,19,24,28,32,36,58,61,62,90,95,96,200,235,237,247,255,261,278,289,290,293,298,303,313,321,337,344,346,347,348,351,363,368,377,386,394,395,398,405,424,431,432,433,434,437,438],"rang":[62,139,150,227,249,363,433,434],"rao":[4,322,323,406,411,437,438],"raster":[9,368,377,378,437,438],"rate":[3,6,9,10,12,13,14,42,43,44,47,53,62,63,64,67,74,82,84,85,101,102,103,105,106,114,115,117,119,140,142,150,151,153,154,177,180,197,198,202,204,214,235,247,255,257,259,261,263,264,267,270,275,285,286,287,305,306,314,315,316,318,326,350,352,353,362,364,366,367,368,369,370,372,374,375,376,377,378,380,381,382,386,394,395,398,399,402,403,408,409,410,413,418,424,431,437,438],"ratio":[2,5,6,9,43,44,47,53,80,97,99,101,103,104,105,106,107,150,204,214,235,247,257,259,261,281,283,291,293,294,301,308,315,316,318,319,322,323,330,331,349,353,354,357,362,365,380,381,399,400,401,403,404,406,408,411],"ration":[3,285,287,352,438],"rayleigh":[289,290,344,346,347,348,401,405],"rc":[8,203,247,248,255,256,261,262,368,392],"rc_0p1":435,"rc_0p5":435,"rc_0p9":435,"rc_param":387,"rcdefault":387,"rcparam":[9,387],"re":[227,280,330,331,349,353,354,355,407,408,424,431],"read":40,"real":[3,97,98,100,150,278,279,281,282,284,293,301,305,330,331,349,350,353,354,355,364,366,367,370,372,374,375,376,378,382,386,395,402,407,408,409,410,424,428,429,431,432,433,437,438],"rearrang":[308,322,323,406,411],"reason":[325,333,393,420],"receiv":[9,10,42,46,52,96,97,99,101,103,202,206,207,213,227,228,230,231,235,247,249,250,255,257,259,261,280,281,282,283,284,305,321,325,354,368,373,379,437,438],"reciproc":[125,129,130,158,161,162],"recommend":[197,437],"recomput":139,"rect":[43,203,248,256,262,394,395,435],"rectangular":[8,43,189,203,248,256,262,322,323,393,394,395,406,411,432,435,437,438],"recurr":[125,129,133,137,158,161,165,169,300],"recurs":289,"reduc":[12,13,14,307,366],"reduct":[306,307,353,424,431],"ref":[6,227,229,231,291,295,296,321,324,327,332,336,341,352,401,414],"refactor":438,"refer":[10,12,16,19,24,32,62,67,75,77,78,79,80,81,84,88,90,96,97,98,100,101,125,139,150,158,197,218,227,229,230,231,249,250,257,259,280,281,282,284,285,291,293,295,296,300,301,307,308,309,321,324,326,327,328,332,336,338,339,341,342,352,353,357,361,389,391,392,397,398,401,414,416,429,431,435,437],"referenc":353,"reflector":[5,325,358],"regim":[294,400],"regist":[125,126,137,158,159,169,300,342,417],"rel":[261,305,416,435],"relat":[62,84,137,169,197,263,274,277,285,327],"relationship":351,"releas":[422,438],"relev":437,"reli":437,"remain":[113,314,356],"rememb":200,"remov":[247,255,261,305,308,322,323,350,374,382,383,406,411,438],"renam":438,"render":421,"reorgan":139,"repeat":239,"replac":438,"replic":437,"replica":[2,280],"replicacorrel":[2,280,281,282,283,284,438],"repo":[421,422],"repres":[24,26,27,67,76,298,299,305,342],"represent":[385,438],"reproduc":300,"request":[150,153],"requir":[2,63,109,264,286,289,290,291,300,344,346,347,348,349,351,353,401,405,408,420,421,422,423,438],"resampl":[62,84,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,197,263,264,275,285,286,287,288,352,389,398,426,437,438],"resample_sign":427,"research":437,"resembl":367,"reset":[10,17,24,32,56,61,62,84,87,88,90,108,120,125,134,139,146,150,155,156,158,166,171,183,188,197,200,218,226,237,239,245,263,276,285],"resolut":[366,420],"respons":[3,9,62,84,88,108,114,116,122,150,156,171,177,179,185,188,197,200,237,263,285,295,296,324,327,336,341,352,368,369,370,371,372,376,384,392,397,435,437,438],"result":[235,247,261,289,290,292,317,325,344,346,347,348,351,358,359,360,390,392,396,397,405,424,431,434],"return":[7,8,11,21,23,27,29,35,37,44,46,48,53,57,59,62,63,67,75,77,80,81,84,88,94,97,98,99,100,101,103,104,105,106,107,108,109,111,113,114,115,116,117,119,122,126,127,136,138,140,151,153,156,159,168,170,171,173,177,179,180,185,188,193,194,197,200,204,206,207,208,209,214,219,230,232,233,237,240,246,250,252,253,257,259,263,264,278,279,281,282,283,284,285,286,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,424,428,429,431,432,434,438],"rev":421,"revers":[125,129,130,136,161,162,168],"revert":387,"rework":438,"rf":[139,325,432,433],"rfloor":[88,108,112,156,237],"rho":[5,9,381,399,400],"rice":[10,67,75,77,78,79,80,81,88,139,150,218,227,249,289,290,344,346,347,348,392,397,405],"richard":[291,361],"rician":[289,290,344,346,347,348,405],"right":[96,97,98,125,158,171,247,249,255,261,280,281,282,284,291,292,293,294,301,307,308,317,320,321,322,323,325,326,327,330,331,337,349,350,351,353,354,355,358,359,360,361,390,392,395,396,397,399,400,402,407,408,416,424,431],"rm":[6,227,228,229,231,309,321,322,323,394,395,396,406,411,437,438],"rms_bandwidth":[6,394,406,411,438],"rms_integration_tim":[6,322,323,395,438],"rms_voltag":[6,309,396,438],"rng":[330,331,424,431],"roc":[9,96,99,280,283,354,379,437,438],"roll":[203,248,256,262,435],"root":[6,8,141,152,203,248,256,262,321,322,323,368,386,394,395,396,397,406,411,416,417,428,437],"root_raised_cosin":[8,88,139,188,203,248,256,262,369,370,371,372,375,376,384,388,397,428,432,434,435,438],"rotat":[261,294,326,350,400,433],"roughli":[24,32,298,303,325,427],"row":[40,41,143,149,378],"rrc":383,"ruf":421,"ruff":[421,422,438],"rule":421,"run":[150,420],"rv":[289,290,344,346,347,348,351,405],"rv_continu":[2,7,289,290,330,331,344,346,347,348,351,365,405],"rv_histogram":[7,289,290,344,346,347,348,351,405],"rx":[227,228,231],"rx_complex_symbol":[235,247,255,261],"rx_filter":[42,52,202,213,235,247,255,261],"rx_sampl":[235,247,255,261,368],"rx_symbol":[235,247,255,261],"s_":[20,125,126,128,132,134,135,158,159,160,164,166,167],"s_0":[20,125,126,128,132,134,135,158,159,160,164,166,167],"s_1":[20,125,126,128,132,134,135,158,159,160,164,166,167,322,406,424,431],"s_2":[322,406],"s_hat":[46,207,433,434],"sach":300,"same":[88,109,125,136,138,151,153,158,168,170,227,249,306,322,353,364,366,367,368,383,386,394,395,398,401,406,428],"sampl":[2,3,12,13,14,42,43,46,48,54,62,63,67,74,82,84,88,97,98,99,100,108,109,112,114,115,116,117,119,122,139,140,142,144,150,151,153,154,156,177,179,180,185,197,198,202,203,207,209,215,220,224,235,236,237,239,240,241,243,246,247,248,255,256,261,262,263,264,268,275,285,286,287,291,293,305,306,314,316,319,326,327,330,331,333,344,347,349,350,353,354,355,361,364,366,367,368,369,370,371,372,374,375,376,377,378,382,384,386,392,393,394,395,397,398,402,403,404,407,408,409,410,413,418,424,427,431,432,433,435,437,438],"sample_r":[6,9,62,67,74,82,84,88,108,114,115,117,119,150,156,171,177,180,188,197,200,237,263,285,305,314,326,350,364,366,367,368,369,370,372,374,375,376,377,378,382,386,394,395,398,402,409,410,413,427,433,435],"sample_rate_offset":[398,418,438],"satisfi":[350,402],"scalar":[151,153,398,433],"scale":[139,200,227,289,290,322,323,330,331,344,346,347,348,351,366,367,369,370,372,374,375,376,382,405,406,411,424,428,429,431,438],"scallop":[307,366],"scatter":[363,401],"scheme":[227,232,233,235,247,249,252,253,255,261,438],"scipi":[7,89,108,171,289,290,295,296,336,341,344,346,347,348,351,365,366,367,374,382,405,424,431,435,437,438],"scrambl":[19,22,23,438],"scrambler":[19,20,437,438],"sdr":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,427,428,429,431,432,433,434,435,438,439],"se":[259,380],"second":[74,75,77,81,101,218,220,224,306,307,308,322,323,327,328,338,343,345,364,395,402,406,411,421,424,431],"section":[10,88,96,103,104,105,106,107,139,150,227,249,280,429,433],"see":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,89,104,105,106,107,108,109,110,111,112,113,117,118,120,121,123,124,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,170,171,172,173,174,175,176,178,180,181,182,183,184,186,187,189,201,218,219,220,221,222,223,224,225,226,235,238,239,240,241,242,243,244,245,246,247,255,258,260,261,276,285,295,296,306,314,325,327,333,336,341,369,370,371,372,374,375,376,382,384,388,392,393,397,437],"seed":[24,28,32,36,56,58,61,90,95,293,298,303,313,438],"seen":422,"segment":[374,382],"select":[139,370,372,374,375,376,382,421],"self":[125,126,139,147,150,158,159,171,172,188,200],"semant":439,"semilogi":[294,362,379,380,399,400],"semilogx":[291,306,349,353,361,379,401,408],"sensibl":438,"separ":[41,235,364,368],"septemb":438,"sequenc":[19,21,23,24,27,32,35,40,56,57,90,94,125,129,133,136,138,158,161,165,168,170,190,193,194,297,298,300,303,313,328,332,338,339,342,364,391,414,416,418,437,438],"ser":[6,9,42,53,101,202,214,235,247,255,259,261,380,434,437,438],"seri":139,"server":420,"set":[142,150,154,293,322,323,325,328,332,339,363,366,374,378,382,383,385,387,401,406,411,414,421,423,429],"set_prop_cycl":[291,330,331,424,427,431,434],"set_titl":[291,361,401],"set_xlabel":[291,361,401],"set_ylabel":[291,361,401],"settabl":[10,13,14,16,227,228,229,239,242,243,244],"sever":[114,177,328,339],"seymour":308,"sf":[424,431],"sh":421,"shade":[365,382],"shannon":[5,9,381,399,400,437,438],"shannon_limit_ebn0":[5,9,381,399,438],"shannon_limit_snr":[5,294,400,438],"shape":[42,43,46,48,51,52,55,62,114,139,141,147,150,152,177,202,203,207,209,212,213,217,235,247,248,255,256,261,262,327,333,342,368,386,392,393,394,395,397,429,430,437,438],"share":[364,366,367,386],"sharei":[291,361],"shift":[8,125,126,137,139,158,159,169,235,247,255,257,258,259,260,261,300,305,328,342,416,417,428,429,430,437,438],"shnidman":[2,401,438],"should":[227,235,394,395,422],"show":[424,427,428,429,431,432,433,434,435],"show_zero":[363,378],"showloc":423,"shown":399,"side":[289,290,295,296,327,328,344,346,347,348,351,369,370,372,374,375,376,382,405,428,429,432,435],"sidelob":[297,332,342,364,366,392,397,414,416],"sigma":[96,97,98,99,100,280,281,282,283,284,289,293,294,301,330,331,354,355,407,424,431],"sigma1":[424,431],"sigma2":[2,98,100,282,284,330,331,354,355,365,407,424,431],"sigma_":[80,96,97,99,322,323,406,411],"sigma_1":[424,431],"sigma_2":424,"signal":[2,5,6,9,10,11,12,13,14,42,43,51,62,63,67,75,77,80,81,84,88,89,96,97,98,99,100,101,103,104,105,106,107,108,109,113,139,140,150,151,153,156,171,173,188,197,200,202,203,212,218,219,227,228,229,231,235,237,239,240,246,247,248,255,256,261,262,263,264,265,269,272,280,281,282,283,284,285,286,291,292,293,294,295,296,301,305,306,307,308,309,310,314,315,316,317,318,319,320,322,323,325,326,327,330,331,334,336,337,340,341,349,350,352,353,354,355,357,358,359,360,364,365,366,367,368,369,370,372,374,375,376,377,378,382,386,389,390,394,395,396,398,400,401,402,403,404,406,407,408,409,410,411,413,415,424,428,429,431,433,435,437,438],"signific":[356,412],"significantli":435,"sim":[96,280,289,293,301,421,424,431],"similar":[235,247,261,307,435],"similarli":424,"simon":[257,259],"simpl":301,"simpli":306,"simplifi":[301,421],"simul":[141,152,227,232,233,249,252,253,434,437],"sin":[239,293,307,392,397],"sinc":[150,301,307,343,344,345,346,347,348,351,358,394,420,434],"sine":[8,150,235,240,246,333,437,438],"sing":300,"singl":[99,114,177,257,259,366,368,433],"sinusoid":[3,255,293,305,314,326,350,366,367,402,409,410,413,429,438],"site":420,"size":[10,40,41,46,48,95,136,150,151,153,168,190,192,193,194,207,209,300,313,325,330,331,342,366,367,386,398,427,433,434,435],"sliding_window_view":[424,431],"slightli":353,"slope":[227,249,308,398],"small":[339,435],"smaller":[289,290,308,327,344,346,347,348,351,353,365,392,397,405,435],"smallest":356,"snr":[1,2,4,5,9,96,97,99,101,103,104,105,106,107,235,247,255,261,291,293,294,301,306,307,308,322,323,330,331,349,353,354,355,361,365,373,400,401,403,404,406,407,408,409,410,411,418,424,431,434,438],"snr1":[4,308,322,406,424,431],"snr2":[4,308,322,406,424,431],"snr_ref":[291,353,361,431],"snr_to_ebn0":[1,44,204,257,403,438],"snr_to_esn0":[1,53,214,259,404,438],"so":[62,139,247,255,261,291,308,325,327,333,392,393,397,437],"soft":301,"softwar":437,"solid":[291,364,366,367,378,386],"solv":[301,353],"some":420,"someth":437,"sourc":321,"sp":[8,9,42,43,46,48,54,139,202,203,207,209,215,235,236,247,248,255,256,261,262,316,319,327,333,368,377,386,392,393,394,395,397,403,404,409,410,432,434,435],"space":[5,62,114,177,307,325,437],"span":[8,9,43,139,203,248,256,262,327,333,368,377,392,393,397,432,435,438],"specif":[64,85,106,114,150,177,198,287,289,423,435],"specifi":[7,20,101,104,105,107,125,128,134,158,160,166,227,232,233,249,252,253,293,294,313,335,353,420,428,429,438],"spectra":394,"spectral":[5,235,301,314,366,374,381,394,399,400,406,411,432,435],"spectrogram":[9,382,437,438],"spectrum":[314,369,370,372,374,375,376,382,394,406,409,410,411,413],"speed":305,"sphinx":420,"split":62,"spread":[62,332,366,394,395,414],"sqrt":[280,281,282,284,291,301,320,321,322,323,327,330,331,394,395,396,397,406,411,416,424,431,432,433,435],"squar":[6,8,141,152,203,248,256,262,290,291,321,322,323,325,330,331,346,348,349,353,354,355,358,361,368,386,394,395,396,397,401,405,406,407,408,411,428,438],"src":421,"srrc":[8,203,247,248,255,256,261,262,368,386,394,395,397,432,434],"srrc_0p1":435,"srrc_0p5":435,"srrc_0p9":435,"standard":[7,278,279,322,323,383,406,411,424,431,437,438],"star":139,"start":[236,248,256,262,420],"stat":[7,289,290,344,346,347,348,351,365,405,424,431],"state":[19,20,62,63,67,80,84,87,88,108,109,113,120,121,123,126,128,132,134,135,136,138,139,146,147,148,150,155,156,159,160,164,166,167,168,170,171,183,184,186,188,197,200,237,263,264,276,285,286,300,342,438],"statement":421,"static":[24,29,32,37,56,59,90,96,97,98,99,100,280,281,282,283,284,421],"statist":[2,96,97,98,100,280,281,282,284,330,331,365,438],"steadi":[67,80],"stein":[308,322,323,406,411],"stem":[9,366,367,371,383,384,437,438],"step":[9,62,84,88,108,122,125,132,134,135,136,138,156,158,164,166,167,168,170,171,185,188,197,200,237,239,240,246,263,285,289,290,300,330,331,344,346,347,348,351,384,405,424,431,437,438],"step_respons":[9,62,84,88,108,122,156,171,185,188,197,200,237,263,285,384,428,429,433,438],"steven":[96,97,98,100,280,281,282,284],"still":438,"stop":[64,85,198,287,352],"stopband":[64,85,198,287,352,392,397],"store":[420,422,423],"str":[7,89,295,296,335,336,341,366,367,368,374,377,378,382,383],"straddl":366,"stream":[12,17,18,63,64,85,87,89,109,110,113,120,123,140,141,148,151,152,172,174,183,186,189,198,201,235,238,247,255,261,264,265,276,286,287,429],"stretch":337,"stride":378,"stride_trick":[424,431],"string":[43,203,248,256,262,335,438],"strong":[12,13],"structur":[139,150],"style":[9,383,387,438],"subclass":[125,131,158,163],"subplot":[291,337,361,368,401,433,434],"subsequ":[140,151],"substack":139,"substitut":[344,346,347,348],"subtract_rv":[7,405,438],"suffici":[289,322,323,406,411],"sum":[7,62,84,96,108,171,197,263,265,272,280,285,289,290,344,347,424,431,435,437,438],"sum_":[108,139,171,282,284,292,293,294,306,317,320,321,330,331,334,349,353,354,355,366,367,396,407,408,424,431],"sum_distribut":438,"summari":421,"summat":[84,263],"superflu":438,"support":[108,171,438],"suppos":[139,307,349],"suppress":438,"suptitl":[235,247,255,261,368,401,433,434],"surround":10,"sweep_alpha":432,"swerl":[2,401],"switch":420,"sym":[42,43,47,54,202,203,215,235,236,247,248,255,256,261,262,316,319,327,392,397,403,404,435],"symbol":[6,9,42,43,45,46,47,48,53,54,101,103,106,125,127,136,150,158,168,197,202,203,205,206,207,208,209,214,215,216,227,230,235,236,247,248,249,250,255,256,257,259,260,261,262,293,300,301,315,316,318,319,321,327,333,363,368,377,380,385,386,392,393,394,395,397,403,404,432,433,435,437,438],"symbol_label":[43,235,236,247,248,255,256,260,261,262,434],"symbol_map":[9,202,203,216,235,247,255,258,260,261,321,385,434,438],"symbol_r":[394,395],"symmetr":[5,32,36,90,303,304,313,409,410,418,437],"symmetri":156,"synchron":437,"synthes":438,"synthesi":[300,437,438],"system":[62,84,197,285,319,325,332,352,389,404,414,421,423,433,437],"t":[9,19,67,69,74,96,125,126,137,139,150,158,159,169,218,220,224,280,300,305,307,322,323,326,327,328,330,331,335,338,343,349,353,354,355,367,386,391,392,395,397,398,402,406,407,408,411,420,427,438],"t_":[6,75,77,81,125,140,151,153,158,322,323,327,392,395,397,435],"t_0":[125,158],"t_1":[125,158],"t_c":[306,307,343,345],"t_lock":433,"tabul":[101,102],"tail":365,"take":[75,77,81,420],"taken":[247,255,261,263],"tap":[3,19,62,64,84,85,88,108,124,125,126,137,138,139,141,147,149,150,152,156,158,159,169,170,171,175,176,188,197,198,200,237,263,265,271,273,274,277,285,287,300,389,428,429],"target":[2,401],"tau":324,"tau_":[9,62,84,88,108,119,156,197,237,263,285,375],"tau_g":[9,62,84,88,108,115,156,197,237,263,285,370],"tdoa":[4,406,437,438],"tdoa_crlb":[4,394,406,438],"techniqu":[343,345],"ted":[74,220],"ten":[344,347],"term":[308,322,323,406,411],"test":[96,280,421,422,437,438],"test_psk":423,"testpath":423,"text":[6,24,32,64,85,90,96,198,261,280,287,291,292,293,294,299,301,304,305,306,307,309,310,321,322,323,325,326,328,338,340,347,348,352,353,357,359,360,391,394,395,396,398,399,400,406,411],"textcoord":[294,400],"textrm":[67,78],"th":[139,149,191,195,196,366],"than":[43,83,136,168,235,236,248,256,260,262,291,294,308,322,323,328,333,337,349,361,363,385,393,400,401,406,411,424,431],"thei":[305,332,342,414,439],"them":[188,439],"theme":420,"theorem":289,"theoret":[99,257,259,291,349,354,355,361,362,380,381,401,407,408,424,431,434,437,438],"theori":[88,96,97,98,100,188,280,281,282,284,291,424,431],"therefor":[247,255,261,328,344,346,347,348,394,435],"theta":[5,239,241,244,358],"theta_":[80,227,230,249,250],"theta_0":433,"thi":[24,28,32,36,43,46,58,61,67,84,95,103,104,105,107,108,136,141,152,168,171,197,198,203,206,207,216,227,235,240,247,248,256,260,261,262,285,287,289,290,291,293,298,300,301,303,305,307,308,313,314,321,322,323,325,330,331,332,344,346,347,348,349,351,353,354,355,361,363,366,368,374,378,382,383,386,394,395,398,399,401,405,406,407,408,411,413,414,420,422,423,424,427,429,431,433,434,435,437,438],"think":325,"thought":[327,439],"three":[289,427,435],"threshold":[2,96,98,100,280,282,284,330,331,353,354,355,365,401,407,408,424,431,437,438],"threshold_factor":[2,408,438],"through":[24,27,32,35,56,57,62,84,88,90,94,108,113,125,127,141,152,156,197,237,247,261,263,285,298,303,313,326,418,428,429,433],"thu":367,"tild":[42,46,202,206,207,227,230,235,247,249,250,255,261],"time":[2,3,6,10,40,41,67,74,75,77,78,79,80,81,88,95,108,136,139,150,168,171,188,200,218,220,227,237,247,249,255,261,292,293,305,306,307,309,313,314,317,319,320,322,323,326,327,332,334,337,343,345,349,350,357,359,360,364,366,367,369,374,378,382,386,390,392,394,395,396,397,398,404,406,409,410,411,413,414,418,424,427,428,429,431,435,437,438],"time_bandwidth":[2,8,306,327],"time_domain":[9,10,84,88,139,150,188,197,200,235,237,239,247,255,261,285,293,305,314,326,328,332,339,350,386,395,398,402,409,410,413,414,424,427,431,432,433,434,435,438],"titl":[10,24,32,62,84,88,139,150,188,197,227,239,249,257,259,285,289,290,291,293,294,299,301,304,305,306,307,308,314,321,322,323,325,326,330,331,337,343,344,345,346,347,348,349,350,351,353,354,355,361,362,365,380,381,383,386,398,399,400,401,402,405,406,407,408,409,410,411,413,416,424,427,431,432,433,434,435,437],"titleweight":387,"tmp":433,"to_complex_baseband":[3,409,438],"to_complex_bb":438,"to_fibonacci_lfsr":[158,170],"to_galois_lfsr":[125,138],"to_real_passband":[3,410,438],"to_real_pb":438,"toa":[4,411,437,438],"toa_crlb":[4,394,411,438],"toml":[421,422,423],"tom\u00e1\u0161":301,"tone":[62,366,367],"too":421,"tool":[421,423,437],"toolbox":437,"top":[62,84,197,263,265,269,272,285],"total":[101,325,327,333,392,393,397,435],"toward":305,"track":218,"trail":421,"trajectori":235,"transfer":[67,76,108,171,172,200,218,327,392,397,428,429,433],"transform":[9,62,351,366,367,437,438],"transient":368,"transit":[32,36,39,90,91,95,247,261,303,304,313,414],"translat":438,"transmit":[42,55,103,202,217,227,230,235,247,249,250,255,261,305,321,368,395],"transmitt":[305,325],"trapezoid":[188,189,438],"tree":[9,377,437,438],"trend":[374,382],"true":[19,84,97,98,99,100,114,129,130,150,161,162,177,197,227,232,233,235,247,249,252,253,255,257,259,261,281,282,283,284,285,289,290,291,292,298,300,303,313,317,328,330,331,332,338,344,346,347,348,349,350,351,353,354,355,359,360,361,363,365,366,367,368,376,378,385,386,387,390,396,402,405,407,408,414,424,431,433,434],"truncat":88,"tupl":[5,62,84,88,89,96,99,101,103,106,108,114,115,119,150,153,156,171,177,188,197,200,202,206,207,227,232,233,235,237,239,240,246,247,249,252,253,255,261,263,280,283,285,292,295,296,297,317,320,328,332,334,336,339,341,342,357,358,359,363,366,367,369,370,371,372,374,375,376,382,383,384,385,386,388,391,414,417],"turn":325,"twice":307,"two":[4,6,7,9,10,200,237,247,255,261,289,290,295,296,307,308,320,328,334,338,342,344,346,348,351,364,366,369,370,372,374,375,376,382,391,405,416,417,424,427,428,429,431,438],"tx":[305,427],"tx_filter":[42,55,202,217,235,247,255,261],"tx_mf":434,"tx_sampl":[235,247,255,261,368],"txt":[420,421,422,423],"ty":427,"type":[43,62,64,84,85,88,108,115,119,125,131,136,150,153,156,158,163,168,197,198,203,236,237,248,256,262,263,285,287,300,310,321,330,331,340,349,353,354,355,356,366,367,371,374,379,382,384,407,408,412,421,433,438],"typealiasforwardref":[43,62,64,84,85,88,108,115,119,150,153,156,197,198,203,236,237,248,256,262,263,285,287],"u":[122,185,328,384,416,417,428,429,437],"ub":301,"uint8":[235,247,255,261,356,412],"unaffect":[132,164],"unalias":314,"unambigu":[227,249],"uncod":312,"under":[2,9,96,280,330,331,365,408,424,431],"underdamp":[74,83,220,221],"underli":[218,222],"understand":429,"uniform":[332,414],"uniformli":386,"uniniti":300,"uninstal":421,"unit":[1,122,185,218,236,239,248,256,262,293,294,301,310,311,312,330,331,340,355,384,386,407,422,428,429,433,437,438],"unitless":[305,306],"unknown":[424,431],"unpack":[7,101,103,335,412,434,437,438],"unread":383,"unsign":356,"unstabl":429,"unsupport":438,"unwindow":307,"unwrap":[326,376,433],"up":[325,421],"up006":421,"updat":[420,438],"upgrad":438,"upon":422,"upper":[301,353,354],"upsampl":[3,197,285,413,438],"url":437,"us":[3,9,10,17,19,22,24,29,30,32,37,38,43,62,64,66,84,85,86,87,88,89,90,108,110,113,114,120,139,141,150,152,156,171,172,174,177,183,188,189,197,198,199,200,201,203,206,207,218,222,227,232,233,237,238,247,248,249,252,253,255,256,261,262,263,265,269,272,276,285,287,288,289,290,291,294,295,296,299,300,301,304,321,324,325,328,332,335,336,339,341,342,343,344,345,346,347,348,349,351,352,353,356,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,398,401,405,412,414,420,421,422,423,428,429,431,433,434,435,437,438,439],"use_styl":[9,387,424,427,428,429,431,432,433,434,435],"user":[103,104,105,107,428,429],"usual":139,"v":[19,84,125,158,239,263,305,310,328,340,420],"v0":421,"v2":[421,438],"v_":[309,310,340,360,396],"valid":[109,325,342,364,368,377,378],"valu":[12,13,14,42,43,44,53,96,139,141,150,152,191,202,203,204,214,235,236,247,248,255,256,257,259,261,262,278,279,289,290,297,300,310,311,312,322,323,327,328,332,337,338,339,340,342,344,346,347,348,351,353,363,365,370,372,374,375,376,382,385,391,398,405,406,411,414,421,429,438],"vari":[150,240,326,438],"variabl":[239,240,278,289,290,335,344,346,347,348,351,405,433,437,438],"varianc":[67,80,96,98,100,282,284,289,293,330,331,349,353,354,355,365,407,408,424,431],"variou":[99,139,156,291,306,307,343,345,353,354,361,398,399,421,435],"vector":[6,19,20,101,114,125,126,128,132,134,135,158,159,160,164,166,167,177,321,437,438],"veloc":305,"veri":[227,342,394,395,437],"verif":438,"verifi":328,"version":[366,367,420,422,437,438],"vertic":337,"vi":300,"view":[134,150,166,421,437],"vmax":382,"vmin":382,"voltag":[310,340,360,396,424,431,437],"vsat":325,"vscode":[421,423],"w":[96,280,293,301,351,421,424,427,428,429,431,432,433,434,435],"w_1":[424,431],"w_pad":387,"wa":[106,141,152,294,308,322,323,325,395,406,411,437],"wai":[197,422],"walsh":[332,414,417,437,438],"walsh_cod":[332,414,417,438],"walshcod":414,"warn":[421,438],"wave":[5,150,235,415],"wavelength":[5,415,438],"we":[289,290,344,346,347,348,351,358,368,405,424,431,437],"weak":[12,14],"web":420,"webpag":420,"webserv":420,"welch":[9,374,382],"well":[307,325],"were":[257,259,308,322,323,406,411],"what":325,"whatev":106,"when":[10,17,24,32,62,64,84,85,87,88,108,113,116,120,122,142,150,154,156,171,179,183,185,188,197,198,200,201,237,263,276,285,287,293,294,298,299,301,303,304,308,319,332,353,366,369,370,371,372,375,376,383,384,399,400,404,414,416,424,427,428,429,431],"where":[63,74,90,95,109,139,140,149,154,203,220,256,262,264,280,286,289,293,294,301,307,313,315,316,318,322,323,327,328,344,346,347,348,366,367,394,395,403,406,411,416,428,429,437],"wherev":422,"whether":[10,12,18,62,64,84,85,88,89,97,98,99,100,108,110,123,139,141,148,150,152,156,171,172,174,186,188,189,197,198,200,201,237,238,257,259,263,265,281,282,283,284,285,287,292,317,328,330,331,349,350,353,354,355,359,360,363,365,366,367,368,376,378,386,390,396,402,407,408],"which":[20,126,128,134,139,140,141,150,152,159,160,166,235,247,261,292,293,294,305,317,320,322,323,326,334,337,339,342,351,357,358,359,363,368,370,372,374,375,376,381,382,385,387,398,406,411,424,431,435],"while":[150,337,435],"white":[5,293,294,301,418,424,431,437,438],"whitespac":421,"whole":[114,177,435],"whose":[43,203,236,248,255,256,262,342,366],"why":325,"wide":291,"widen":366,"wider":[327,366],"widget":[424,427,428,429,431,432,433,434,435],"width":[7,156,324,335,367],"wiki":[19,309,339,342,357,416],"wikipedia":[19,309,339,342,357,416],"win":88,"window":[3,84,88,89,114,197,285,295,296,324,336,341,352,366,367,374,382,438],"wireless":[56,418],"within":[401,435],"without":[247,255,261,305,322,323,406,411,438],"work":10,"worn":435,"wors":434,"worst":[156,307],"wrap":[9,62,383],"wrapper":[108,171,383],"wrong":421,"www":[291,295,296,324,327,332,336,341,352,401,414],"x":[1,3,6,7,8,9,10,11,19,20,21,23,24,25,27,32,33,35,40,42,46,48,56,57,62,63,67,84,88,90,92,94,95,96,101,103,108,109,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,150,151,153,156,158,159,160,161,162,163,164,166,167,168,169,170,171,173,188,189,190,193,194,197,200,202,207,209,218,219,235,237,247,255,261,263,264,265,269,278,279,280,285,286,289,290,292,293,297,298,300,301,303,305,306,307,309,310,311,312,313,314,317,320,321,322,323,326,330,331,334,337,338,340,342,344,346,347,348,349,350,351,353,354,355,356,357,359,360,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,382,383,385,386,390,391,394,395,396,398,402,405,407,408,412,413,417,418,422,424,431,432,433,434,438,439],"x1":[314,328,332,339,414],"x1_h0":[424,431],"x1_h0_real_theori":[424,431],"x1_h1":[424,431],"x1_h1_real_theori":[424,431],"x2":[314,328,332,339,414],"x2_h0":[424,431],"x2_h0_real_theori":[424,431],"x2_h1":[424,431],"x2_h1_real_theori":[424,431],"x3":[314,328,332,339,414,416],"x5":416,"x_":[310,340,344,347],"x_1":[289,344,347],"x_2":[289,344,347],"x_3":[289,344,347,416],"x_4":289,"x_5":416,"x_axi":[366,369,370,372,374,375,376,428,429,432,433,438],"x_bb_0p1":432,"x_bb_0p5":432,"x_bb_0p9":432,"x_bb_rect":432,"x_c":[3,409,410],"x_h0":[330,331,424,431],"x_h1":[330,331,424,431],"x_hat":[6,9,101,103,321,363,434],"x_i":[7,24,27,32,35,90,94,95,289,294,298,299,301,303,304,313,337,344,347],"x_label":373,"x_n":[289,344,347],"x_pb_0p1":432,"x_pb_0p5":432,"x_pb_0p9":432,"x_pb_rect":432,"x_q":337,"x_r":[3,409,410],"x_rect":[394,395],"x_srrc":[394,395],"x_srrc_env":395,"x_tild":[42,46,207],"x_u":416,"xdist":422,"xlabel":[24,32,139,150,227,249,289,290,291,294,299,301,304,306,307,308,321,322,323,325,343,344,345,346,347,348,349,351,353,398,399,400,405,406,408,411,424,431,432,433,435],"xlim":[150,305,308,314,322,323,330,331,346,348,405,406,411,413,432,433,435],"xor":328,"xtick":62,"xx":[9,19,374],"xytext":[294,400],"y":[6,7,8,9,10,11,19,21,23,24,26,27,32,34,35,40,57,62,84,88,90,93,94,95,108,109,113,125,127,139,140,150,151,153,158,171,173,188,190,193,194,197,200,218,219,239,240,246,263,264,265,272,285,286,290,293,298,300,301,303,305,306,311,312,313,314,320,326,334,337,342,346,348,350,351,363,364,366,367,372,374,382,383,385,398,405,413,417,433,434],"y1":[84,197,285,337],"y2":[84,197,285,337],"y2_h0":424,"y2_h0_real_theori":424,"y2_h1":424,"y2_h1_real_theori":424,"y3":[84,197,285],"y4":[84,197,285],"y5":[84,197,285],"y_":[125,158,300],"y_1":[84,197,285,337],"y_2":[84,197,285,337,424],"y_3":[84,197,285],"y_4":[84,197,285],"y_5":[84,197,285],"y_axi":[88,364,366,367,372,374,382,438],"y_back":188,"y_fir":[200,237],"y_forw":188,"y_i":[24,27,32,35,62,63,90,94,263,294,298,299,301,303,304,313],"y_iir":[200,237],"y_j":[95,313],"y_prev":[8,311,312],"y_t":[125,158,300],"y_trap":188,"yaml":421,"yang":301,"year":437,"yi":150,"yield":[344,346,347,348,391],"ylabel":[24,32,227,249,289,290,291,294,299,301,304,306,307,308,321,322,323,325,326,343,344,345,346,347,348,349,351,353,398,399,400,405,406,408,411,424,431,432,433,435],"ylim":[10,156,200,237,295,296,307,308,314,322,323,324,328,330,331,332,336,339,341,342,343,345,353,381,406,411,413,414,416,428,433,434,435],"you":[325,421,422,423,433,437],"your":[421,423,433,437],"z":[10,67,108,171,188,200,218,239,289,290,300,305,311,312,344,346,347,348,351,405,416,428,429,433],"z1_h0":[424,431],"z1_h0_theori":[424,431],"z1_h1":[424,431],"z1_h1_theori":[424,431],"z2_h0":[424,431],"z2_h0_theori":[424,431],"z2_h1":[424,431],"z2_h1_theori":[424,431],"z_":289,"z_0":139,"z_1":[139,424,431],"z_2":[139,424,431],"z_h0":[330,331],"z_h1":[330,331],"z_m":139,"zadoff":[416,417,437,438],"zadoff_chu":438,"zadoff_chu_sequ":[416,417,438],"zero":[3,9,62,84,88,108,113,139,150,156,157,171,172,177,187,188,197,198,200,218,237,240,263,285,287,307,324,332,333,342,356,364,366,369,370,371,372,375,376,384,388,393,408,409,413,414,428,432,433,435,437,438],"zeros_pol":[9,388,429,438],"zerospol":[171,172,177,188,200,369,370,371,372,375,376,384,388,429],"zeta":[67,74,83,218,220,221],"zoh":[197,198,199,285,287,288],"zorder":[293,398],"\u03b1":200,"\u03bc":[307,322,323]},"titles":["Coding","Conversions","Detection","Digital signal processing","Estimation","Link budgets","Measurement","Miscellaneous","Modulation","Plotting","sdr.AGC","sdr.AGC.__call__","sdr.AGC.__init__","sdr.AGC.attack","sdr.AGC.decay","sdr.AGC.gain","sdr.AGC.reference","sdr.AGC.reset","sdr.AGC.streaming","sdr.AdditiveScrambler","sdr.AdditiveScrambler.__init__","sdr.AdditiveScrambler.descramble","sdr.AdditiveScrambler.lfsr","sdr.AdditiveScrambler.scramble","sdr.BinaryErasureChannel","sdr.BinaryErasureChannel.X","sdr.BinaryErasureChannel.Y","sdr.BinaryErasureChannel.__call__","sdr.BinaryErasureChannel.__init__","sdr.BinaryErasureChannel.capacities","sdr.BinaryErasureChannel.capacity","sdr.BinaryErasureChannel.p","sdr.BinarySymmetricChannel","sdr.BinarySymmetricChannel.X","sdr.BinarySymmetricChannel.Y","sdr.BinarySymmetricChannel.__call__","sdr.BinarySymmetricChannel.__init__","sdr.BinarySymmetricChannel.capacities","sdr.BinarySymmetricChannel.capacity","sdr.BinarySymmetricChannel.p","sdr.BlockInterleaver","sdr.BlockInterleaver.__init__","sdr.CPM","sdr.CPM.__init__","sdr.CPM.ber","sdr.CPM.bps","sdr.CPM.demodulate","sdr.CPM.index","sdr.CPM.modulate","sdr.CPM.order","sdr.CPM.phase_offset","sdr.CPM.pulse_shape","sdr.CPM.rx_filter","sdr.CPM.ser","sdr.CPM.sps","sdr.CPM.tx_filter","sdr.Channel","sdr.Channel.__call__","sdr.Channel.__init__","sdr.Channel.capacities","sdr.Channel.capacity","sdr.Channel.reset","sdr.Channelizer","sdr.Channelizer.__call__","sdr.Channelizer.__init__","sdr.Channelizer.channels","sdr.Channelizer.method","sdr.ClosedLoopPLL","sdr.ClosedLoopPLL.Bn","sdr.ClosedLoopPLL.BnT","sdr.ClosedLoopPLL.K0","sdr.ClosedLoopPLL.K1","sdr.ClosedLoopPLL.K2","sdr.ClosedLoopPLL.Kp","sdr.ClosedLoopPLL.__init__","sdr.ClosedLoopPLL.frequency_lock_time","sdr.ClosedLoopPLL.iir","sdr.ClosedLoopPLL.lock_time","sdr.ClosedLoopPLL.omega_3dB","sdr.ClosedLoopPLL.omega_n","sdr.ClosedLoopPLL.phase_error_variance","sdr.ClosedLoopPLL.phase_lock_time","sdr.ClosedLoopPLL.sample_rate","sdr.ClosedLoopPLL.zeta","sdr.Decimator","sdr.Decimator.__init__","sdr.Decimator.method","sdr.Decimator.reset","sdr.Differentiator","sdr.Differentiator.__init__","sdr.DiscreteMemorylessChannel","sdr.DiscreteMemorylessChannel.P","sdr.DiscreteMemorylessChannel.X","sdr.DiscreteMemorylessChannel.Y","sdr.DiscreteMemorylessChannel.__call__","sdr.DiscreteMemorylessChannel.__init__","sdr.EnergyDetector","sdr.EnergyDetector.p_d","sdr.EnergyDetector.p_fa","sdr.EnergyDetector.roc","sdr.EnergyDetector.threshold","sdr.ErrorRate","sdr.ErrorRate.__init__","sdr.ErrorRate.add","sdr.ErrorRate.counts","sdr.ErrorRate.error_rate","sdr.ErrorRate.error_rates","sdr.ErrorRate.errors","sdr.FIR","sdr.FIR.__call__","sdr.FIR.__init__","sdr.FIR.__len__","sdr.FIR.delay","sdr.FIR.flush","sdr.FIR.frequency_response","sdr.FIR.group_delay","sdr.FIR.impulse_response","sdr.FIR.noise_bandwidth","sdr.FIR.order","sdr.FIR.phase_delay","sdr.FIR.reset","sdr.FIR.state","sdr.FIR.step_response","sdr.FIR.streaming","sdr.FIR.taps","sdr.FLFSR","sdr.FLFSR.Taps","sdr.FLFSR.__call__","sdr.FLFSR.__init__","sdr.FLFSR.characteristic_poly","sdr.FLFSR.feedback_poly","sdr.FLFSR.field","sdr.FLFSR.initial_state","sdr.FLFSR.order","sdr.FLFSR.reset","sdr.FLFSR.state","sdr.FLFSR.step","sdr.FLFSR.taps","sdr.FLFSR.to_galois_lfsr","sdr.FarrowFractionalDelay","sdr.FarrowFractionalDelay.__call__","sdr.FarrowFractionalDelay.__init__","sdr.FarrowFractionalDelay.delay","sdr.FarrowFractionalDelay.lagrange_polys","sdr.FarrowFractionalDelay.lookahead","sdr.FarrowFractionalDelay.order","sdr.FarrowFractionalDelay.reset","sdr.FarrowFractionalDelay.state","sdr.FarrowFractionalDelay.streaming","sdr.FarrowFractionalDelay.taps","sdr.FarrowResampler","sdr.FarrowResampler.__call__","sdr.FarrowResampler.__init__","sdr.FarrowResampler.clock_outputs","sdr.FarrowResampler.delay","sdr.FarrowResampler.reset","sdr.FractionalDelay","sdr.FractionalDelay.__init__","sdr.GLFSR","sdr.GLFSR.Taps","sdr.GLFSR.__init__","sdr.GLFSR.characteristic_poly","sdr.GLFSR.feedback_poly","sdr.GLFSR.field","sdr.GLFSR.initial_state","sdr.GLFSR.order","sdr.GLFSR.reset","sdr.GLFSR.state","sdr.GLFSR.step","sdr.GLFSR.taps","sdr.GLFSR.to_fibonacci_lfsr","sdr.IIR","sdr.IIR.ZerosPoles","sdr.IIR.__call__","sdr.IIR.__init__","sdr.IIR.a_taps","sdr.IIR.b_taps","sdr.IIR.frequency_response","sdr.IIR.gain","sdr.IIR.impulse_response","sdr.IIR.noise_bandwidth","sdr.IIR.order","sdr.IIR.poles","sdr.IIR.reset","sdr.IIR.state","sdr.IIR.step_response","sdr.IIR.streaming","sdr.IIR.zeros","sdr.Integrator","sdr.Integrator.__init__","sdr.Interleaver","sdr.Interleaver.__init__","sdr.Interleaver.__len__","sdr.Interleaver.deinterleave","sdr.Interleaver.interleave","sdr.Interleaver.inverse_map","sdr.Interleaver.map","sdr.Interpolator","sdr.Interpolator.__init__","sdr.Interpolator.method","sdr.LeakyIntegrator","sdr.LeakyIntegrator.__init__","sdr.LinearModulation","sdr.LinearModulation.__init__","sdr.LinearModulation.ber","sdr.LinearModulation.bps","sdr.LinearModulation.decide_symbols","sdr.LinearModulation.demodulate","sdr.LinearModulation.map_symbols","sdr.LinearModulation.modulate","sdr.LinearModulation.order","sdr.LinearModulation.phase_offset","sdr.LinearModulation.pulse_shape","sdr.LinearModulation.rx_filter","sdr.LinearModulation.ser","sdr.LinearModulation.sps","sdr.LinearModulation.symbol_map","sdr.LinearModulation.tx_filter","sdr.LoopFilter","sdr.LoopFilter.__call__","sdr.LoopFilter.__init__","sdr.LoopFilter.damping_factor","sdr.LoopFilter.iir","sdr.LoopFilter.integral_gain","sdr.LoopFilter.noise_bandwidth","sdr.LoopFilter.proportional_gain","sdr.LoopFilter.reset","sdr.MLPED","sdr.MLPED.A_received","sdr.MLPED.A_reference","sdr.MLPED.__call__","sdr.MLPED.__init__","sdr.MLPED.data_aided_error","sdr.MLPED.decision_directed_error","sdr.MLPED.gain","sdr.MSK","sdr.MSK.__init__","sdr.MovingAverager","sdr.MovingAverager.__init__","sdr.NCO","sdr.NCO.__call__","sdr.NCO.__init__","sdr.NCO.gain","sdr.NCO.increment","sdr.NCO.offset","sdr.NCO.reset","sdr.NCO.step","sdr.OQPSK","sdr.OQPSK.__init__","sdr.PED","sdr.PED.__call__","sdr.PED.__init__","sdr.PED.data_aided_error","sdr.PED.decision_directed_error","sdr.PED.gain","sdr.PSK","sdr.PSK.__init__","sdr.PSK.ber","sdr.PSK.phase_offset","sdr.PSK.ser","sdr.PSK.symbol_map","sdr.PiMPSK","sdr.PiMPSK.__init__","sdr.PolyphaseFIR","sdr.PolyphaseFIR.__call__","sdr.PolyphaseFIR.__init__","sdr.PolyphaseFIR.branches","sdr.PolyphaseFIR.decimation","sdr.PolyphaseFIR.delay","sdr.PolyphaseFIR.input","sdr.PolyphaseFIR.interpolation","sdr.PolyphaseFIR.order","sdr.PolyphaseFIR.output","sdr.PolyphaseFIR.polyphase_order","sdr.PolyphaseFIR.polyphase_taps","sdr.PolyphaseFIR.rate","sdr.PolyphaseFIR.reset","sdr.PolyphaseFIR.taps","sdr.Q","sdr.Qinv","sdr.ReplicaCorrelator","sdr.ReplicaCorrelator.p_d","sdr.ReplicaCorrelator.p_fa","sdr.ReplicaCorrelator.roc","sdr.ReplicaCorrelator.threshold","sdr.Resampler","sdr.Resampler.__call__","sdr.Resampler.__init__","sdr.Resampler.method","sdr.add_iid_rvs","sdr.add_rvs","sdr.albersheim","sdr.average_power","sdr.awgn","sdr.awgn_capacity","sdr.bandpass_fir","sdr.bandstop_fir","sdr.barker_code","sdr.bec","sdr.bec_capacity","sdr.berlekamp_massey","sdr.biawgn_capacity","sdr.binary_code","sdr.bsc","sdr.bsc_capacity","sdr.clock_error","sdr.coherent_gain","sdr.coherent_gain_loss","sdr.composite_snr","sdr.crest_factor","sdr.db","sdr.diff_decode","sdr.diff_encode","sdr.dmc","sdr.downsample","sdr.ebn0_to_esn0","sdr.ebn0_to_snr","sdr.energy","sdr.esn0_to_ebn0","sdr.esn0_to_snr","sdr.euclidean","sdr.evm","sdr.fdoa_crlb","sdr.foa_crlb","sdr.fractional_delay_fir","sdr.free_space_path_loss","sdr.frequency_offset","sdr.gaussian","sdr.gold_code","sdr.gray_code","sdr.h0","sdr.h1","sdr.hadamard_code","sdr.half_sine","sdr.hamming","sdr.hexdump","sdr.highpass_fir","sdr.iq_imbalance","sdr.is_preferred_pair","sdr.kasami_code","sdr.linear","sdr.lowpass_fir","sdr.m_sequence","sdr.max_frequency_offset","sdr.max_iid_rvs","sdr.max_integration_time","sdr.max_rvs","sdr.min_iid_rvs","sdr.min_rvs","sdr.min_snr","sdr.mix","sdr.multiply_rvs","sdr.multirate_fir","sdr.non_coherent_gain","sdr.p_d","sdr.p_fa","sdr.pack","sdr.papr","sdr.parabolic_antenna","sdr.peak_power","sdr.peak_voltage","sdr.peebles","sdr.plot.ber","sdr.plot.constellation","sdr.plot.correlation","sdr.plot.detector_pdfs","sdr.plot.dft","sdr.plot.dtft","sdr.plot.eye","sdr.plot.filter","sdr.plot.group_delay","sdr.plot.impulse_response","sdr.plot.magnitude_response","sdr.plot.p_d","sdr.plot.periodogram","sdr.plot.phase_delay","sdr.plot.phase_response","sdr.plot.phase_tree","sdr.plot.raster","sdr.plot.roc","sdr.plot.ser","sdr.plot.shannon_limit_ebn0","sdr.plot.spectrogram","sdr.plot.stem","sdr.plot.step_response","sdr.plot.symbol_map","sdr.plot.time_domain","sdr.plot.use_style","sdr.plot.zeros_poles","sdr.polyphase_decompose","sdr.power","sdr.preferred_pairs","sdr.raised_cosine","sdr.rectangular","sdr.rms_bandwidth","sdr.rms_integration_time","sdr.rms_voltage","sdr.root_raised_cosine","sdr.sample_rate_offset","sdr.shannon_limit_ebn0","sdr.shannon_limit_snr","sdr.shnidman","sdr.sinusoid","sdr.snr_to_ebn0","sdr.snr_to_esn0","sdr.subtract_rvs","sdr.tdoa_crlb","sdr.threshold","sdr.threshold_factor","sdr.to_complex_baseband","sdr.to_real_passband","sdr.toa_crlb","sdr.unpack","sdr.upsample","sdr.walsh_code","sdr.wavelength","sdr.zadoff_chu_sequence","Sequences","Simulation","Synchronization","Documentation","Formatting","Installation","Unit Tests","Coherent integration","Detection","Digital signal processing","Farrow arbitrary resampler","FIR filters","IIR filters","Modulation","Non-coherent integration","Peak-to-average power","Phase-locked loops","Phase-shift keying","Pulse shapes","Synchronization","sdr","v0.0","Versioning"],"titleterms":{"":[428,429],"0":438,"1":438,"10":438,"11":438,"12":438,"13":438,"14":438,"15":438,"16":[434,438],"17":438,"18":438,"19":438,"2":438,"20":438,"21":438,"22":438,"23":438,"24":438,"25":438,"26":438,"27":438,"28":438,"29":438,"3":438,"4":438,"5":438,"6":438,"7":438,"8":[434,438],"9":438,"across":[432,433],"alpha":439,"also":[20,43,44,53,101,103,114,115,116,119,122,125,128,158,160,177,179,185,203,204,214,236,248,256,257,259,262,278,279,291,309,322,323,328,330,331,338,349,353,357,361,365,366,367,391,394,395,399,400,401,406,411,413],"amplitud":419,"an":[427,428,429],"analysi":9,"analyz":[428,429,433],"antenna":5,"applic":3,"approxim":2,"arbitrari":[3,427],"averag":432,"b_n":433,"bandwidth":432,"beta":439,"bit":434,"bpsk":434,"budget":5,"build":420,"capac":5,"chang":438,"channel":[5,418],"citat":437,"close":433,"code":[0,421,423],"coher":[2,424,431],"command":423,"commit":421,"compar":433,"configur":[421,423],"constel":434,"construct":427,"constructor":[10,19,24,32,40,42,56,62,67,84,88,90,101,108,125,139,150,156,158,171,188,190,197,200,202,218,227,235,237,239,247,249,255,261,263,285],"continu":8,"contributor":438,"control":419,"convers":1,"correl":[3,417],"cosin":435,"creat":[428,429],"curv":434,"data":7,"decibel":1,"delai":[428,429],"depend":422,"design":433,"detect":[2,9,424,425,431],"detector":[2,419],"dev":422,"digit":[3,426,429],"distanc":6,"doc":420,"document":420,"domain":[4,9,432,433],"downsampl":427,"edit":422,"encod":8,"energi":6,"error":[419,434],"estim":[4,9],"examin":[428,429,432],"excess":432,"farrow":427,"featur":437,"filter":[3,9,428,429,433],"fir":[3,428],"folder":422,"format":421,"formatt":421,"frac":427,"frequenc":[4,9,428,429,432,433],"from":[421,422,423],"fulli":[428,429],"gaussian":435,"github":422,"group":[428,429],"h":[428,429],"iid":7,"iir":[3,429],"impair":418,"implement":433,"impuls":[428,429],"independ":7,"input":427,"instal":[420,421,422,423,437],"integ":427,"integr":[2,424,431,433],"interleav":0,"irrat":427,"kei":434,"length":417,"line":423,"linear":[8,417],"link":5,"linter":421,"local":422,"lock":[419,433],"loop":[419,433],"loss":5,"manipul":[3,7],"map":[417,434],"maximum":417,"measur":6,"method":[10,19,24,32,40,42,56,62,67,84,88,90,96,101,108,125,139,150,156,158,171,188,190,197,200,202,218,227,235,237,239,247,249,255,261,263,280,285],"miscellan":7,"mode":[10,62,84,88,108,139,150,156,171,188,197,200,237,263,285],"model":418,"modul":[6,8,9,430],"n":[424,427,428,429,431],"nois":[1,4],"nomenclatur":[42,202,235,247,255,261],"non":[2,431],"note":[20,67,128,160,301,305,308,322,323,325,374,382,394,395,406,411],"omega":[428,429],"onli":[10,62,84,88,108,139,150,156,171,188,197,200,237,263,285],"orthogon":8,"path":5,"peak":432,"perform":[2,433],"phase":[8,419,433,434],"pll":433,"plot":[9,432],"plu":433,"pole":429,"polynomi":[125,158],"polyphas":3,"power":[6,432],"ppi":433,"pre":421,"probabl":7,"process":[3,426],"properti":[10,19,24,32,40,42,56,62,67,84,88,90,108,125,139,150,156,158,171,188,190,197,200,202,218,227,235,237,239,247,249,255,261,263,285],"proport":433,"psk":434,"puls":[8,432,435],"pypi":422,"qpsk":[432,434],"r":427,"rais":435,"random":7,"rate":[427,434],"ratio":[1,4],"recurr":417,"releas":439,"resampl":[3,427],"respons":[428,429,433],"root":435,"run":[421,423],"scrambler":0,"sdr":437,"see":[20,43,44,53,101,103,114,115,116,119,122,125,128,158,160,177,179,185,203,204,214,236,248,256,257,259,262,278,279,291,309,322,323,328,330,331,338,349,353,357,361,365,366,367,391,394,395,399,400,401,406,411,413],"sequenc":417,"serv":420,"shape":[8,432,435],"shift":434,"signal":[1,3,4,418,426,427,432],"simul":418,"special":[10,24,32,40,56,62,84,88,90,108,125,139,150,156,171,188,190,197,200,218,227,237,239,249,263,285],"spectral":9,"squar":435,"stabil":429,"state":[125,158],"step":[428,429,433],"stream":[10,62,84,88,108,139,150,156,171,188,197,200,237,263,285],"symbol":[8,417,434],"synchron":[419,436],"t":433,"t_":427,"tau_g":[428,429],"test":423,"theoret":2,"time":[4,9,432,433],"unit":423,"upsampl":427,"util":9,"v":[421,423],"v0":438,"variabl":[7,42,202,235,247,255,261],"variou":432,"version":439,"voltag":6,"warn":[314,322,323,406,411,413],"x":427,"x_1":[424,431],"x_2":[424,431],"y":427,"zero":429,"zeta":433}})