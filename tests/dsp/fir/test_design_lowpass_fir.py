import numpy as np
import pytest

import sdr

from .helper import verify_impulse_response


def test_exceptions():
    with pytest.raises(TypeError):
        sdr.design_lowpass_fir("30", 0.2)
    with pytest.raises(ValueError):
        sdr.design_lowpass_fir(29, 0.2)

    with pytest.raises(TypeError):
        sdr.design_lowpass_fir(30, "0.2")
    with pytest.raises(ValueError):
        sdr.design_lowpass_fir(30, -0.1)

    with pytest.raises(ValueError):
        sdr.design_lowpass_fir(30, 0.2, window="invalid")
    with pytest.raises(ValueError):
        sdr.design_lowpass_fir(30, 0.2, window=np.ones(10))


def test_custom():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.2, Window="custom", CustomWindow=ones(1, 31));
        >> transpose(h)
    """
    h = sdr.design_lowpass_fir(30, 0.2, window=None)
    h_truth = np.array(
        [
            0.000000000000000,
            0.012560859274049,
            0.021887273943570,
            0.023711213438867,
            0.015986548166971,
            -0.000000000000000,
            -0.019539114426298,
            -0.035566820158301,
            -0.040647794466630,
            -0.029308671639447,
            0.000000000000000,
            0.043963007459170,
            0.094844853755470,
            0.142267280633204,
            0.175852029836680,
            0.187978668365389,
            0.175852029836680,
            0.142267280633204,
            0.094844853755470,
            0.043963007459170,
            0.000000000000000,
            -0.029308671639447,
            -0.040647794466630,
            -0.035566820158301,
            -0.019539114426298,
            -0.000000000000000,
            0.015986548166971,
            0.023711213438867,
            0.021887273943570,
            0.012560859274049,
            0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth)


def test_hamming():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.2, Window="hamming");
        >> transpose(h)
    """
    h = sdr.design_lowpass_fir(30, 0.2, window="hamming")
    h_truth = np.array(
        [
            0.000000000000000,
            0.001201426375883,
            0.002784327847983,
            0.004227316085447,
            0.003942763412776,
            -0.000000000000000,
            -0.008256777292656,
            -0.018583210130236,
            -0.025389820435008,
            -0.021235308698379,
            0.000000000000000,
            0.039588112570910,
            0.091888877020528,
            0.145099081031584,
            0.184902878561821,
            0.199660667298695,
            0.184902878561821,
            0.145099081031584,
            0.091888877020528,
            0.039588112570910,
            0.000000000000000,
            -0.021235308698379,
            -0.025389820435008,
            -0.018583210130236,
            -0.008256777292656,
            -0.000000000000000,
            0.003942763412776,
            0.004227316085447,
            0.002784327847983,
            0.001201426375883,
            0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth)


def test_hann():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.2, Window="hann");
        >> transpose(h)
    """
    h = sdr.design_lowpass_fir(30, 0.2, window="hann")
    h_truth = np.array(
        [
            0,
            0.000146563456126,
            0.001010384582064,
            0.002417996814430,
            0.002824350014447,
            -0.000000000000000,
            -0.007209073661923,
            -0.017006073258807,
            -0.023972930069013,
            -0.020485597750603,
            0.000000000000000,
            0.039181849825504,
            0.091614378260131,
            0.145362048493357,
            0.185743361075171,
            0.200745484438236,
            0.185743361075171,
            0.145362048493357,
            0.091614378260131,
            0.039181849825504,
            0.000000000000000,
            -0.020485597750603,
            -0.023972930069013,
            -0.017006073258807,
            -0.007209073661923,
            -0.000000000000000,
            0.002824350014447,
            0.002417996814430,
            0.001010384582064,
            0.000146563456126,
            0,
        ]
    )
    verify_impulse_response(h, h_truth)


def test_blackman():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.2, Window="blackman");
        >> transpose(h)
    """
    h = sdr.design_lowpass_fir(30, 0.2, window="blackman")
    h_truth = np.array(
        [
            -0.000000000000000,
            0.000053600973729,
            0.000390331218529,
            0.001014718222263,
            0.001311234558944,
            -0.000000000000000,
            -0.004174752152729,
            -0.010957115422248,
            -0.017044081172489,
            -0.015900533682710,
            0.000000000000000,
            0.034911707676412,
            0.085716754281500,
            0.140849797423832,
            0.183804096911169,
            0.200048482327597,
            0.183804096911169,
            0.140849797423832,
            0.085716754281500,
            0.034911707676412,
            0.000000000000000,
            -0.015900533682710,
            -0.017044081172489,
            -0.010957115422248,
            -0.004174752152729,
            -0.000000000000000,
            0.001311234558944,
            0.001014718222263,
            0.000390331218529,
            0.000053600973729,
            -0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth)


def test_blackman_harris():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.2, Window="blackman-harris");
        >> transpose(h)
    """
    h = sdr.design_lowpass_fir(30, 0.2, window="blackman-harris")
    h_truth = np.array(
        [
            0.000000000000000,
            0.000010006457551,
            0.000084072713243,
            0.000277822839386,
            0.000455422106228,
            -0.000000000000000,
            -0.002147386251992,
            -0.006569434980623,
            -0.011621769835194,
            -0.012066526998477,
            0.000000000000000,
            0.031015660608003,
            0.080327236315319,
            0.137055855239566,
            0.182902765350546,
            0.200552552872888,
            0.182902765350546,
            0.137055855239566,
            0.080327236315319,
            0.031015660608003,
            0.000000000000000,
            -0.012066526998477,
            -0.011621769835194,
            -0.006569434980623,
            -0.002147386251992,
            -0.000000000000000,
            0.000455422106228,
            0.000277822839386,
            0.000084072713243,
            0.000010006457551,
            0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth)


def test_chebyshev():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.2, Window="chebyshev");
        >> transpose(h)
    """
    h = sdr.design_lowpass_fir(30, 0.2, window="chebyshev")
    h_truth = np.array(
        [
            0.000000000000000,
            0.000464934459612,
            0.001483237657921,
            0.002642121780021,
            0.002709031898341,
            -0.000000000000000,
            -0.006434443156532,
            -0.015231503831634,
            -0.021771639298611,
            -0.018951709464571,
            0.000000000000000,
            0.037639424621441,
            0.089370430060795,
            0.143451747641803,
            0.184620365691889,
            0.200016003879049,
            0.184620365691889,
            0.143451747641803,
            0.089370430060795,
            0.037639424621441,
            0.000000000000000,
            -0.018951709464571,
            -0.021771639298611,
            -0.015231503831634,
            -0.006434443156532,
            -0.000000000000000,
            0.002709031898341,
            0.002642121780021,
            0.001483237657921,
            0.000464934459612,
            0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth)


# NOTE: Added extra Kaiser window tests to reverse engineer MATLAB's beta parameter


def test_kaiser30_0p1():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.1, Window="kaiser");
        >> transpose(h)
    """
    # MATLAB uses beta=0.5 for Kaiser window. Attenuation of 21.542 dB was reverse engineered.
    h = sdr.design_lowpass_fir(30, 0.1, "kaiser", atten=21.542)
    h_truth = np.array(
        [
            -0.019837202437853,
            -0.020377055912695,
            -0.018806829037052,
            -0.014904805991565,
            -0.008602371275295,
            0.000000000000000,
            0.010629494865521,
            0.022851255202901,
            0.036091876236986,
            0.049674643926747,
            0.062864011609752,
            0.074915977860163,
            0.085130461754661,
            0.092901533234727,
            0.097761470634874,
            0.099415078656257,
            0.097761470634874,
            0.092901533234727,
            0.085130461754661,
            0.074915977860163,
            0.062864011609752,
            0.049674643926747,
            0.036091876236986,
            0.022851255202901,
            0.010629494865521,
            0.000000000000000,
            -0.008602371275295,
            -0.014904805991565,
            -0.018806829037052,
            -0.020377055912695,
            -0.019837202437853,
        ]
    )
    verify_impulse_response(h, h_truth)


def test_kaiser_30_0p2():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.2, Window="kaiser");
        >> transpose(h)
    """
    # MATLAB uses beta=0.5 for Kaiser window. Attenuation of 21.542 dB was reverse engineered.
    h = sdr.design_lowpass_fir(30, 0.2, window="kaiser", atten=21.542)
    h_truth = np.array(
        [
            0.000000000000000,
            0.011950226321326,
            0.020979087341470,
            0.022884229846219,
            0.015526616893572,
            -0.000000000000000,
            -0.019185418679046,
            -0.035084883133250,
            -0.040260621415843,
            -0.029131943294422,
            0.000000000000000,
            0.043934849781445,
            0.094963344913279,
            0.142637216533571,
            0.176451916910291,
            0.188670755962772,
            0.176451916910291,
            0.142637216533571,
            0.094963344913279,
            0.043934849781445,
            0.000000000000000,
            -0.029131943294422,
            -0.040260621415843,
            -0.035084883133250,
            -0.019185418679046,
            -0.000000000000000,
            0.015526616893572,
            0.022884229846219,
            0.020979087341470,
            0.011950226321326,
            0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth)


def test_kaiser30_0p3():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=30, CutoffFrequency=0.3, Window="kaiser");
        >> transpose(h)
    """
    # MATLAB uses beta=0.5 for Kaiser window. Attenuation of 21.542 dB was reverse engineered.
    h = sdr.design_lowpass_fir(30, 0.3, "kaiser", atten=21.542)
    h_truth = np.array(
        [
            0.019631739746596,
            0.012463274480090,
            -0.007109166061030,
            -0.023866697598014,
            -0.022288037300150,
            0.000000000000000,
            0.027540147996734,
            0.036591150396144,
            0.013643083643573,
            -0.030382638424921,
            -0.062212901199953,
            -0.045821064584403,
            0.032180150533283,
            0.148760929955073,
            0.253291939431296,
            0.295156177971364,
            0.253291939431296,
            0.148760929955073,
            0.032180150533283,
            -0.045821064584403,
            -0.062212901199953,
            -0.030382638424921,
            0.013643083643573,
            0.036591150396144,
            0.027540147996734,
            0.000000000000000,
            -0.022288037300150,
            -0.023866697598014,
            -0.007109166061030,
            0.012463274480090,
            0.019631739746596,
        ]
    )
    verify_impulse_response(h, h_truth)


def test_kaiser_60_0p2():
    """
    MATLAB:
        >> h = designLowpassFIR(FilterOrder=60, CutoffFrequency=0.2, Window="kaiser");
        >> transpose(h)
    """
    # MATLAB uses beta=0.5 for Kaiser window. Attenuation of 21.542 dB was reverse engineered.
    h = sdr.design_lowpass_fir(60, 0.2, "kaiser", atten=21.542)
    h_truth = np.array(
        [
            -0.000000000000000,
            -0.006283179247108,
            -0.010571118410301,
            -0.011004384551196,
            -0.007088528955861,
            0.000000000000000,
            0.007732248941872,
            0.013097171982050,
            0.013734778010055,
            0.008918974713071,
            -0.000000000000000,
            -0.009911799640908,
            -0.016971338211852,
            -0.018012503465795,
            -0.011854672510536,
            0.000000000000000,
            0.013603479314519,
            0.023747450501076,
            0.025769990777325,
            0.017401672723795,
            -0.000000000000000,
            -0.021326288014094,
            -0.038864577698385,
            -0.044461646130195,
            -0.032086735195224,
            0.000000000000000,
            0.048195044099132,
            0.104024018060900,
            0.156088600937589,
            0.192975117540854,
            0.206296448858432,
            0.192975117540854,
            0.156088600937589,
            0.104024018060900,
            0.048195044099132,
            0.000000000000000,
            -0.032086735195224,
            -0.044461646130195,
            -0.038864577698385,
            -0.021326288014094,
            -0.000000000000000,
            0.017401672723795,
            0.025769990777325,
            0.023747450501076,
            0.013603479314519,
            0.000000000000000,
            -0.011854672510536,
            -0.018012503465795,
            -0.016971338211852,
            -0.009911799640908,
            -0.000000000000000,
            0.008918974713071,
            0.013734778010055,
            0.013097171982050,
            0.007732248941872,
            0.000000000000000,
            -0.007088528955861,
            -0.011004384551196,
            -0.010571118410301,
            -0.006283179247108,
            -0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth)
