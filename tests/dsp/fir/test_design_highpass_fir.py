import numpy as np

import sdr

from .helper import verify_impulse_response


def test_custom():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.6, Window="custom", CustomWindow=ones(1,31));
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.6, window=None)
    h_truth = np.array(
        [
            -0.000000000000000,
            -0.021296377102499,
            0.014174337570163,
            0.015355532367676,
            -0.027104479948636,
            0.000000000000000,
            0.033127697714999,
            -0.023033298551514,
            -0.026323769773159,
            0.049691546572499,
            -0.000000000000000,
            -0.074537319858748,
            0.061422129470705,
            0.092133194206057,
            -0.298149279434992,
            0.409080173534898,
            -0.298149279434992,
            0.092133194206057,
            0.061422129470705,
            -0.074537319858748,
            -0.000000000000000,
            0.049691546572499,
            -0.026323769773159,
            -0.023033298551514,
            0.033127697714999,
            0.000000000000000,
            -0.027104479948636,
            0.015355532367676,
            0.014174337570163,
            -0.021296377102499,
            -0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-2)


def test_hamming():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.6, Window="hamming");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.6, window="hamming")
    h_truth = np.array(
        [
            -0.000000000000000,
            -0.001945091992008,
            0.001721821293285,
            0.002614161566728,
            -0.006383277156653,
            0.000000000000000,
            0.013367603470448,
            -0.011491810105267,
            -0.015701000688315,
            0.034379658817363,
            -0.000000000000000,
            -0.064092583853756,
            0.056823848953201,
            0.089728904423820,
            -0.299355096250098,
            0.400665723042505,
            -0.299355096250098,
            0.089728904423820,
            0.056823848953201,
            -0.064092583853756,
            -0.000000000000000,
            0.034379658817363,
            -0.015701000688315,
            -0.011491810105267,
            0.013367603470448,
            0.000000000000000,
            -0.006383277156653,
            0.002614161566728,
            0.001721821293285,
            -0.001945091992008,
            -0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-2)


def test_hann():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.6, Window="hann");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.6, window="hann")
    h_truth = np.array(
        [
            0,
            -0.000236294439412,
            0.000622213219915,
            0.001489046458504,
            -0.004553510274733,
            0.000000000000000,
            0.011622706400752,
            -0.010472649512177,
            -0.014762966769104,
            0.033027556557890,
            -0.000000000000000,
            -0.063170270983013,
            0.056417801993033,
            0.089516595811128,
            -0.299461574802337,
            0.399922692679108,
            -0.299461574802337,
            0.089516595811128,
            0.056417801993033,
            -0.063170270983013,
            -0.000000000000000,
            0.033027556557890,
            -0.014762966769104,
            -0.010472649512177,
            0.011622706400752,
            0.000000000000000,
            -0.004553510274733,
            0.001489046458504,
            0.000622213219915,
            -0.000236294439412,
            0,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-2)


def test_blackman():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.6, Window="blackman");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.6, window="blackman")
    h_truth = np.array(
        [
            0.000000000000000,
            -0.000086710911001,
            0.000241189877321,
            0.000627005353209,
            -0.002121199210232,
            0.000000000000000,
            0.006753544519460,
            -0.006770520007181,
            -0.010531721911776,
            0.025722476013136,
            -0.000000000000000,
            -0.056477070594217,
            0.052965308609887,
            0.087032611660652,
            -0.297341999221999,
            0.399974171645483,
            -0.297341999221999,
            0.087032611660652,
            0.052965308609887,
            -0.056477070594217,
            -0.000000000000000,
            0.025722476013136,
            -0.010531721911776,
            -0.006770520007181,
            0.006753544519460,
            0.000000000000000,
            -0.002121199210232,
            0.000627005353209,
            0.000241189877321,
            -0.000086710911001,
            0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-2)


def test_blackman_harris():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.6, Window="blackman-harris");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.6, window="blackman-harris")
    h_truth = np.array(
        [
            -0.000000000000000,
            -0.000016146238441,
            0.000051816823634,
            0.000171231503240,
            -0.000734860851709,
            0.000000000000000,
            0.003464983514214,
            -0.004048962387876,
            -0.007162885253001,
            0.019470329143051,
            -0.000000000000000,
            -0.050046307500342,
            0.049508360996355,
            0.084472105217575,
            -0.295128585300377,
            0.399997840667355,
            -0.295128585300377,
            0.084472105217575,
            0.049508360996355,
            -0.050046307500343,
            -0.000000000000000,
            0.019470329143051,
            -0.007162885253001,
            -0.004048962387876,
            0.003464983514214,
            0.000000000000000,
            -0.000734860851709,
            0.000171231503240,
            0.000051816823634,
            -0.000016146238441,
            -0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-2)


def test_chebyshev():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.6, Window="chebyshev");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.6, window="chebyshev")
    h_truth = np.array(
        [
            -0.000000000000000,
            -0.000752076100226,
            0.000916443118359,
            0.001632478996360,
            -0.004382119034992,
            0.000000000000000,
            0.010408329209072,
            -0.009411038611520,
            -0.013451970359603,
            0.030656208530135,
            -0.000000000000000,
            -0.060885380936548,
            0.055219010370041,
            0.088634054185984,
            -0.298641156363278,
            0.400114433992432,
            -0.298641156363278,
            0.088634054185984,
            0.055219010370041,
            -0.060885380936548,
            -0.000000000000000,
            0.030656208530135,
            -0.013451970359603,
            -0.009411038611520,
            0.010408329209072,
            0.000000000000000,
            -0.004382119034992,
            0.001632478996360,
            0.000916443118359,
            -0.000752076100226,
            -0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-2)


# NOTE: Added extra Kaiser window tests to reverse engineer MATLAB's beta parameter


def test_kaiser_0p2():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.2, Window="kaiser");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.2, window="kaiser", atten=30)
    h_truth = np.array(
        [
            -0.000000000000000,
            -0.011950226321326,
            -0.020979087341470,
            -0.022884229846219,
            -0.015526616893572,
            0.000000000000000,
            0.019185418679046,
            0.035084883133250,
            0.040260621415843,
            0.029131943294422,
            -0.000000000000000,
            -0.043934849781445,
            -0.094963344913279,
            -0.142637216533571,
            -0.176451916910291,
            0.811329244037228,
            -0.176451916910291,
            -0.142637216533571,
            -0.094963344913279,
            -0.043934849781445,
            -0.000000000000000,
            0.029131943294422,
            0.040260621415843,
            0.035084883133250,
            0.019185418679046,
            0.000000000000000,
            -0.015526616893572,
            -0.022884229846219,
            -0.020979087341470,
            -0.011950226321326,
            -0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-1)


def test_kaiser_0p4():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.4, Window="kaiser");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.4, window="kaiser", atten=21.542)
    h_truth = np.array(
        [
            0.000000000000000,
            0.021071823591858,
            0.014129841884860,
            -0.015412994098399,
            -0.027378069951350,
            0.000000000000000,
            0.033829631930849,
            0.023630382158792,
            -0.027116347128579,
            -0.051368330061884,
            0.000000000000000,
            0.077470282088072,
            0.063959743655277,
            -0.096069065527554,
            -0.311137510336826,
            0.588781223589765,
            -0.311137510336826,
            -0.096069065527554,
            0.063959743655277,
            0.077470282088072,
            0.000000000000000,
            -0.051368330061884,
            -0.027116347128579,
            0.023630382158792,
            0.033829631930849,
            0.000000000000000,
            -0.027378069951350,
            -0.015412994098399,
            0.014129841884860,
            0.021071823591858,
            0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-1)


def test_kaiser_0p6():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.6, Window="kaiser");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.6, window="kaiser", atten=60)
    h_truth = np.array(
        [
            -0.000000000000000,
            -0.000752076100226,
            0.000916443118359,
            0.001632478996360,
            -0.004382119034992,
            0.000000000000000,
            0.010408329209072,
            -0.009411038611520,
            -0.013451970359603,
            0.030656208530135,
            -0.000000000000000,
            -0.060885380936548,
            0.055219010370041,
            0.088634054185984,
            -0.298641156363278,
            0.400114433992432,
            -0.298641156363278,
            0.088634054185984,
            0.055219010370041,
            -0.060885380936548,
            -0.000000000000000,
            0.030656208530135,
            -0.013451970359603,
            -0.009411038611520,
            0.010408329209072,
            0.000000000000000,
            -0.004382119034992,
            0.001632478996360,
            0.000916443118359,
            -0.000752076100226,
            -0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-2)


def test_kaiser_0p8():
    """
    MATLAB:
        >> h = designHighpassFIR(FilterOrder=30, CutoffFrequency=0.8, Window="kaiser");
        >> transpose(h)
    """
    h = sdr.design_highpass_fir(30, 0.8, window="kaiser", atten=20)
    h_truth = np.array(
        [
            0.000000000000000,
            0.012750260766754,
            -0.022383578943180,
            0.024416265444693,
            -0.016566080749890,
            0.000000000000000,
            0.020469829147977,
            -0.037433718566630,
            0.042955958145120,
            -0.031082245947370,
            0.000000000000000,
            0.046876165890009,
            -0.101320876975093,
            0.152186381826223,
            -0.188264882430304,
            0.194793044783381,
            -0.188264882430304,
            0.152186381826223,
            -0.101320876975093,
            0.046876165890009,
            0.000000000000000,
            -0.031082245947370,
            0.042955958145120,
            -0.037433718566630,
            0.020469829147977,
            0.000000000000000,
            -0.016566080749890,
            0.024416265444693,
            -0.022383578943180,
            0.012750260766754,
            0.000000000000000,
        ]
    )
    verify_impulse_response(h, h_truth, atol=1e-2)
