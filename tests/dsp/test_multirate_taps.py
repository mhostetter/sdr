import numpy as np

import sdr


def test_3_1():
    """
    Matlab:
        >> transpose(designMultirateFIR(3, 1))
    """
    h = sdr.multirate_taps(3, 1)
    h_truth = np.array(
        [
            0,
            -0.000129061486200,
            -0.000228040316281,
            0,
            0.000554613738572,
            0.000802607430267,
            0,
            -0.001529123502789,
            -0.002036387806756,
            0,
            0.003422307059794,
            0.004339283470393,
            0,
            -0.006731093723524,
            -0.008256378144419,
            0,
            0.012112540258687,
            0.014513004401233,
            0,
            -0.020472158351583,
            -0.024139252923979,
            0,
            0.033212514261835,
            0.038823089850463,
            0,
            -0.052964001879090,
            -0.061983702455504,
            0,
            0.086061041748177,
            0.102712774109103,
            0,
            -0.154048515452570,
            -0.197567026018057,
            0,
            0.408837525145054,
            0.824655115145336,
            1.000000000000000,
            0.824655115145336,
            0.408837525145054,
            0,
            -0.197567026018057,
            -0.154048515452570,
            0,
            0.102712774109103,
            0.086061041748177,
            0,
            -0.061983702455504,
            -0.052964001879090,
            0,
            0.038823089850463,
            0.033212514261835,
            0,
            -0.024139252923979,
            -0.020472158351583,
            0,
            0.014513004401233,
            0.012112540258687,
            0,
            -0.008256378144419,
            -0.006731093723524,
            0,
            0.004339283470393,
            0.003422307059794,
            0,
            -0.002036387806756,
            -0.001529123502789,
            0,
            0.000802607430267,
            0.000554613738572,
            0,
            -0.000228040316281,
            -0.000129061486200,
        ]
    )
    np.testing.assert_array_almost_equal(h, h_truth)


def test_1_3():
    """
    Matlab:
        >> transpose(designMultirateFIR(1, 3))
    """
    h = sdr.multirate_taps(1, 3)
    h_truth = np.array(
        [
            0,
            -0.000043020495400,
            -0.000076013438760,
            0,
            0.000184871246191,
            0.000267535810089,
            0,
            -0.000509707834263,
            -0.000678795935585,
            0,
            0.001140769019931,
            0.001446427823464,
            0,
            -0.002243697907841,
            -0.002752126048140,
            0,
            0.004037513419562,
            0.004837668133744,
            0,
            -0.006824052783861,
            -0.008046417641326,
            0,
            0.011070838087278,
            0.012941029950154,
            0,
            -0.017654667293030,
            -0.020661234151835,
            0,
            0.028687013916059,
            0.034237591369701,
            0,
            -0.051349505150857,
            -0.065855675339352,
            0,
            0.136279175048351,
            0.274885038381779,
            0.333333333333333,
            0.274885038381779,
            0.136279175048351,
            0,
            -0.065855675339352,
            -0.051349505150857,
            0,
            0.034237591369701,
            0.028687013916059,
            0,
            -0.020661234151835,
            -0.017654667293030,
            0,
            0.012941029950154,
            0.011070838087278,
            0,
            -0.008046417641326,
            -0.006824052783861,
            0,
            0.004837668133744,
            0.004037513419562,
            0,
            -0.002752126048140,
            -0.002243697907841,
            0,
            0.001446427823464,
            0.001140769019931,
            0,
            -0.000678795935585,
            -0.000509707834263,
            0,
            0.000267535810089,
            0.000184871246191,
            0,
            -0.000076013438760,
            -0.000043020495400,
        ]
    )
    np.testing.assert_array_almost_equal(h, h_truth)


def test_3_2():
    """
    Matlab:
        >> transpose(designMultirateFIR(3, 2))
    """
    h = sdr.multirate_taps(3, 2)
    h_truth = np.array(
        [
            0,
            -0.000129061486200,
            -0.000228040316281,
            0,
            0.000554613738572,
            0.000802607430267,
            0,
            -0.001529123502789,
            -0.002036387806756,
            0,
            0.003422307059794,
            0.004339283470393,
            0,
            -0.006731093723524,
            -0.008256378144419,
            0,
            0.012112540258687,
            0.014513004401233,
            0,
            -0.020472158351583,
            -0.024139252923979,
            0,
            0.033212514261835,
            0.038823089850463,
            0,
            -0.052964001879090,
            -0.061983702455504,
            0,
            0.086061041748177,
            0.102712774109103,
            0,
            -0.154048515452570,
            -0.197567026018057,
            0,
            0.408837525145054,
            0.824655115145336,
            1.000000000000000,
            0.824655115145336,
            0.408837525145054,
            0,
            -0.197567026018057,
            -0.154048515452570,
            0,
            0.102712774109103,
            0.086061041748177,
            0,
            -0.061983702455504,
            -0.052964001879090,
            0,
            0.038823089850463,
            0.033212514261835,
            0,
            -0.024139252923979,
            -0.020472158351583,
            0,
            0.014513004401233,
            0.012112540258687,
            0,
            -0.008256378144419,
            -0.006731093723524,
            0,
            0.004339283470393,
            0.003422307059794,
            0,
            -0.002036387806756,
            -0.001529123502789,
            0,
            0.000802607430267,
            0.000554613738572,
            0,
            -0.000228040316281,
            -0.000129061486200,
        ]
    )
    np.testing.assert_array_almost_equal(h, h_truth)


def test_2_3():
    """
    Matlab:
        >> transpose(designMultirateFIR(2, 3))
    """
    h = sdr.multirate_taps(2, 3)
    h_truth = np.array(
        [
            0,
            -0.000174137520857,
            -0.000366708038052,
            0,
            0.001122900372321,
            0.001769121482693,
            0,
            -0.003859968856392,
            -0.005434204033917,
            0,
            0.010039305214645,
            0.013269365480923,
            0,
            -0.022241818593264,
            -0.028356158355118,
            0,
            0.045338829724121,
            0.057277484815620,
            0,
            -0.093880456082982,
            -0.124394884726277,
            0,
            0.268718752235985,
            0.547826969526781,
            0.666666666666667,
            0.547826969526781,
            0.268718752235985,
            0,
            -0.124394884726277,
            -0.093880456082982,
            0,
            0.057277484815620,
            0.045338829724121,
            0,
            -0.028356158355118,
            -0.022241818593264,
            0,
            0.013269365480923,
            0.010039305214645,
            0,
            -0.005434204033917,
            -0.003859968856392,
            0,
            0.001769121482693,
            0.001122900372321,
            0,
            -0.000366708038052,
            -0.000174137520857,
        ]
    )
    np.testing.assert_array_almost_equal(h, h_truth)


def test_3_2_20():
    """
    Matlab:
        >> transpose(designMultirateFIR(3, 2, 20))
    """
    h = sdr.multirate_taps(3, 2, half_length=20)
    h_truth = np.array(
        [
            0,
            -0.000059208485371,
            -0.000087659045197,
            0,
            0.000166943040767,
            0.000220024822831,
            0,
            -0.000359420790557,
            -0.000448581351489,
            0,
            0.000673740223393,
            0.000813233650588,
            0,
            -0.001155644954685,
            -0.001362757726192,
            0,
            0.001860218882230,
            0.002155528473497,
            0,
            -0.002852761693505,
            -0.003260522420350,
            0,
            0.004210192149312,
            0.004759014367426,
            0,
            -0.006023583128787,
            -0.006747692120028,
            0,
            0.008402874043893,
            0.009344451181124,
            0,
            -0.011485623052311,
            -0.012699150624073,
            0,
            0.015453289399251,
            0.017013695013071,
            0,
            -0.020562041365025,
            -0.022580416683981,
            0,
            0.027203297834473,
            0.029858872457129,
            0,
            -0.036030459417891,
            -0.039641106313708,
            0,
            0.048250528796300,
            0.053447573757855,
            0,
            -0.066394400383963,
            -0.074636930835766,
            0,
            0.096820694244620,
            0.112369359262575,
            0,
            -0.161231251341591,
            -0.203401036770916,
            0,
            0.411814063053746,
            0.826150914617860,
            1.000000000000000,
            0.826150914617860,
            0.411814063053746,
            0,
            -0.203401036770916,
            -0.161231251341591,
            0,
            0.112369359262575,
            0.096820694244620,
            0,
            -0.074636930835766,
            -0.066394400383963,
            0,
            0.053447573757855,
            0.048250528796300,
            0,
            -0.039641106313708,
            -0.036030459417891,
            0,
            0.029858872457129,
            0.027203297834473,
            0,
            -0.022580416683981,
            -0.020562041365025,
            0,
            0.017013695013071,
            0.015453289399251,
            0,
            -0.012699150624073,
            -0.011485623052311,
            0,
            0.009344451181124,
            0.008402874043893,
            0,
            -0.006747692120028,
            -0.006023583128787,
            0,
            0.004759014367426,
            0.004210192149312,
            0,
            -0.003260522420350,
            -0.002852761693505,
            0,
            0.002155528473497,
            0.001860218882230,
            0,
            -0.001362757726192,
            -0.001155644954685,
            0,
            0.000813233650588,
            0.000673740223393,
            0,
            -0.000448581351489,
            -0.000359420790557,
            0,
            0.000220024822831,
            0.000166943040767,
            0,
            -0.000087659045197,
            -0.000059208485371,
        ]
    )
    np.testing.assert_array_almost_equal(h, h_truth)


def test_2_3_20():
    """
    Matlab:
        >> transpose(designMultirateFIR(2, 3, 20))
    """
    h = sdr.multirate_taps(2, 3, half_length=20)
    h_truth = np.array(
        [
            -0.000036875262276,
            0,
            0.000123211694079,
            0.000192238091736,
            0,
            -0.000402221383424,
            -0.000552790676823,
            0,
            0.000973189646384,
            0.001255979430105,
            0,
            -0.002003721221124,
            -0.002485429739482,
            0,
            0.003711880992832,
            0.004478058436476,
            0,
            -0.006377522811295,
            -0.007539111892392,
            0,
            0.010369833477897,
            0.012079679222752,
            0,
            -0.016217059326199,
            -0.018711937460690,
            0,
            0.024786453606506,
            0.028499277615611,
            0,
            -0.037786068113656,
            -0.043685850618795,
            0,
            0.059427156001323,
            0.070333979821335,
            0,
            -0.104100759309539,
            -0.132855698628245,
            0,
            0.273146144533273,
            0.550065955631464,
            0.666666666666667,
            0.550065955631464,
            0.273146144533273,
            0,
            -0.132855698628245,
            -0.104100759309539,
            0,
            0.070333979821335,
            0.059427156001323,
            0,
            -0.043685850618795,
            -0.037786068113656,
            0,
            0.028499277615611,
            0.024786453606506,
            0,
            -0.018711937460690,
            -0.016217059326199,
            0,
            0.012079679222752,
            0.010369833477897,
            0,
            -0.007539111892392,
            -0.006377522811295,
            0,
            0.004478058436476,
            0.003711880992832,
            0,
            -0.002485429739482,
            -0.002003721221124,
            0,
            0.001255979430105,
            0.000973189646384,
            0,
            -0.000552790676823,
            -0.000402221383424,
            0,
            0.000192238091736,
            0.000123211694079,
            0,
            -0.000036875262276,
        ]
    )
    np.testing.assert_array_almost_equal(h, h_truth)


def test_3_2_15_120():
    """
    Matlab:
        >> transpose(designMultirateFIR(3, 2, 15, 120))
    """
    h = sdr.multirate_taps(3, 2, half_length=15, A_stop=120)
    h_truth = np.array(
        [
            0,
            0.000002676045758,
            0.000006410483976,
            0,
            -0.000023644508683,
            -0.000040263384110,
            0,
            0.000101018855687,
            0.000151625551338,
            0,
            -0.000315302537164,
            -0.000439935362465,
            0,
            0.000811833772677,
            0.001077599093561,
            0,
            -0.001825402639218,
            -0.002334661758197,
            0,
            0.003704572811816,
            0.004603035790409,
            0,
            -0.006937209966982,
            -0.008424253360755,
            0,
            0.012189051260850,
            0.014538611056249,
            0,
            -0.020392281670997,
            -0.024007820232820,
            0,
            0.032988090780629,
            0.038560182084736,
            0,
            -0.052646509011652,
            -0.061652043784683,
            0,
            0.085730153097674,
            0.102397057144270,
            0,
            -0.153790929847050,
            -0.197350766935499,
            0,
            0.408722350526125,
            0.824596624263035,
            1.000000000000000,
            0.824596624263035,
            0.408722350526125,
            0,
            -0.197350766935499,
            -0.153790929847050,
            0,
            0.102397057144270,
            0.085730153097674,
            0,
            -0.061652043784683,
            -0.052646509011652,
            0,
            0.038560182084736,
            0.032988090780629,
            0,
            -0.024007820232820,
            -0.020392281670997,
            0,
            0.014538611056249,
            0.012189051260850,
            0,
            -0.008424253360755,
            -0.006937209966982,
            0,
            0.004603035790409,
            0.003704572811816,
            0,
            -0.002334661758197,
            -0.001825402639218,
            0,
            0.001077599093561,
            0.000811833772677,
            0,
            -0.000439935362465,
            -0.000315302537164,
            0,
            0.000151625551338,
            0.000101018855687,
            0,
            -0.000040263384110,
            -0.000023644508683,
            0,
            0.000006410483976,
            0.000002676045758,
        ]
    )
    np.testing.assert_array_almost_equal(h, h_truth)


def test_2_3_15_120():
    """
    Matlab:
        >> transpose(designMultirateFIR(2, 3, 15, 120))
    """
    h = sdr.multirate_taps(2, 3, half_length=15, A_stop=120)
    h_truth = np.array(
        [
            0,
            -0.000004262029874,
            -0.000012951337207,
            0,
            0.000065092700518,
            0.000124233212068,
            0,
            -0.000373356322620,
            -0.000602580396500,
            0,
            0.001411185167795,
            0.002067186112711,
            0,
            -0.004133860467761,
            -0.005672466561695,
            0,
            0.010163640799895,
            0.013320727361108,
            0,
            -0.022135902895218,
            -0.028176036055362,
            0,
            0.045044536605515,
            0.056951737114597,
            0,
            -0.093555937660426,
            -0.124103825507534,
            0,
            0.268550446613621,
            0.547739799629944,
            0.666666666666667,
            0.547739799629944,
            0.268550446613621,
            0,
            -0.124103825507534,
            -0.093555937660426,
            0,
            0.056951737114597,
            0.045044536605515,
            0,
            -0.028176036055362,
            -0.022135902895218,
            0,
            0.013320727361108,
            0.010163640799895,
            0,
            -0.005672466561695,
            -0.004133860467761,
            0,
            0.002067186112711,
            0.001411185167795,
            0,
            -0.000602580396500,
            -0.000373356322620,
            0,
            0.000124233212068,
            0.000065092700518,
            0,
            -0.000012951337207,
            -0.000004262029874,
        ]
    )
    np.testing.assert_array_almost_equal(h, h_truth)
