import numpy as np
import pytest

import sdr


def test_exceptions():
    with pytest.raises(TypeError):
        sdr.gaussian("invalid", 4, 6)
    with pytest.raises(TypeError):
        sdr.gaussian(0.5, 4.0, 6)
    with pytest.raises(TypeError):
        sdr.gaussian(0.5, 4, 6.0)

    with pytest.raises(ValueError):
        # Time-bandwidth product must be non-negative
        sdr.gaussian(-0.1, 4, 6)
    with pytest.raises(ValueError):
        # Need at least 2 symbols
        sdr.gaussian(0.5, 1, 4)
    with pytest.raises(ValueError):
        # Need at least 1 samples per symbol
        sdr.gaussian(0.5, 6, 1)
    with pytest.raises(ValueError):
        # The filter must have even order
        sdr.gaussian(0.5, 3, 5)


def test_0p1_4_8():
    """
    Matlab:
        >> h = gaussdesign(0.1, 4, 8); h'
    """
    h = sdr.gaussian(0.1, 4, 8)
    h_truth = np.array(
        [
            0.013681118327446,
            0.015704625974656,
            0.017867701683528,
            0.020148600466195,
            0.022519366769891,
            0.024946094330480,
            0.027389496145141,
            0.029805789007623,
            0.032147877101139,
            0.034366798206737,
            0.036413375794617,
            0.038240002357488,
            0.039802465488123,
            0.041061719828662,
            0.041985506159210,
            0.042549724053551,
            0.042739476611022,
            0.042549724053551,
            0.041985506159210,
            0.041061719828662,
            0.039802465488123,
            0.038240002357488,
            0.036413375794617,
            0.034366798206737,
            0.032147877101139,
            0.029805789007623,
            0.027389496145141,
            0.024946094330480,
            0.022519366769891,
            0.020148600466195,
            0.017867701683528,
            0.015704625974656,
            0.013681118327446,
        ]
    )
    np.testing.assert_almost_equal(h, h_truth)


def test_0p2_5_8():
    """
    Matlab:
        >> h = gaussdesign(0.2, 5, 8); h'
    """
    h = sdr.gaussian(0.2, 5, 8)
    h_truth = np.array(
        [
            0.000060917392374,
            0.000121956162037,
            0.000235616977264,
            0.000439288464512,
            0.000790375383428,
            0.001372326340958,
            0.002299438406175,
            0.003718146946857,
            0.005801919598281,
            0.008736897688527,
            0.012696475571440,
            0.017805308396475,
            0.024096624308882,
            0.031470475177999,
            0.039663476898623,
            0.048241260898607,
            0.056622221831106,
            0.064135066691205,
            0.070104287857116,
            0.073949288656258,
            0.075277260703753,
            0.073949288656258,
            0.070104287857116,
            0.064135066691205,
            0.056622221831106,
            0.048241260898607,
            0.039663476898623,
            0.031470475177999,
            0.024096624308882,
            0.017805308396475,
            0.012696475571440,
            0.008736897688527,
            0.005801919598281,
            0.003718146946857,
            0.002299438406175,
            0.001372326340958,
            0.000790375383428,
            0.000439288464512,
            0.000235616977264,
            0.000121956162037,
            0.000060917392374,
        ]
    )
    np.testing.assert_almost_equal(h, h_truth)


def test_0p3_4_9():
    """
    Matlab:
        >> h = gaussdesign(0.3, 4, 9); h'
    """
    h = sdr.gaussian(0.3, 4, 9)
    h_truth = np.array(
        [
            0.000003541513313,
            0.000010719008155,
            0.000030453454794,
            0.000081214725312,
            0.000203305550510,
            0.000477727163477,
            0.001053724021293,
            0.002181675073694,
            0.004240035602427,
            0.007735086616445,
            0.013245766765738,
            0.021291451543500,
            0.032125484167062,
            0.045499889020253,
            0.060490508796810,
            0.075488428072829,
            0.088427993553467,
            0.097233384798858,
            0.100359221104126,
            0.097233384798858,
            0.088427993553467,
            0.075488428072829,
            0.060490508796810,
            0.045499889020253,
            0.032125484167062,
            0.021291451543500,
            0.013245766765738,
            0.007735086616445,
            0.004240035602427,
            0.002181675073694,
            0.001053724021293,
            0.000477727163477,
            0.000203305550510,
            0.000081214725312,
            0.000030453454794,
            0.000010719008155,
            0.000003541513313,
        ]
    )
    np.testing.assert_almost_equal(h, h_truth)
