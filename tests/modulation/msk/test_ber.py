import numpy as np

import sdr


def test_coherent_precoded():
    """
    Matlab:
        >> ebn0 = -10:0.5:10;
        >> [ber, ser] = berawgn(ebn0, 'msk', 'on', 'coherent');
        >> ber'
    """
    msk = sdr.MSK()
    ebn0 = np.arange(-10, 10.5, 0.5)
    ber = msk.ber(ebn0, diff_encoded=False)
    ber_truth = np.array(
        [
            0.327360423009289,
            0.317852409611940,
            0.307910470715079,
            0.297531198428390,
            0.286714527581443,
            0.275464401165253,
            0.263789505256266,
            0.251704067880203,
            0.239228710767672,
            0.226391335744460,
            0.213228018357620,
            0.199783870120343,
            0.186113817483389,
            0.172283230596987,
            0.158368318809598,
            0.144456193925057,
            0.130644488522829,
            0.117040408061573,
            0.103759095953406,
            0.090921205158365,
            0.078649603525143,
            0.067065198329613,
            0.056281951976541,
            0.046401275956071,
            0.037506128358926,
            0.029655287626037,
            0.022878407561085,
            0.017172541679246,
            0.012500818040738,
            0.008793810530561,
            0.005953867147779,
            0.003862231642810,
            0.002388290780933,
            0.001399804839480,
            0.000772674815378,
            0.000398796335159,
            0.000190907774076,
            0.000083999539179,
            0.000033627228420,
            0.000012108893277,
            0.000003872108216,
        ]
    )
    np.testing.assert_array_almost_equal(ber, ber_truth)


def test_coherent():
    """
    Matlab:
        >> ebn0 = -10:0.5:10;
        >> [ber, ser] = berawgn(ebn0, 'msk', 'off', 'coherent');
        >> ber'
    """
    msk = sdr.MSK()
    ebn0 = np.arange(-10, 10.5, 0.5)
    ber = msk.ber(ebn0, diff_encoded=True)
    ber_truth = np.array(
        [
            0.440391152912936,
            0.433644510631647,
            0.426203225478195,
            0.418012768780312,
            0.409018614510386,
            0.399167529711843,
            0.388409204345841,
            0.376698260185522,
            0.363996669424219,
            0.350276597688599,
            0.335523661089805,
            0.319740550720162,
            0.302950928850298,
            0.285203438104105,
            0.266575588814039,
            0.247177203923486,
            0.227153012282875,
            0.206683901884707,
            0.185986291920676,
            0.165309079221830,
            0.144927686780961,
            0.125134915005245,
            0.106228587716503,
            0.088496395091440,
            0.072198837388899,
            0.057551703083708,
            0.044709972057108,
            0.033755290983041,
            0.024689095178100,
            0.017432958853827,
            0.011836837227531,
            0.007694629619095,
            0.004765173696157,
            0.002795690771783,
            0.001544155578016,
            0.000797274593284,
            0.000381742656596,
            0.000167984966513,
            0.000067252195258,
            0.000024217493303,
            0.000007744186445,
        ]
    )
    np.testing.assert_array_almost_equal(ber, ber_truth)


# TODO: Haven't implemented a non-coherent detector yet

# def test_noncoherent_precoded():
#     """
#     Matlab:
#         >> ebn0 = -10:0.5:10;
#         >> [ber, ser] = berawgn(ebn0, 'msk', 'on', 'noncoherent');
#         >> ber'
#     """
#     msk = sdr.MSK()
#     ebn0 = np.arange(-10, 10.5, 0.5)
#     ber = msk.ber(ebn0, diff_encoded=False)
#     ber_truth = np.array(
#         [
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.500000000000000,
#             0.499612700988861,
#             0.450626107711857,
#             0.402209827021287,
#             0.354975699310523,
#             0.309534720484760,
#             0.266466787413241,
#             0.226289088138738,
#             0.189426339516325,
#             0.156186459247298,
#             0.126745051764460,
#             0.101141157825205,
#             0.079285102293315,
#             0.060977232332241,
#             0.045934342295104,
#             0.033819217448082,
#             0.024268499348794,
#             0.016915165801059,
#             0.011404021857376,
#             0.007400939316277,
#             0.004598202099537,
#         ]
#     )
#     np.testing.assert_array_almost_equal(ber, ber_truth)


# NOTE: Matlab doesn't support non-coherent conventional MSK
