"""
MATLAB:
    for M = [2 4 8 16]
        for map = ["bin", "gray"]
            disp(M)
            disp(map)
            phi = 2*pi*(rand - 0.5);
            s = [0:M-1 randi([0 M-1], 1, 2*M)];
            x = pskmod(s, M, phi, map);
            disp(phi)
            disp(s')
            disp(transpose(x))
        end
    end
"""
import numpy as np

import sdr


def test_bpsk_bin():
    phi = np.rad2deg(2.081994752721715)
    psk = sdr.PSK(2, phase_offset=phi, symbol_labels="bin")
    s = np.array([0, 1, 0, 1, 1, 0])
    x = psk.map_symbols(s)
    x_truth = np.array(
        [
            -0.489222815711927 + 0.872158836787711j,
            0.489222815711927 - 0.872158836787711j,
            -0.489222815711927 + 0.872158836787711j,
            0.489222815711927 - 0.872158836787711j,
            0.489222815711927 - 0.872158836787711j,
            -0.489222815711927 + 0.872158836787711j,
        ]
    )
    np.testing.assert_array_almost_equal(x, x_truth)


def test_bpsk_gray():
    phi = np.rad2deg(0.868610843867316)
    psk = sdr.PSK(2, phase_offset=phi, symbol_labels="gray")
    s = np.array([0, 1, 0, 0, 1, 1])
    x = psk.map_symbols(s)
    x_truth = np.array(
        [
            0.645887696950315 + 0.763432435077406j,
            -0.645887696950315 - 0.763432435077406j,
            0.645887696950315 + 0.763432435077406j,
            0.645887696950315 + 0.763432435077406j,
            -0.645887696950315 - 0.763432435077406j,
            -0.645887696950315 - 0.763432435077406j,
        ]
    )
    np.testing.assert_array_almost_equal(x, x_truth)


def test_qpsk_bin():
    phi = np.rad2deg(-1.389596143959194)
    psk = sdr.PSK(4, phase_offset=phi, symbol_labels="bin")
    s = np.array([0, 1, 2, 3, 2, 1, 0, 0, 1, 1, 1, 1])
    x = psk.map_symbols(s)
    x_truth = np.array(
        [
            0.180210236514886 - 0.983628116035348j,
            0.983628116035348 + 0.180210236514886j,
            -0.180210236514886 + 0.983628116035348j,
            -0.983628116035348 - 0.180210236514886j,
            -0.180210236514886 + 0.983628116035348j,
            0.983628116035348 + 0.180210236514886j,
            0.180210236514886 - 0.983628116035348j,
            0.180210236514886 - 0.983628116035348j,
            0.983628116035348 + 0.180210236514886j,
            0.983628116035348 + 0.180210236514886j,
            0.983628116035348 + 0.180210236514886j,
            0.983628116035348 + 0.180210236514886j,
        ]
    )
    np.testing.assert_array_almost_equal(x, x_truth)


def test_qpsk_gray():
    phi = np.rad2deg(-2.067775956920814)
    psk = sdr.PSK(4, phase_offset=phi, symbol_labels="gray")
    s = np.array([0, 1, 2, 3, 1, 2, 0, 2, 1, 1, 0, 0])
    x = psk.map_symbols(s)
    x_truth = np.array(
        [
            -0.476772731892120 - 0.879026599213087j,
            0.879026599213087 - 0.476772731892120j,
            -0.879026599213086 + 0.476772731892120j,
            0.476772731892120 + 0.879026599213087j,
            0.879026599213087 - 0.476772731892120j,
            -0.879026599213086 + 0.476772731892120j,
            -0.476772731892120 - 0.879026599213087j,
            -0.879026599213086 + 0.476772731892120j,
            0.879026599213087 - 0.476772731892120j,
            0.879026599213087 - 0.476772731892120j,
            -0.476772731892120 - 0.879026599213087j,
            -0.476772731892120 - 0.879026599213087j,
        ]
    )
    np.testing.assert_array_almost_equal(x, x_truth)


def test_8psk_bin():
    phi = np.rad2deg(0.731496800445211)
    psk = sdr.PSK(8, phase_offset=phi, symbol_labels="bin")
    s = np.array([0, 1, 2, 3, 4, 5, 6, 7, 2, 4, 7, 5, 5, 7, 6, 4, 7, 0, 2, 7, 6, 3, 5, 3])
    x = psk.map_symbols(s)
    x_truth = np.array(
        [
            0.744175397202497 + 0.667984264933319j,
            0.053875266293817 + 0.998547673214339j,
            -0.667984264933319 + 0.744175397202496j,
            -0.998547673214339 + 0.053875266293817j,
            -0.744175397202497 - 0.667984264933319j,
            -0.053875266293817 - 0.998547673214339j,
            0.667984264933319 - 0.744175397202497j,
            0.998547673214339 - 0.053875266293817j,
            -0.667984264933319 + 0.744175397202496j,
            -0.744175397202497 - 0.667984264933319j,
            0.998547673214339 - 0.053875266293817j,
            -0.053875266293817 - 0.998547673214339j,
            -0.053875266293817 - 0.998547673214339j,
            0.998547673214339 - 0.053875266293817j,
            0.667984264933319 - 0.744175397202497j,
            -0.744175397202497 - 0.667984264933319j,
            0.998547673214339 - 0.053875266293817j,
            0.744175397202497 + 0.667984264933319j,
            -0.667984264933319 + 0.744175397202496j,
            0.998547673214339 - 0.053875266293817j,
            0.667984264933319 - 0.744175397202497j,
            -0.998547673214339 + 0.053875266293817j,
            -0.053875266293817 - 0.998547673214339j,
            -0.998547673214339 + 0.053875266293817j,
        ]
    )
    np.testing.assert_array_almost_equal(x, x_truth)


def test_8psk_gray():
    phi = np.rad2deg(-0.753044767435325)
    psk = sdr.PSK(8, phase_offset=phi, symbol_labels="gray")
    s = np.array([0, 1, 2, 3, 4, 5, 6, 7, 1, 3, 0, 3, 2, 7, 4, 6, 3, 3, 6, 7, 4, 7, 5, 4])
    x = psk.map_symbols(s)
    x_truth = np.array(
        [
            0.729610048983408 - 0.683863419421181j,
            0.999476674536154 + 0.032347751979880j,
            -0.032347751979879 + 0.999476674536154j,
            0.683863419421181 + 0.729610048983407j,
            0.032347751979880 - 0.999476674536154j,
            -0.683863419421181 - 0.729610048983407j,
            -0.729610048983407 + 0.683863419421181j,
            -0.999476674536154 - 0.032347751979879j,
            0.999476674536154 + 0.032347751979880j,
            0.683863419421181 + 0.729610048983407j,
            0.729610048983408 - 0.683863419421181j,
            0.683863419421181 + 0.729610048983407j,
            -0.032347751979879 + 0.999476674536154j,
            -0.999476674536154 - 0.032347751979879j,
            0.032347751979880 - 0.999476674536154j,
            -0.729610048983407 + 0.683863419421181j,
            0.683863419421181 + 0.729610048983407j,
            0.683863419421181 + 0.729610048983407j,
            -0.729610048983407 + 0.683863419421181j,
            -0.999476674536154 - 0.032347751979879j,
            0.032347751979880 - 0.999476674536154j,
            -0.999476674536154 - 0.032347751979879j,
            -0.683863419421181 - 0.729610048983407j,
            0.032347751979880 - 0.999476674536154j,
        ]
    )
    np.testing.assert_array_almost_equal(x, x_truth)


def test_16psk_bin():
    phi = np.rad2deg(2.945416924136862)
    psk = sdr.PSK(16, phase_offset=phi, symbol_labels="bin")
    s = np.array(
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            13,
            15,
            10,
            6,
            7,
            14,
            0,
            2,
            7,
            8,
            0,
            10,
            14,
            1,
            7,
            4,
            15,
            9,
            4,
            2,
            8,
            13,
            13,
            13,
            3,
            8,
            13,
            1,
            13,
            14,
            3,
            1,
        ]
    )
    x = psk.map_symbols(s)
    x_truth = np.array(
        [
            -0.980819174509401 + 0.194919847410922j,
            -0.980751356667143 - 0.195260790727577j,
            -0.831373035305500 - 0.555714743521279j,
            -0.555425705733926 - 0.831566164180560j,
            -0.194919847410923 - 0.980819174509401j,
            0.195260790727577 - 0.980751356667143j,
            0.555714743521279 - 0.831373035305500j,
            0.831566164180560 - 0.555425705733926j,
            0.980819174509401 - 0.194919847410923j,
            0.980751356667143 + 0.195260790727577j,
            0.831373035305500 + 0.555714743521279j,
            0.555425705733926 + 0.831566164180560j,
            0.194919847410923 + 0.980819174509401j,
            -0.195260790727576 + 0.980751356667143j,
            -0.555714743521279 + 0.831373035305500j,
            -0.831566164180560 + 0.555425705733926j,
            -0.195260790727576 + 0.980751356667143j,
            -0.831566164180560 + 0.555425705733926j,
            0.831373035305500 + 0.555714743521279j,
            0.555714743521279 - 0.831373035305500j,
            0.831566164180560 - 0.555425705733926j,
            -0.555714743521279 + 0.831373035305500j,
            -0.980819174509401 + 0.194919847410922j,
            -0.831373035305500 - 0.555714743521279j,
            0.831566164180560 - 0.555425705733926j,
            0.980819174509401 - 0.194919847410923j,
            -0.980819174509401 + 0.194919847410922j,
            0.831373035305500 + 0.555714743521279j,
            -0.555714743521279 + 0.831373035305500j,
            -0.980751356667143 - 0.195260790727577j,
            0.831566164180560 - 0.555425705733926j,
            -0.194919847410923 - 0.980819174509401j,
            -0.831566164180560 + 0.555425705733926j,
            0.980751356667143 + 0.195260790727577j,
            -0.194919847410923 - 0.980819174509401j,
            -0.831373035305500 - 0.555714743521279j,
            0.980819174509401 - 0.194919847410923j,
            -0.195260790727576 + 0.980751356667143j,
            -0.195260790727576 + 0.980751356667143j,
            -0.195260790727576 + 0.980751356667143j,
            -0.555425705733926 - 0.831566164180560j,
            0.980819174509401 - 0.194919847410923j,
            -0.195260790727576 + 0.980751356667143j,
            -0.980751356667143 - 0.195260790727577j,
            -0.195260790727576 + 0.980751356667143j,
            -0.555714743521279 + 0.831373035305500j,
            -0.555425705733926 - 0.831566164180560j,
            -0.980751356667143 - 0.195260790727577j,
        ]
    )
    np.testing.assert_array_almost_equal(x, x_truth)


def test_16psk_gray():
    phi = np.rad2deg(-0.162010924808285)
    psk = sdr.PSK(16, phase_offset=phi, symbol_labels="gray")
    s = np.array(
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            13,
            7,
            6,
            8,
            2,
            2,
            13,
            9,
            4,
            13,
            0,
            7,
            11,
            5,
            6,
            8,
            14,
            12,
            1,
            4,
            6,
            13,
            6,
            3,
            9,
            7,
            14,
            14,
            13,
            11,
            11,
            14,
        ]
    )
    x = psk.map_symbols(s)
    x_truth = np.array(
        [
            0.986904910574114 - 0.161303122984957j,
            0.973509280169397 + 0.228647504740512j,
            0.526696812452416 + 0.850053214659214j,
            0.811905686742490 + 0.583788622564029j,
            -0.850053214659214 + 0.526696812452416j,
            -0.583788622564029 + 0.811905686742490j,
            0.161303122984957 + 0.986904910574114j,
            -0.228647504740511 + 0.973509280169397j,
            0.850053214659214 - 0.526696812452417j,
            0.583788622564029 - 0.811905686742490j,
            -0.161303122984956 - 0.986904910574114j,
            0.228647504740512 - 0.973509280169397j,
            -0.986904910574114 + 0.161303122984957j,
            -0.973509280169397 - 0.228647504740511j,
            -0.526696812452416 - 0.850053214659214j,
            -0.811905686742490 - 0.583788622564029j,
            -0.973509280169397 - 0.228647504740511j,
            -0.228647504740511 + 0.973509280169397j,
            0.161303122984957 + 0.986904910574114j,
            0.850053214659214 - 0.526696812452417j,
            0.526696812452416 + 0.850053214659214j,
            0.526696812452416 + 0.850053214659214j,
            -0.973509280169397 - 0.228647504740511j,
            0.583788622564029 - 0.811905686742490j,
            -0.850053214659214 + 0.526696812452416j,
            -0.973509280169397 - 0.228647504740511j,
            0.986904910574114 - 0.161303122984957j,
            -0.228647504740511 + 0.973509280169397j,
            0.228647504740512 - 0.973509280169397j,
            -0.583788622564029 + 0.811905686742490j,
            0.161303122984957 + 0.986904910574114j,
            0.850053214659214 - 0.526696812452417j,
            -0.526696812452416 - 0.850053214659214j,
            -0.986904910574114 + 0.161303122984957j,
            0.973509280169397 + 0.228647504740512j,
            -0.850053214659214 + 0.526696812452416j,
            0.161303122984957 + 0.986904910574114j,
            -0.973509280169397 - 0.228647504740511j,
            0.161303122984957 + 0.986904910574114j,
            0.811905686742490 + 0.583788622564029j,
            0.583788622564029 - 0.811905686742490j,
            -0.228647504740511 + 0.973509280169397j,
            -0.526696812452416 - 0.850053214659214j,
            -0.526696812452416 - 0.850053214659214j,
            -0.973509280169397 - 0.228647504740511j,
            0.228647504740512 - 0.973509280169397j,
            0.228647504740512 - 0.973509280169397j,
            -0.526696812452416 - 0.850053214659214j,
        ]
    )
    np.testing.assert_array_almost_equal(x, x_truth)
